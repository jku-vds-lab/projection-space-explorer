{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/async/dist/async.js","webpack:///./node_modules/is-any-array/src/index.js","webpack:///./node_modules/jaccard/jaccard.js","webpack:///./node_modules/ml-array-max/lib-es6/index.js","webpack:///./node_modules/ml-array-min/lib-es6/index.js","webpack:///./node_modules/ml-array-rescale/lib-es6/index.js","webpack:///./node_modules/ml-levenberg-marquardt/src/errorCalculation.js","webpack:///./node_modules/ml-levenberg-marquardt/src/index.js","webpack:///./node_modules/ml-levenberg-marquardt/src/step.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/dc/cholesky.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/qr.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/decompositions.js","webpack:///./node_modules/ml-matrix/src/index.js","webpack:///./node_modules/ml-matrix/src/linearDependencies.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/wrap/wrap.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/components/Utility/UMAP/heap.ts","webpack:///./src/components/Utility/UMAP/matrix.ts","webpack:///./src/components/Utility/UMAP/nn_descent.ts","webpack:///./src/components/Utility/UMAP/tree.ts","webpack:///./src/components/Utility/UMAP/umap.ts","webpack:///./src/components/Utility/UMAP/utils.ts","webpack:///./src/components/workers/embeddings/worker_tsne.ts"],"names":["Object","defineProperty","exports","value","smallestFlagged","deheapSort","buildCandidates","uncheckedHeapPush","heapPush","rejectionSample","makeHeap","utils","require","nPoints","size","makeArrays","fillValue","empty","map","filled","heap","push","Infinity","nSamples","poolSize","random","result","zeros","i","rejectSample","j","tauRandInt","broken","k","row","weight","index","flag","Math","floor","indices","weights","isNew","length","iSwap","ic1","ic2","heapShape2","currentGraph","nVertices","nNeighbors","maxCandidates","candidateNeighbors","idx","isn","d","tauRand","indHeap","distHeap","indHeapIndex","distHeapIndex","temp1","temp2","siftDown","heap1","heap2","ceiling","elt","leftChild","rightChild","swap","ind","dist","minDist","resultIndex","getCSR","normalize","eliminateZeros","multiplyScalar","maximum","subtract","add","pairwiseMultiply","identity","transpose","SparseMatrix","rows","cols","values","dims","entries","Map","nRows","nCols","Error","col","checkDims","key","makeKey","set","withinBounds","has","get","defaultValue","ordered","rowColValues","forEach","sort","a","b","Array","from","fn","vals","getRows","getCols","output","matrix","elementWise","x","y","scalar","m","zeroIndices","Set","getValues","removeByZeroIndex","_","nextValues","filter","nextRows","nextCols","getDims","normType","normFn","normFns","colsByRow","nextMatrix","keys","norm","xs","max","sum","sqrt","op","visited","operate","nextValue","valuesA","rowsA","colsA","valuesB","rowsB","colsB","indptr","currentRow","initializeSearch","makeInitializedNNSearch","makeInitializations","makeNNDescent","tree","distanceFn","nNDescent","data","leafArray","nIters","delta","rho","rpTreeInit","n","c","p","q","cj","ck","sorted","initFromRandom","queryPoints","_heap","initFromTree","_tree","searchFlatTree","nnSearchFn","graph","initialization","tried","vertex","candidates","slice","candidate","forest","results","makeLeafArray","makeForest","FlatTree","hyperplanes","offsets","children","nTrees","leafSize","trees","range","makeTree","flattenTree","makeEuclideanTree","splitResults","euclideanRandomProjectionSplit","indicesLeft","indicesRight","hyperplane","offset","node","isLeaf","dim","leftIndex","rightIndex","left","right","hyperplaneOffset","hyperplaneVector","nLeft","nRight","side","margin","nNodes","numNodes","nLeaves","numLeaves","recursiveFlatten","nodeNum","leafNum","splice","oldNodeNum","res","rpForest","selectSide","point","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","initTransform","resetLocalConnectivity","fastIntersection","findABParams","cosine","euclidean","jaccard","UMAP","nnDescent","ml_levenberg_marquardt_1","SMOOTH_K_TOLERANCE","MIN_K_DIST_SCALE","params","learningRate","localConnectivity","nComponents","nEpochs","negativeSampleRate","repulsionStrength","setOpMixRatio","spread","transformQueueSize","targetMetric","targetWeight","targetNNeighbors","isInitialized","embedding","optimizationState","OptimizationState","setParam","undefined","X","initialEmbedding","initializeFit","optimizeLayout","callback","optimizeLayoutAsync","Y","knnIndices","knnDistances","getNEpochs","knnResults","nearestNeighbors","fuzzySimplicialSet","makeSearchFns","searchGraph","makeSearchGraph","processGraphForSupervisedProjection","initializeSimplicialSetEmbedding","head","tail","epochsPerSample","initializeOptimization","prepareForOptimizationLoop","search","knn","distances","neighbor","distance","toTransform","rawData","min","init","adjustedLocalConnectivity","smoothKNNDistance","sigmas","rhos","computeMembershipStrengths","normed","csrMatrix","eIndices","reshape2d","eWeights","graphMax","reduce","val","makeEpochsPerSample","assignOptimizationStateParameters","headEmbedding","tailEmbedding","currentEpoch","lt","farDist","categoricalSimplicialSetIntersection","optimizeLayoutStep","log2","log","metricNNDescent","round","sparseMatrix","prodMatrix","simplicialSet","target","unknownDist","intersection","nIter","bandwidth","lo","hi","mid","ithDistances","nonZeroDists","interpolation","psum","exp","abs","meanIthDistances","mean","meanDistances","graphValues","getAll","entry","w","state","assign","moveOther","epochsPerNegativeSample","epochOfNextNegativeSample","epochOfNextSample","initialAlpha","alpha","gamma","clipValue","current","other","distSquared","rDist","gradCoeff","pow","gradD","clip","nNegSamples","epochCallback","epochCompleted","shouldStop","isFinished","setTimeout","jaccard_dist","normX","normY","curve","xv","linear","yv","gte","initialValues","options","damping","gradientDifference","maxIterations","errorTolerance","default","parameterValues","z","max2d","ones","vec","item","v","len","input","count","umap_1","tsnejs","REVISION","global","assert","condition","message","getopt","opt","field","defaultval","hasOwnProperty","return_v","v_val","gaussRandom","u","r","randn","mu","std","isNaN","ArrayBuffer","arr","Float64Array","randn2d","s","uses","xhere","L2","x1","x2","D","x1i","x2i","xtod","N","d2p","perplexity","tol","Nf","Htarget","prow","betamin","betamax","beta","maxtries","num","pj","Hhere","Pout","N2","sign","tSNE","epsilon","iter","prototype","initDataRaw","dists","initSolution","initDataSeeded","seed","maxX","minX","maxY","minY","gains","ystep","initDataDist","getSolution","cg","costGrad","cost","grad","ymean","gid","sid","gainid","newgain","momval","newsid","debugGrad","yold","cg0","cg1","analytic","numerical","pmul","Qu","qsum","dsum","dhere","qu","NN","Q","gsum","premult","self","addEventListener","context","messageType","raw","tsne","distanceMetric","seeded","postMessage","console"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA,EAAE,KAA4D;AAC9D,EAAE,SAC8C;AAChD,CAAC,4BAA4B;;AAE7B;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,KAAK;AAChB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,8BAA8B,oBAAoB;AAClD,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,6BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB,EAAE;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,UAAU,gBAAgB;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB,wBAAwB,oBAAoB;AAC7E;AACA,WAAW,KAAK;AAChB;AACA,WAAW,SAAS;AACpB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,WAAW,sBAAsB,wBAAwB,oBAAoB;AAC7E;AACA,WAAW,KAAK;AAChB;AACA,WAAW,SAAS;AACpB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,IAAI,oBAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,mDAAmD,oBAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,SAAS;AACpB;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,2BAA2B,sDAAsD;AACjF,QAAQ;AACR,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,qDAAqD,8BAA8B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,8BAA8B;AACtE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,WAAW,OAAO,oDAAoD,oBAAoB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,2BAA2B,8CAA8C;AACzE;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,2BAA2B,8CAA8C;AACzE,QAAQ;AACR;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C,OAAO;AACpD;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD,+BAA+B;AACpF,aAAa,OAAO;AACpB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,WAAW,cAAc;AACzB;AACA,WAAW,OAAO;AAClB,gDAAgD;AAChD;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,eAAe,YAAY;AAC3B;AACA,IAAI;AACJ,eAAe,YAAY;AAC3B;AACA,IAAI;AACJ,eAAe,YAAY;AAC3B;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,EAAE;AACb,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,iCAAiC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,WAAW,iBAAiB;AAC5B,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,8BAA8B,wCAAwC;AACtE,YAAY;AACZ,8BAA8B,kDAAkD;AAChF;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,mCAAmC;AACtF,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,wCAAwC,gCAAgC;AACxE;AACA;AACA,kCAAkC,kCAAkC;AACpE;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,WAAW,cAAc;AACzB;AACA,WAAW,cAAc;AACzB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,wCAAwC,gCAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,WAAW,cAAc;AACzB;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,WAAW,cAAc;AACzB;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,WAAW,cAAc;AACzB;AACA,WAAW,cAAc;AACzB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,QAAQ;AACR,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA,yBAAyB,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,uBAAuB;AACzD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,SAAS;AACpB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,SAAS;AACpB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,gBAAgB;AAChB,IAAI;AACJ;AACA;;AAEA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,WAAW,SAAS;AACpB;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2BAA2B;AACxD;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,qBAAqB,oBAAoB;AACzC;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA,IAAI;AACJ,qCAAqC;AACrC,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,WAAW,sBAAsB;AACjC,qBAAqB,oBAAoB;AACzC;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA,eAAe,eAAe,IAAI;AAClC,cAAc,SAAS;AACvB;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,IAAI;AACJ,WAAW,YAAY;AACvB;AACA,IAAI;AACJ;AACA;AACA,YAAY,YAAY,EAAE,YAAY,EAAE,YAAY;AACpD;AACA,IAAI;AACJ;AACA;AACA,cAAc,YAAY;AAC1B;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,6BAA6B,+BAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM,+CAA+C;AAChE;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;;AAEA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,eAAe;AACtD,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC,eAAe;AACtD;AACA,SAAS;;AAET;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,WAAW,sBAAsB;AACjC,qBAAqB,oBAAoB;AACzC,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,8BAA8B,gCAAgC;AAC9D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,WAAW,sBAAsB;AACjC,WAAW,SAAS;AACpB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,WAAW,sBAAsB;AACjC,WAAW,SAAS;AACpB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA,WAAW,SAAS,GAAG,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,cAAc,UAAU,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA,iCAAiC,+BAA+B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,WAAW,cAAc,UAAU,sBAAsB;AACzD;AACA,WAAW,cAAc;AACzB;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,qBAAqB,oBAAoB;AACzC;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA,IAAI;AACJ,oCAAoC;AACpC,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA,4BAA4B;AAC5B,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA,WAAW,SAAS,4BAA4B,6BAA6B;AAC7E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,6BAA6B;AAChE;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA,WAAW,SAAS,iBAAiB,6BAA6B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA,WAAW,SAAS,iBAAiB,6BAA6B;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,EAAE;AACb;AACA,WAAW,cAAc;AACzB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ,8BAA8B;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,WAAW,cAAc;AACzB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,cAAc;AACzB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB,EAAE;AACvC;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,WAAW,SAAS;AACpB;AACA,WAAW,cAAc;AACzB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM,uCAAuC;AACxD;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kGAAkG;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4BAA4B;AAC5E;AACA;AACA;AACA,aAAa,SAAS;AACtcAAc;;AAE5D,CAAC;;;;;;;;;;;;;;ACx+KY;;AAEb;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,iDAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAAmC;;AAEnC;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;;AAEA;AACA,OAAO,mDAAO;AACd;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AC1BnB;AAAA;AAAA;AAAmC;;AAEnC;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;;AAEA;AACA,OAAO,mDAAO;AACd;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AC1BnB;AAAA;AAAA;AAAA;AAAA;AAAmC;AACJ;AACA;;AAE/B;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO,YAAY;AAC9B,WAAW,MAAM;AACjB;;AAEA;AACA;;AAEA,OAAO,mDAAO;AACd;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,SAAS,mDAAO;AAChB;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,4DAAG;AACtB,mBAAmB,4DAAG;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACzDvB;AAAA;AAAA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,YAAY;AACZ;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAkD;AACxB;;AAE1B;AACA;AACA,YAAY,kCAAkC;AAC9C,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,iEAAgB;;AAE9B;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qDAAI;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA,YAAY,iEAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;;AAEA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA,aAAa,gDAAM;AACnB;;AAEA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA,qBAAqB,WAAW;AAChC;AACA;;AAEA,aAAa,gDAAM;AACnB;;AAEA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gDAAM;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAO;AAC7B;AACA;;AAEA,eAAe,gDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACrGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;;AAED;AACC;AAKvB;AACoC;AACZ;AACA;AACY;AACM;AACM;AAClB;AACE;AACM;;AAEvC;AACf;;AAEA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,uBAAuB,eAAe;AACtC,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,2DAAa;AACnB;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,MAAM,2DAAa;AACnB,cAAc,4DAAc;AAC5B,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA,MAAM,2DAAa;AACnB,MAAM,2DAAa;AACnB,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,8DAAgB;AACtB;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,MAAM,8DAAgB;AACtB,cAAc,+DAAiB;AAC/B,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA,MAAM,8DAAgB;AACtB,MAAM,8DAAgB;AACtB,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,eAAe,4DAAc;AAC7B,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,eAAe,4DAAc;AAC7B,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,eAAe,4DAAc;AAC7B,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,eAAe,4DAAc;AAC7B,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,eAAe,+DAAiB;AAChC,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,eAAe,+DAAiB;AAChC,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,eAAe,+DAAiB;AAChC,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA,eAAe,+DAAiB;AAChC,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA,MAAM,2DAAa;AACnB,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA,MAAM,8DAAgB;AACtB,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,2DAAa;AACnB;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,2DAAa;AACnB;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,2DAAa;AACnB;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,2DAAa;AACnB;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,8DAAgB;AACtB;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,8DAAgB;AACtB;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,8DAAgB;AACtB;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,8DAAgB;AACtB;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,iBAAiB,sDAAQ;AACzB;AACA,iBAAiB,yDAAW;AAC5B;AACA,iBAAiB,oDAAM;AACvB;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,eAAe;AACtC,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA,OAAO;AACP,mDAAmD,KAAK;AACxD;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,OAAO;AAC5B,uBAAuB,OAAO;AAC9B;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,qBAAqB,gEAAO,kBAAkB,WAAW;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC,qBAAqB,gEAAO;AAC5B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,OAAO;AAC5B,uBAAuB,OAAO;AAC9B,yBAAyB,OAAO;AAChC,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,wDAAU;AAChB;AACA,4BAA4B,aAAa;AACzC,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,oBAAoB;AACzC,iCAAiC,gBAAgB;AACjD;AACA,4DAA4D,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,oBAAoB;AACzC,8BAA8B,aAAa;AAC3C;AACA,+DAA+D,WAAW;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,MAAM,wDAAU;AAChB,qBAAqB,iBAAiB;AACtC,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,cAAc;AACjC,oBAAoB,OAAO;AAC3B;AACA;AACA,oBAAoB,0DAAY;AAChC;AACA,qBAAqB,wBAAwB;AAC7C;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,iBAAiB,wDAAmB;AACpC;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,2DAAa;AACnB,iBAAiB,kDAAa;AAC9B;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,MAAM,8DAAgB;AACtB,iBAAiB,sDAAgB;AACjC;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,iBAAiB,uDAAiB;AAClC;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,iBAAiB,0DAAoB;AACrC;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,iBAAiB,kDAAa;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,cAAc;AACjC,oBAAoB;AACpB;AACA;AACA,iBAAiB,wDAAmB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,oBAAoB;AACpB;AACA;AACA,iBAAiB,2DAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,oBAAoB;AACpB;AACA;AACA,iBAAiB,8DAAyB;AAC1C;;;AAGA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,qBAAqB,8CAAe;AACpC;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,4BAA4B,+CAAe,QAAQ,sBAAsB;;AAEzE;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA,iEAAiE,qCAAqC;AACtG,wEAAwE,UAAU,YAAY,qBAAqB;AACnH,wEAAwE,UAAU,YAAY,qBAAqB;AACnH,+DAA+D,oBAAoB;AACnF,eAAe,qBAAqB;AACpC;AACA,0BAA0B,YAAY;AACtC,0BAA0B,YAAY;AACtC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC,GAAG;;AAEH;AACA,iEAAiE,qCAAqC;AACtG,+DAA+D,kBAAkB;AACjF,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,sBAAsB;AACrC,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,iFAAiF,qCAAqC;AACtH,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,MAAM;AACvD;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACx4DA;AAAA;AAAA;AAAmD;;AAEnD;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACe;AACf;AACA,YAAY,sDAAe;AAC3B;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,6CAAM;AACtB;AACA;;AAEA,eAAe,eAAe;AAC9B;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA,YAAY,sDAAe;;AAE3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,eAAe;AAC9B,iBAAiB,WAAW;AAC5B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC,iBAAiB,WAAW;AAC5B,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChGA;AAAA;AAAA;AAAA;AAAmD;;AAEG;;AAEtD;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACe;AACf,kCAAkC;AAClC,WAAW,0BAA0B;;AAErC,aAAa,sDAAe;AAC5B;AACA;AACA;;AAEA;AACA,YAAY,8DAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,cAAc,8DAAgB;AAC9B;AACA,iBAAiB,OAAO;AACxB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS,6CAAM;AACf,mBAAmB,6CAAM;AACzB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAM;AACtB;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,wDAAU;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA,qBAAqB,WAAW;AAChC;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,gCAAgC,QAAQ;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,QAAQ;AACrB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA,kBAAkB,UAAU;AAC5B,iBAAiB,WAAW;AAC5B;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACryBA;AAAA;AAAA;AAAmD;;AAEnD;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACe;AACf;AACA,aAAa,sDAAe;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,UAAU;AACzB;AACA;;AAEA;;AAEA,eAAe,aAAa;AAC5B,iBAAiB,UAAU;AAC3B;AACA;;AAEA,iBAAiB,UAAU;AAC3B;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA,YAAY,6CAAM;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,aAAa;AAC5B,qBAAqB,aAAa;AAClC,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAM;AACtB,mBAAmB,UAAU;AAC7B,qBAAqB,aAAa;AAClC;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAM;AACtB,mBAAmB,UAAU;AAC7B,qBAAqB,aAAa;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvMA;AAAA;AAAA;AAAA;AAAmD;;AAEf;;AAEpC;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACe;AACf;AACA,YAAY,sDAAe;;AAE3B;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA,iBAAiB,OAAO;AACxB,cAAc,wDAAU;AACxB;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA,YAAY,6CAAM;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB,iBAAiB,WAAW;AAC5B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,gBAAgB,6CAAM;AACtB;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAM;AACtB;;AAEA,yBAAyB,QAAQ;AACjC,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;;AAEA;;AAEA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5KA;AAAA;AAAA;AAAA;AAAmD;;AAEG;;AAEtD;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACe;AACf,iCAAiC;AACjC,YAAY,sDAAe;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,YAAY,8DAAgB;AAC5B,YAAY,8DAAgB;;AAE5B;AACA;;AAEA;AACA,mBAAmB,QAAQ;;AAE3B;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA,uBAAuB,OAAO;AAC9B,iBAAiB,wDAAU;AAC3B;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,OAAO;AAChC;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,OAAO;AAClC,iBAAiB,wDAAU;AAC3B;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA,6BAA6B,OAAO;AACpC,+BAA+B,OAAO;AACtC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA,6BAA6B,QAAQ;AACrC;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA,yBAAyB,WAAW;AACpC;AACA;AACA,SAAS;AACT,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,QAAQ;AACjC;AACA,6BAA6B,OAAO;AACpC;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,oBAAoB,wDAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC,oBAAoB,wDAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW;AACpC,oBAAoB,wDAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa,6CAAM;;AAEnB,mBAAmB,WAAW;AAC9B;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,6CAAM;;AAEpB,mBAAmB,WAAW;AAC9B,qBAAqB,WAAW;AAChC;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,cAAc;AAC3B,cAAc;AACd;AACA;AACA,sBAAsB,6CAAM;AAC5B;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAM;;AAEtB,mBAAmB,WAAW;AAC9B,qBAAqB,WAAW;AAChC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAgB,6CAAM;;AAEtB,mBAAmB,WAAW;AAC9B,qBAAqB,WAAW;AAChC;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS,6CAAM;AACf,mBAAmB,6CAAM;AACzB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS,6CAAM;AACf,mBAAmB,6CAAM;AACzB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW,6CAAM;AACjB;AACA;;;;;;;;;;;;;AC7kBA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,iBAAiB,UAAU;AAC3B;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACA;AACY;;AAEA;;AAElD;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP,WAAW,sDAAe;AAC1B;AACA,eAAe,+CAA0B;AACzC,GAAG;AACH,yBAAyB,6CAAM;AAC/B;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP,iBAAiB,sDAAe;AAChC,kBAAkB,sDAAe;AACjC;AACA,eAAe,+CAA0B;AACzC,GAAG;AACH;AACA,YAAY,8CAAe;AAC3B,YAAY,8CAAe;AAC3B;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACO;;AAE1B;AACiC;AACA;;AAElB;AACQ;AAIrC;AAIA;AAIK;AAC6C;AACA;;;;;;;;;;;;;ACtBvE;AAAA;AAAA;AAAA;AAAA;AAA+B;;AAED;AACoB;;AAElD;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;AAEO,gDAAgD;AACvD,SAAS,mDAAmD;;AAE5D;AACA,oBAAoB,+CAAM;;AAE1B,iBAAiB,OAAO;AACxB,YAAY,+CAAM;AAClB;AACA,kBAAkB,+CAA0B;AAC5C;AACA,gBAAgB,4DAAG;AACnB,MAAM,+CAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAA8C;AAM9B;;AAED,qBAAqB,+DAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA,IAAI,2DAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAa;AACjB,YAAY,4DAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA,IAAI,8DAAgB;AACpB;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAgB;AACpB,YAAY,+DAAiB;AAC7B,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;;AAE9B;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,YAAY;AACZ,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,YAAY;AACZ,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEO;AACP,YAAY,+CAAM;AAClB,iBAAiB,iBAAiB;AAClC,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEO;AACP,YAAY,+CAAM;AAClB,iBAAiB,iBAAiB;AAClC,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,iBAAiB,iBAAiB;AAClC,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;;;;;;;;;;;;;AChLA;AAAA;AAAA;AAAA;AAA+C;AAChB;;AAEhB,uBAAuB,+DAAc;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+CAAM;AACjB;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAA8B;;AAEf,+BAA+B,6CAAQ;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAA6C;;AAEf;;AAEf,wCAAwC,6CAAQ;AAC/D;AACA,oBAAoB,gEAAkB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAA8B;;AAEf,mCAAmC,6CAAQ;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAA8B;;AAEf,gCAAgC,6CAAQ;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAA8B;;AAEf,4BAA4B,6CAAQ;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAA0C;;AAEZ;;AAEf,qCAAqC,6CAAQ;AAC5D;AACA,iBAAiB,6DAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAuC;;AAET;;AAEf,kCAAkC,6CAAQ;AACzD;AACA,kBAAkB,0DAAY;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAqC;;AAEP;;AAEf,4BAA4B,6CAAQ;AACnD;AACA,IAAI,wDAAU;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAA8B;;AAEf,kCAAkC,6CAAQ;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAA+C;AAChB;;AAEhB,8BAA8B,+DAAc;AAC3D;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,gCAAgC;AAChC,WAAW,WAAW;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,+CAAM;AACjB;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAA+C;AAChB;;AAEhB,8BAA8B,+DAAc;AAC3D;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,+CAAM;AACjB;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAgD;AACA;;AAEhD;AACA,WAAW,mCAAmC;AAC9C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACO;AACP;AACA;AACA,iBAAiB,wDAAe;AAChC,KAAK;AACL,iBAAiB,wDAAe;AAChC;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;ACvLtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,SAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxtBA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;ACzLD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,mBAAO,CAAC,iEAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9DA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,UAAR,GAAqBH,OAAO,CAACI,eAAR,GAA0BJ,OAAO,CAACK,iBAAR,GAA4BL,OAAO,CAACM,QAAR,GAAmBN,OAAO,CAACO,eAAR,GAA0BP,OAAO,CAACQ,QAAR,GAAmB,KAAK,CAA1K;;AACA,IAAMC,KAAK,GAAGC,mBAAO,CAAC,uDAAD,CAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,QAAT,CAAkBG,OAAlB,EAA2BC,IAA3B,EAAiC;AAC7B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,SAAD,EAAe;AAC9B,WAAOL,KAAK,CAACM,KAAN,CAAYJ,OAAZ,EAAqBK,GAArB,CAAyB,YAAM;AAClC,aAAOP,KAAK,CAACQ,MAAN,CAAaL,IAAb,EAAmBE,SAAnB,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAKA,MAAMI,IAAI,GAAG,EAAb;AACAA,MAAI,CAACC,IAAL,CAAUN,UAAU,CAAC,CAAC,CAAF,CAApB;AACAK,MAAI,CAACC,IAAL,CAAUN,UAAU,CAACO,QAAD,CAApB;AACAF,MAAI,CAACC,IAAL,CAAUN,UAAU,CAAC,CAAD,CAApB;AACA,SAAOK,IAAP;AACH;;AACDlB,OAAO,CAACQ,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,eAAT,CAAyBc,QAAzB,EAAmCC,QAAnC,EAA6CC,MAA7C,EAAqD;AACjD,MAAMC,MAAM,GAAGf,KAAK,CAACgB,KAAN,CAAYJ,QAAZ,CAAf;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAApB,EAA8BK,CAAC,EAA/B,EAAmC;AAC/B,QAAIC,YAAY,GAAG,IAAnB;AACA,QAAIC,CAAC,GAAG,CAAR;;AACA,WAAOD,YAAP,EAAqB;AACjBC,OAAC,GAAGnB,KAAK,CAACoB,UAAN,CAAiBP,QAAjB,EAA2BC,MAA3B,CAAJ;AACA,UAAIO,MAAM,GAAG,KAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,CAApB,EAAuBK,CAAC,EAAxB,EAA4B;AACxB,YAAIH,CAAC,KAAKJ,MAAM,CAACO,CAAD,CAAhB,EAAqB;AACjBD,gBAAM,GAAG,IAAT;AACA;AACH;AACJ;;AACD,UAAI,CAACA,MAAL,EACIH,YAAY,GAAG,KAAf;AACP;;AACDH,UAAM,CAACE,CAAD,CAAN,GAAYE,CAAZ;AACH;;AACD,SAAOJ,MAAP;AACH;;AACDxB,OAAO,CAACO,eAAR,GAA0BA,eAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,QAAT,CAAkBY,IAAlB,EAAwBc,GAAxB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,IAA5C,EAAkD;AAC9CH,KAAG,GAAGI,IAAI,CAACC,KAAL,CAAWL,GAAX,CAAN;AACA,MAAMM,OAAO,GAAGpB,IAAI,CAAC,CAAD,CAAJ,CAAQc,GAAR,CAAhB;AACA,MAAMO,OAAO,GAAGrB,IAAI,CAAC,CAAD,CAAJ,CAAQc,GAAR,CAAhB;AACA,MAAMQ,KAAK,GAAGtB,IAAI,CAAC,CAAD,CAAJ,CAAQc,GAAR,CAAd;;AACA,MAAIC,MAAM,IAAIM,OAAO,CAAC,CAAD,CAArB,EAA0B;AACtB,WAAO,CAAP;AACH,GAP6C,CAQ9C;;;AACA,OAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,OAAO,CAACG,MAA5B,EAAoCf,CAAC,EAArC,EAAyC;AACrC,QAAIQ,KAAK,KAAKI,OAAO,CAACZ,CAAD,CAArB,EAA0B;AACtB,aAAO,CAAP;AACH;AACJ;;AACD,SAAOrB,iBAAiB,CAACa,IAAD,EAAOc,GAAP,EAAYC,MAAZ,EAAoBC,KAApB,EAA2BC,IAA3B,CAAxB;AACH;;AACDnC,OAAO,CAACM,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,iBAAT,CAA2Ba,IAA3B,EAAiCc,GAAjC,EAAsCC,MAAtC,EAA8CC,KAA9C,EAAqDC,IAArD,EAA2D;AACvD,MAAMG,OAAO,GAAGpB,IAAI,CAAC,CAAD,CAAJ,CAAQc,GAAR,CAAhB;AACA,MAAMO,OAAO,GAAGrB,IAAI,CAAC,CAAD,CAAJ,CAAQc,GAAR,CAAhB;AACA,MAAMQ,KAAK,GAAGtB,IAAI,CAAC,CAAD,CAAJ,CAAQc,GAAR,CAAd;;AACA,MAAIC,MAAM,IAAIM,OAAO,CAAC,CAAD,CAArB,EAA0B;AACtB,WAAO,CAAP;AACH,GANsD,CAOvD;;;AACAA,SAAO,CAAC,CAAD,CAAP,GAAaN,MAAb;AACAK,SAAO,CAAC,CAAD,CAAP,GAAaJ,KAAb;AACAM,OAAK,CAAC,CAAD,CAAL,GAAWL,IAAX,CAVuD,CAWvD;;AACA,MAAIT,CAAC,GAAG,CAAR;AACA,MAAIgB,KAAK,GAAG,CAAZ;;AACA,SAAO,IAAP,EAAa;AACT,QAAMC,GAAG,GAAG,IAAIjB,CAAJ,GAAQ,CAApB;AACA,QAAMkB,GAAG,GAAGD,GAAG,GAAG,CAAlB;AACA,QAAME,UAAU,GAAG3B,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,EAAWuB,MAA9B;;AACA,QAAIE,GAAG,IAAIE,UAAX,EAAuB;AACnB;AACH,KAFD,MAGK,IAAID,GAAG,IAAIC,UAAX,EAAuB;AACxB,UAAIN,OAAO,CAACI,GAAD,CAAP,GAAeV,MAAnB,EAA2B;AACvBS,aAAK,GAAGC,GAAR;AACH,OAFD,MAGK;AACD;AACH;AACJ,KAPI,MAQA,IAAIJ,OAAO,CAACI,GAAD,CAAP,IAAgBJ,OAAO,CAACK,GAAD,CAA3B,EAAkC;AACnC,UAAIX,MAAM,GAAGM,OAAO,CAACI,GAAD,CAApB,EAA2B;AACvBD,aAAK,GAAGC,GAAR;AACH,OAFD,MAGK;AACD;AACH;AACJ,KAPI,MAQA;AACD,UAAIV,MAAM,GAAGM,OAAO,CAACK,GAAD,CAApB,EAA2B;AACvBF,aAAK,GAAGE,GAAR;AACH,OAFD,MAGK;AACD;AACH;AACJ;;AACDL,WAAO,CAACb,CAAD,CAAP,GAAaa,OAAO,CAACG,KAAD,CAApB;AACAJ,WAAO,CAACZ,CAAD,CAAP,GAAaY,OAAO,CAACI,KAAD,CAApB;AACAF,SAAK,CAACd,CAAD,CAAL,GAAWc,KAAK,CAACE,KAAD,CAAhB;AACAhB,KAAC,GAAGgB,KAAJ;AACH;;AACDH,SAAO,CAACb,CAAD,CAAP,GAAaO,MAAb;AACAK,SAAO,CAACZ,CAAD,CAAP,GAAaQ,KAAb;AACAM,OAAK,CAACd,CAAD,CAAL,GAAWS,IAAX;AACA,SAAO,CAAP;AACH;;AACDnC,OAAO,CAACK,iBAAR,GAA4BA,iBAA5B;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,eAAT,CAAyB0C,YAAzB,EAAuCC,SAAvC,EAAkDC,UAAlD,EAA8DC,aAA9D,EAA6E1B,MAA7E,EAAqF;AACjF,MAAM2B,kBAAkB,GAAG1C,QAAQ,CAACuC,SAAD,EAAYE,aAAZ,CAAnC;;AACA,OAAK,IAAIvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,SAApB,EAA+BrB,CAAC,EAAhC,EAAoC;AAChC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,UAApB,EAAgCpB,CAAC,EAAjC,EAAqC;AACjC,UAAIkB,YAAY,CAAC,CAAD,CAAZ,CAAgBpB,CAAhB,EAAmBE,CAAnB,IAAwB,CAA5B,EAA+B;AAC3B;AACH;;AACD,UAAMuB,GAAG,GAAGL,YAAY,CAAC,CAAD,CAAZ,CAAgBpB,CAAhB,EAAmBE,CAAnB,CAAZ;AACA,UAAMwB,GAAG,GAAGN,YAAY,CAAC,CAAD,CAAZ,CAAgBpB,CAAhB,EAAmBE,CAAnB,CAAZ;AACA,UAAMyB,CAAC,GAAG5C,KAAK,CAAC6C,OAAN,CAAc/B,MAAd,CAAV;AACAjB,cAAQ,CAAC4C,kBAAD,EAAqBxB,CAArB,EAAwB2B,CAAxB,EAA2BF,GAA3B,EAAgCC,GAAhC,CAAR;AACA9C,cAAQ,CAAC4C,kBAAD,EAAqBC,GAArB,EAA0BE,CAA1B,EAA6B3B,CAA7B,EAAgC0B,GAAhC,CAAR;AACAN,kBAAY,CAAC,CAAD,CAAZ,CAAgBpB,CAAhB,EAAmBE,CAAnB,IAAwB,CAAxB;AACH;AACJ;;AACD,SAAOsB,kBAAP;AACH;;AACDlD,OAAO,CAACI,eAAR,GAA0BA,eAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,UAAT,CAAoBe,IAApB,EAA0B;AACtB,MAAMoB,OAAO,GAAGpB,IAAI,CAAC,CAAD,CAApB;AACA,MAAMqB,OAAO,GAAGrB,IAAI,CAAC,CAAD,CAApB;;AACA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,OAAO,CAACG,MAA5B,EAAoCf,CAAC,EAArC,EAAyC;AACrC,QAAM6B,OAAO,GAAGjB,OAAO,CAACZ,CAAD,CAAvB;AACA,QAAM8B,QAAQ,GAAGjB,OAAO,CAACb,CAAD,CAAxB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,OAAO,CAACd,MAAR,GAAiB,CAArC,EAAwCb,CAAC,EAAzC,EAA6C;AACzC,UAAM6B,YAAY,GAAGF,OAAO,CAACd,MAAR,GAAiBb,CAAjB,GAAqB,CAA1C;AACA,UAAM8B,aAAa,GAAGF,QAAQ,CAACf,MAAT,GAAkBb,CAAlB,GAAsB,CAA5C;AACA,UAAM+B,KAAK,GAAGJ,OAAO,CAAC,CAAD,CAArB;AACAA,aAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAACE,YAAD,CAApB;AACAF,aAAO,CAACE,YAAD,CAAP,GAAwBE,KAAxB;AACA,UAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAD,CAAtB;AACAA,cAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAACE,aAAD,CAAtB;AACAF,cAAQ,CAACE,aAAD,CAAR,GAA0BE,KAA1B;AACAC,cAAQ,CAACL,QAAD,EAAWD,OAAX,EAAoBG,aAApB,EAAmC,CAAnC,CAAR;AACH;AACJ;;AACD,SAAO;AAAEpB,WAAO,EAAPA,OAAF;AAAWC,WAAO,EAAPA;AAAX,GAAP;AACH;;AACDvC,OAAO,CAACG,UAAR,GAAqBA,UAArB;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS0D,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyCC,GAAzC,EAA8C;AAC1C,SAAOA,GAAG,GAAG,CAAN,GAAU,CAAV,GAAcD,OAArB,EAA8B;AAC1B,QAAME,SAAS,GAAGD,GAAG,GAAG,CAAN,GAAU,CAA5B;AACA,QAAME,UAAU,GAAGD,SAAS,GAAG,CAA/B;AACA,QAAIE,IAAI,GAAGH,GAAX;;AACA,QAAIH,KAAK,CAACM,IAAD,CAAL,GAAcN,KAAK,CAACI,SAAD,CAAvB,EAAoC;AAChCE,UAAI,GAAGF,SAAP;AACH;;AACD,QAAIC,UAAU,GAAGH,OAAb,IAAwBF,KAAK,CAACM,IAAD,CAAL,GAAcN,KAAK,CAACK,UAAD,CAA/C,EAA6D;AACzDC,UAAI,GAAGD,UAAP;AACH;;AACD,QAAIC,IAAI,KAAKH,GAAb,EAAkB;AACd;AACH,KAFD,MAGK;AACD,UAAMN,KAAK,GAAGG,KAAK,CAACG,GAAD,CAAnB;AACAH,WAAK,CAACG,GAAD,CAAL,GAAaH,KAAK,CAACM,IAAD,CAAlB;AACAN,WAAK,CAACM,IAAD,CAAL,GAAcT,KAAd;AACA,UAAMC,KAAK,GAAGG,KAAK,CAACE,GAAD,CAAnB;AACAF,WAAK,CAACE,GAAD,CAAL,GAAaF,KAAK,CAACK,IAAD,CAAlB;AACAL,WAAK,CAACK,IAAD,CAAL,GAAcR,KAAd;AACAK,SAAG,GAAGG,IAAN;AACH;AACJ;AACJ;AACD;AACA;AACA;;;AACA,SAASlE,eAAT,CAAyBgB,IAAzB,EAA+Bc,GAA/B,EAAoC;AAChC,MAAMqC,GAAG,GAAGnD,IAAI,CAAC,CAAD,CAAJ,CAAQc,GAAR,CAAZ;AACA,MAAMsC,IAAI,GAAGpD,IAAI,CAAC,CAAD,CAAJ,CAAQc,GAAR,CAAb;AACA,MAAMG,IAAI,GAAGjB,IAAI,CAAC,CAAD,CAAJ,CAAQc,GAAR,CAAb;AACA,MAAIuC,OAAO,GAAGnD,QAAd;AACA,MAAIoD,WAAW,GAAG,CAAC,CAAnB;;AACA,OAAK,IAAI9C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2C,GAAG,CAAC5B,MAAxB,EAAgCf,CAAC,EAAjC,EAAqC;AACjC,QAAIS,IAAI,CAACT,CAAD,CAAJ,KAAY,CAAZ,IAAiB4C,IAAI,CAAC5C,CAAD,CAAJ,GAAU6C,OAA/B,EAAwC;AACpCA,aAAO,GAAGD,IAAI,CAAC5C,CAAD,CAAd;AACA8C,iBAAW,GAAG9C,CAAd;AACH;AACJ;;AACD,MAAI8C,WAAW,IAAI,CAAnB,EAAsB;AAClBrC,QAAI,CAACqC,WAAD,CAAJ,GAAoB,CAApB;AACA,WAAOpC,IAAI,CAACC,KAAL,CAAWgC,GAAG,CAACG,WAAD,CAAd,CAAP;AACH,GAHD,MAIK;AACD,WAAO,CAAC,CAAR;AACH;AACJ;;AACDxE,OAAO,CAACE,eAAR,GAA0BA,eAA1B,C;;;;;;;;;;;;ACtQa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AACAJ,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACyE,MAAR,GAAiBzE,OAAO,CAAC0E,SAAR,GAAoB1E,OAAO,CAAC2E,cAAR,GAAyB3E,OAAO,CAAC4E,cAAR,GAAyB5E,OAAO,CAAC6E,OAAR,GAAkB7E,OAAO,CAAC8E,QAAR,GAAmB9E,OAAO,CAAC+E,GAAR,GAAc/E,OAAO,CAACgF,gBAAR,GAA2BhF,OAAO,CAACiF,QAAR,GAAmBjF,OAAO,CAACkF,SAAR,GAAoBlF,OAAO,CAACmF,YAAR,GAAuB,KAAK,CAAxO;;AACA,IAAM1E,KAAK,GAAGC,mBAAO,CAAC,uDAAD,CAArB;AACA;AACA;AACA;;;IACMyE,Y;AACF,wBAAYC,IAAZ,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsC;AAAA;;AAClC,SAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,KAAL,GAAa,CAAb;;AACA,QAAIP,IAAI,CAAC3C,MAAL,KAAgB4C,IAAI,CAAC5C,MAArB,IAA+B2C,IAAI,CAAC3C,MAAL,KAAgB6C,MAAM,CAAC7C,MAA1D,EAAkE;AAC9D,YAAM,IAAImD,KAAJ,CAAU,4DAAV,CAAN;AACH,KANiC,CAOlC;;;AACA,SAAKF,KAAL,GAAaH,IAAI,CAAC,CAAD,CAAjB;AACA,SAAKI,KAAL,GAAaJ,IAAI,CAAC,CAAD,CAAjB;;AACA,SAAK,IAAI7D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4D,MAAM,CAAC7C,MAA3B,EAAmCf,CAAC,EAApC,EAAwC;AACpC,UAAMM,GAAG,GAAGoD,IAAI,CAAC1D,CAAD,CAAhB;AACA,UAAMmE,GAAG,GAAGR,IAAI,CAAC3D,CAAD,CAAhB;AACA,WAAKoE,SAAL,CAAe9D,GAAf,EAAoB6D,GAApB;AACA,UAAME,GAAG,GAAG,KAAKC,OAAL,CAAahE,GAAb,EAAkB6D,GAAlB,CAAZ;AACA,WAAKL,OAAL,CAAaS,GAAb,CAAiBF,GAAjB,EAAsB;AAAE9F,aAAK,EAAEqF,MAAM,CAAC5D,CAAD,CAAf;AAAoBM,WAAG,EAAHA,GAApB;AAAyB6D,WAAG,EAAHA;AAAzB,OAAtB;AACH;AACJ;;;;WACD,iBAAQ7D,GAAR,EAAa6D,GAAb,EAAkB;AACd,uBAAU7D,GAAV,cAAiB6D,GAAjB;AACH;;;WACD,mBAAU7D,GAAV,EAAe6D,GAAf,EAAoB;AAChB,UAAMK,YAAY,GAAGlE,GAAG,GAAG,KAAK0D,KAAX,IAAoBG,GAAG,GAAG,KAAKF,KAApD;;AACA,UAAI,CAACO,YAAL,EAAmB;AACf,cAAM,IAAIN,KAAJ,CAAU,uDAAV,CAAN;AACH;AACJ;;;WACD,aAAI5D,GAAJ,EAAS6D,GAAT,EAAc5F,KAAd,EAAqB;AACjB,WAAK6F,SAAL,CAAe9D,GAAf,EAAoB6D,GAApB;AACA,UAAME,GAAG,GAAG,KAAKC,OAAL,CAAahE,GAAb,EAAkB6D,GAAlB,CAAZ;;AACA,UAAI,CAAC,KAAKL,OAAL,CAAaW,GAAb,CAAiBJ,GAAjB,CAAL,EAA4B;AACxB,aAAKP,OAAL,CAAaS,GAAb,CAAiBF,GAAjB,EAAsB;AAAE9F,eAAK,EAALA,KAAF;AAAS+B,aAAG,EAAHA,GAAT;AAAc6D,aAAG,EAAHA;AAAd,SAAtB;AACH,OAFD,MAGK;AACD,aAAKL,OAAL,CAAaY,GAAb,CAAiBL,GAAjB,EAAsB9F,KAAtB,GAA8BA,KAA9B;AACH;AACJ;;;WACD,aAAI+B,GAAJ,EAAS6D,GAAT,EAAgC;AAAA,UAAlBQ,YAAkB,uEAAH,CAAG;AAC5B,WAAKP,SAAL,CAAe9D,GAAf,EAAoB6D,GAApB;AACA,UAAME,GAAG,GAAG,KAAKC,OAAL,CAAahE,GAAb,EAAkB6D,GAAlB,CAAZ;;AACA,UAAI,KAAKL,OAAL,CAAaW,GAAb,CAAiBJ,GAAjB,CAAJ,EAA2B;AACvB,eAAO,KAAKP,OAAL,CAAaY,GAAb,CAAiBL,GAAjB,EAAsB9F,KAA7B;AACH,OAFD,MAGK;AACD,eAAOoG,YAAP;AACH;AACJ;;;WACD,kBAAuB;AAAA,UAAhBC,OAAgB,uEAAN,IAAM;AACnB,UAAMC,YAAY,GAAG,EAArB;AACA,WAAKf,OAAL,CAAagB,OAAb,CAAqB,UAAAvG,KAAK,EAAI;AAC1BsG,oBAAY,CAACpF,IAAb,CAAkBlB,KAAlB;AACH,OAFD;;AAGA,UAAIqG,OAAJ,EAAa;AACT;AACAC,oBAAY,CAACE,IAAb,CAAkB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxB,cAAID,CAAC,CAAC1E,GAAF,KAAU2E,CAAC,CAAC3E,GAAhB,EAAqB;AACjB,mBAAO0E,CAAC,CAACb,GAAF,GAAQc,CAAC,CAACd,GAAjB;AACH,WAFD,MAGK;AACD,mBAAOa,CAAC,CAAC1E,GAAF,GAAQ2E,CAAC,CAAC3E,GAAjB;AACH;AACJ,SAPD;AAQH;;AACD,aAAOuE,YAAP;AACH;;;WACD,mBAAU;AACN,aAAO,CAAC,KAAKb,KAAN,EAAa,KAAKC,KAAlB,CAAP;AACH;;;WACD,mBAAU;AACN,aAAOiB,KAAK,CAACC,IAAN,CAAW,KAAKrB,OAAhB,EAAyB;AAAA;AAAA,YAAEO,GAAF;AAAA,YAAO9F,KAAP;;AAAA,eAAkBA,KAAK,CAAC+B,GAAxB;AAAA,OAAzB,CAAP;AACH;;;WACD,mBAAU;AACN,aAAO4E,KAAK,CAACC,IAAN,CAAW,KAAKrB,OAAhB,EAAyB;AAAA;AAAA,YAAEO,GAAF;AAAA,YAAO9F,KAAP;;AAAA,eAAkBA,KAAK,CAAC4F,GAAxB;AAAA,OAAzB,CAAP;AACH;;;WACD,qBAAY;AACR,aAAOe,KAAK,CAACC,IAAN,CAAW,KAAKrB,OAAhB,EAAyB;AAAA;AAAA,YAAEO,GAAF;AAAA,YAAO9F,KAAP;;AAAA,eAAkBA,KAAK,CAACA,KAAxB;AAAA,OAAzB,CAAP;AACH;;;WACD,iBAAQ6G,EAAR,EAAY;AACR,WAAKtB,OAAL,CAAagB,OAAb,CAAqB,UAAAvG,KAAK;AAAA,eAAI6G,EAAE,CAAC7G,KAAK,CAACA,KAAP,EAAcA,KAAK,CAAC+B,GAApB,EAAyB/B,KAAK,CAAC4F,GAA/B,CAAN;AAAA,OAA1B;AACH;;;WACD,aAAIiB,EAAJ,EAAQ;AACJ,UAAIC,IAAI,GAAG,EAAX;AACA,WAAKvB,OAAL,CAAagB,OAAb,CAAqB,UAAAvG,KAAK,EAAI;AAC1B8G,YAAI,CAAC5F,IAAL,CAAU2F,EAAE,CAAC7G,KAAK,CAACA,KAAP,EAAcA,KAAK,CAAC+B,GAApB,EAAyB/B,KAAK,CAAC4F,GAA/B,CAAZ;AACH,OAFD;AAGA,UAAMN,IAAI,GAAG,CAAC,KAAKG,KAAN,EAAa,KAAKC,KAAlB,CAAb;AACA,aAAO,IAAIR,YAAJ,CAAiB,KAAK6B,OAAL,EAAjB,EAAiC,KAAKC,OAAL,EAAjC,EAAiDF,IAAjD,EAAuDxB,IAAvD,CAAP;AACH;;;WACD,mBAAU;AAAA;;AACN,UAAMH,IAAI,GAAG3E,KAAK,CAACM,KAAN,CAAY,KAAK2E,KAAjB,CAAb;AACA,UAAMwB,MAAM,GAAG9B,IAAI,CAACpE,GAAL,CAAS,YAAM;AAC1B,eAAOP,KAAK,CAACgB,KAAN,CAAY,KAAI,CAACkE,KAAjB,CAAP;AACH,OAFc,CAAf;AAGA,WAAKH,OAAL,CAAagB,OAAb,CAAqB,UAAAvG,KAAK,EAAI;AAC1BiH,cAAM,CAACjH,KAAK,CAAC+B,GAAP,CAAN,CAAkB/B,KAAK,CAAC4F,GAAxB,IAA+B5F,KAAK,CAACA,KAArC;AACH,OAFD;AAGA,aAAOiH,MAAP;AACH;;;;;;AAELlH,OAAO,CAACmF,YAAR,GAAuBA,YAAvB;AACA;AACA;AACA;;AACA,SAASD,SAAT,CAAmBiC,MAAnB,EAA2B;AACvB,MAAM9B,IAAI,GAAG,EAAb;AACA,MAAMD,IAAI,GAAG,EAAb;AACA,MAAM2B,IAAI,GAAG,EAAb;AACAI,QAAM,CAACX,OAAP,CAAe,UAACvG,KAAD,EAAQ+B,GAAR,EAAa6D,GAAb,EAAqB;AAChCR,QAAI,CAAClE,IAAL,CAAUa,GAAV;AACAoD,QAAI,CAACjE,IAAL,CAAU0E,GAAV;AACAkB,QAAI,CAAC5F,IAAL,CAAUlB,KAAV;AACH,GAJD;AAKA,MAAMsF,IAAI,GAAG,CAAC4B,MAAM,CAACxB,KAAR,EAAewB,MAAM,CAACzB,KAAtB,CAAb;AACA,SAAO,IAAIP,YAAJ,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B0B,IAA7B,EAAmCxB,IAAnC,CAAP;AACH;;AACDvF,OAAO,CAACkF,SAAR,GAAoBA,SAApB;AACA;AACA;AACA;;AACA,SAASD,QAAT,CAAkBrE,IAAlB,EAAwB;AAAA,6BACLA,IADK;AAAA,MACbwE,IADa;;AAEpB,MAAM+B,MAAM,GAAG,IAAIhC,YAAJ,CAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6BvE,IAA7B,CAAf;;AACA,OAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0D,IAApB,EAA0B1D,CAAC,EAA3B,EAA+B;AAC3ByF,UAAM,CAAClB,GAAP,CAAWvE,CAAX,EAAcA,CAAd,EAAiB,CAAjB;AACH;;AACD,SAAOyF,MAAP;AACH;;AACDnH,OAAO,CAACiF,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;;AACA,SAASD,gBAAT,CAA0B0B,CAA1B,EAA6BC,CAA7B,EAAgC;AAC5B,SAAOS,WAAW,CAACV,CAAD,EAAIC,CAAJ,EAAO,UAACU,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,GAAGC,CAAd;AAAA,GAAP,CAAlB;AACH;;AACDtH,OAAO,CAACgF,gBAAR,GAA2BA,gBAA3B;AACA;AACA;AACA;;AACA,SAASD,GAAT,CAAa2B,CAAb,EAAgBC,CAAhB,EAAmB;AACf,SAAOS,WAAW,CAACV,CAAD,EAAIC,CAAJ,EAAO,UAACU,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,GAAGC,CAAd;AAAA,GAAP,CAAlB;AACH;;AACDtH,OAAO,CAAC+E,GAAR,GAAcA,GAAd;AACA;AACA;AACA;;AACA,SAASD,QAAT,CAAkB4B,CAAlB,EAAqBC,CAArB,EAAwB;AACpB,SAAOS,WAAW,CAACV,CAAD,EAAIC,CAAJ,EAAO,UAACU,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,GAAGC,CAAd;AAAA,GAAP,CAAlB;AACH;;AACDtH,OAAO,CAAC8E,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;;AACA,SAASD,OAAT,CAAiB6B,CAAjB,EAAoBC,CAApB,EAAuB;AACnB,SAAOS,WAAW,CAACV,CAAD,EAAIC,CAAJ,EAAO,UAACU,CAAD,EAAIC,CAAJ;AAAA,WAAWD,CAAC,GAAGC,CAAJ,GAAQD,CAAR,GAAYC,CAAvB;AAAA,GAAP,CAAlB;AACH;;AACDtH,OAAO,CAAC6E,OAAR,GAAkBA,OAAlB;AACA;AACA;AACA;;AACA,SAASD,cAAT,CAAwB8B,CAAxB,EAA2Ba,MAA3B,EAAmC;AAC/B,SAAOb,CAAC,CAAC1F,GAAF,CAAM,UAACf,KAAD,EAAW;AACpB,WAAOA,KAAK,GAAGsH,MAAf;AACH,GAFM,CAAP;AAGH;;AACDvH,OAAO,CAAC4E,cAAR,GAAyBA,cAAzB;AACA;AACA;AACA;;AACA,SAASD,cAAT,CAAwB6C,CAAxB,EAA2B;AACvB,MAAMC,WAAW,GAAG,IAAIC,GAAJ,EAApB;AACA,MAAMpC,MAAM,GAAGkC,CAAC,CAACG,SAAF,EAAf;AACA,MAAMvC,IAAI,GAAGoC,CAAC,CAACR,OAAF,EAAb;AACA,MAAM3B,IAAI,GAAGmC,CAAC,CAACP,OAAF,EAAb;;AACA,OAAK,IAAIvF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4D,MAAM,CAAC7C,MAA3B,EAAmCf,CAAC,EAApC,EAAwC;AACpC,QAAI4D,MAAM,CAAC5D,CAAD,CAAN,KAAc,CAAlB,EAAqB;AACjB+F,iBAAW,CAAC1C,GAAZ,CAAgBrD,CAAhB;AACH;AACJ;;AACD,MAAMkG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAI3F,KAAJ;AAAA,WAAc,CAACuF,WAAW,CAACtB,GAAZ,CAAgBjE,KAAhB,CAAf;AAAA,GAA1B;;AACA,MAAM4F,UAAU,GAAGxC,MAAM,CAACyC,MAAP,CAAcH,iBAAd,CAAnB;AACA,MAAMI,QAAQ,GAAG5C,IAAI,CAAC2C,MAAL,CAAYH,iBAAZ,CAAjB;AACA,MAAMK,QAAQ,GAAG5C,IAAI,CAAC0C,MAAL,CAAYH,iBAAZ,CAAjB;AACA,SAAO,IAAIzC,YAAJ,CAAiB6C,QAAjB,EAA2BC,QAA3B,EAAqCH,UAArC,EAAiDN,CAAC,CAACU,OAAF,EAAjD,CAAP;AACH;;AACDlI,OAAO,CAAC2E,cAAR,GAAyBA,cAAzB;AACA;AACA;AACA;;AACA,SAASD,SAAT,CAAmB8C,CAAnB;AAAsC;AAAU;AAAA,MAA1BW,QAA0B,uEAAf,IAAe;AAC5C,MAAMC,MAAM,GAAGC,OAAO,CAACF,QAAD,CAAtB;AACA,MAAMG,SAAS,GAAG,IAAI7C,GAAJ,EAAlB;AACA+B,GAAC,CAAChB,OAAF,CAAU,UAACqB,CAAD,EAAI7F,GAAJ,EAAS6D,GAAT,EAAiB;AACvB,QAAMR,IAAI,GAAGiD,SAAS,CAAClC,GAAV,CAAcpE,GAAd,KAAsB,EAAnC;AACAqD,QAAI,CAAClE,IAAL,CAAU0E,GAAV;AACAyC,aAAS,CAACrC,GAAV,CAAcjE,GAAd,EAAmBqD,IAAnB;AACH,GAJD;AAKA,MAAMkD,UAAU,GAAG,IAAIpD,YAAJ,CAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6BqC,CAAC,CAACU,OAAF,EAA7B,CAAnB;;AAR4C,6CAS5BI,SAAS,CAACE,IAAV,EAT4B;AAAA;;AAAA;AAAA;AAAA,UASnCxG,GATmC;AAUxC,UAAMqD,IAAI,GAAGiD,SAAS,CAAClC,GAAV,CAAcpE,GAAd,EAAmByE,IAAnB,EAAb;AACA,UAAMM,IAAI,GAAG1B,IAAI,CAACrE,GAAL,CAAS,UAAA6E,GAAG;AAAA,eAAI2B,CAAC,CAACpB,GAAF,CAAMpE,GAAN,EAAW6D,GAAX,CAAJ;AAAA,OAAZ,CAAb;AACA,UAAM4C,IAAI,GAAGL,MAAM,CAACrB,IAAD,CAAnB;;AACA,WAAK,IAAIrF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+G,IAAI,CAAChG,MAAzB,EAAiCf,CAAC,EAAlC,EAAsC;AAClC6G,kBAAU,CAACtC,GAAX,CAAejE,GAAf,EAAoBqD,IAAI,CAAC3D,CAAD,CAAxB,EAA6B+G,IAAI,CAAC/G,CAAD,CAAjC;AACH;AAfuC;;AAS5C,wDAAkC;AAAA;AAOjC;AAhB2C;AAAA;AAAA;AAAA;AAAA;;AAiB5C,SAAO6G,UAAP;AACH;;AACDvI,OAAO,CAAC0E,SAAR,GAAoBA,SAApB;AACA,IAAM2D,OAAO,6CACR;AAAM;AADE,EACU,aAACK,EAAD,EAAQ;AACvB,MAAIC,GAAG,GAAG,CAACvH,QAAX;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgH,EAAE,CAACjG,MAAvB,EAA+Bf,CAAC,EAAhC,EAAoC;AAChCiH,OAAG,GAAGD,EAAE,CAAChH,CAAD,CAAF,GAAQiH,GAAR,GAAcD,EAAE,CAAChH,CAAD,CAAhB,GAAsBiH,GAA5B;AACH;;AACD,SAAOD,EAAE,CAAC1H,GAAH,CAAO,UAAAqG,CAAC;AAAA,WAAIA,CAAC,GAAGsB,GAAR;AAAA,GAAR,CAAP;AACH,CAPQ,6BAQR;AAAK;AARG,EAQQ,YAACD,EAAD,EAAQ;AACrB,MAAIE,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIlH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgH,EAAE,CAACjG,MAAvB,EAA+Bf,CAAC,EAAhC,EAAoC;AAChCkH,OAAG,IAAIF,EAAE,CAAChH,CAAD,CAAT;AACH;;AACD,SAAOgH,EAAE,CAAC1H,GAAH,CAAO,UAAAqG,CAAC;AAAA,WAAIA,CAAC,GAAGuB,GAAR;AAAA,GAAR,CAAP;AACH,CAdQ,6BAeR;AAAK;AAfG,EAeQ,YAACF,EAAD,EAAQ;AACrB,MAAIE,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIlH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgH,EAAE,CAACjG,MAAvB,EAA+Bf,CAAC,EAAhC,EAAoC;AAChCkH,OAAG,aAAIF,EAAE,CAAChH,CAAD,CAAN,EAAa,CAAb,CAAH;AACH;;AACD,SAAOgH,EAAE,CAAC1H,GAAH,CAAO,UAAAqG,CAAC;AAAA,WAAIjF,IAAI,CAACyG,IAAL,CAAU,SAAAxB,CAAC,EAAI,CAAJ,CAAD,GAASuB,GAAnB,CAAJ;AAAA,GAAR,CAAP;AACH,CArBQ,YAAb;AAuBA;AACA;AACA;;AACA,SAASxB,WAAT,CAAqBV,CAArB,EAAwBC,CAAxB,EAA2BmC,EAA3B,EAA+B;AAC3B,MAAMC,OAAO,GAAG,IAAIrB,GAAJ,EAAhB;AACA,MAAMtC,IAAI,GAAG,EAAb;AACA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAM0B,IAAI,GAAG,EAAb;;AACA,MAAMiC,OAAO,GAAG,SAAVA,OAAU,CAAChH,GAAD,EAAM6D,GAAN,EAAc;AAC1BT,QAAI,CAACjE,IAAL,CAAUa,GAAV;AACAqD,QAAI,CAAClE,IAAL,CAAU0E,GAAV;AACA,QAAMoD,SAAS,GAAGH,EAAE,CAACpC,CAAC,CAACN,GAAF,CAAMpE,GAAN,EAAW6D,GAAX,CAAD,EAAkBc,CAAC,CAACP,GAAF,CAAMpE,GAAN,EAAW6D,GAAX,CAAlB,CAApB;AACAkB,QAAI,CAAC5F,IAAL,CAAU8H,SAAV;AACH,GALD;;AAMA,MAAMC,OAAO,GAAGxC,CAAC,CAACiB,SAAF,EAAhB;AACA,MAAMwB,KAAK,GAAGzC,CAAC,CAACM,OAAF,EAAd;AACA,MAAMoC,KAAK,GAAG1C,CAAC,CAACO,OAAF,EAAd;;AACA,OAAK,IAAIvF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwH,OAAO,CAACzG,MAA5B,EAAoCf,CAAC,EAArC,EAAyC;AACrC,QAAMM,GAAG,GAAGmH,KAAK,CAACzH,CAAD,CAAjB;AACA,QAAMmE,GAAG,GAAGuD,KAAK,CAAC1H,CAAD,CAAjB;AACA,QAAMqE,GAAG,aAAM/D,GAAN,cAAa6D,GAAb,CAAT;AACAkD,WAAO,CAAChE,GAAR,CAAYgB,GAAZ;AACAiD,WAAO,CAAChH,GAAD,EAAM6D,GAAN,CAAP;AACH;;AACD,MAAMwD,OAAO,GAAG1C,CAAC,CAACgB,SAAF,EAAhB;AACA,MAAM2B,KAAK,GAAG3C,CAAC,CAACK,OAAF,EAAd;AACA,MAAMuC,KAAK,GAAG5C,CAAC,CAACM,OAAF,EAAd;;AACA,OAAK,IAAIvF,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG2H,OAAO,CAAC5G,MAA5B,EAAoCf,GAAC,EAArC,EAAyC;AACrC,QAAMM,IAAG,GAAGsH,KAAK,CAAC5H,GAAD,CAAjB;AACA,QAAMmE,IAAG,GAAG0D,KAAK,CAAC7H,GAAD,CAAjB;;AACA,QAAMqE,IAAG,aAAM/D,IAAN,cAAa6D,IAAb,CAAT;;AACA,QAAIkD,OAAO,CAAC5C,GAAR,CAAYJ,IAAZ,CAAJ,EACI;AACJiD,WAAO,CAAChH,IAAD,EAAM6D,IAAN,CAAP;AACH;;AACD,MAAMN,IAAI,GAAG,CAACmB,CAAC,CAAChB,KAAH,EAAUgB,CAAC,CAACf,KAAZ,CAAb;AACA,SAAO,IAAIR,YAAJ,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B0B,IAA7B,EAAmCxB,IAAnC,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASd,MAAT,CAAgB4C,CAAhB,EAAmB;AACf,MAAM7B,OAAO,GAAG,EAAhB;AACA6B,GAAC,CAACb,OAAF,CAAU,UAACvG,KAAD,EAAQ+B,GAAR,EAAa6D,GAAb,EAAqB;AAC3BL,WAAO,CAACrE,IAAR,CAAa;AAAElB,WAAK,EAALA,KAAF;AAAS+B,SAAG,EAAHA,GAAT;AAAc6D,SAAG,EAAHA;AAAd,KAAb;AACH,GAFD;AAGAL,SAAO,CAACiB,IAAR,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnB,QAAID,CAAC,CAAC1E,GAAF,KAAU2E,CAAC,CAAC3E,GAAhB,EAAqB;AACjB,aAAO0E,CAAC,CAACb,GAAF,GAAQc,CAAC,CAACd,GAAjB;AACH,KAFD,MAGK;AACD,aAAOa,CAAC,CAAC1E,GAAF,GAAQ2E,CAAC,CAAC3E,GAAjB;AACH;AACJ,GAPD;AAQA,MAAMM,OAAO,GAAG,EAAhB;AACA,MAAMgD,MAAM,GAAG,EAAf;AACA,MAAMkE,MAAM,GAAG,EAAf;AACA,MAAIC,UAAU,GAAG,CAAC,CAAlB;;AACA,OAAK,IAAI/H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,OAAO,CAAC/C,MAA5B,EAAoCf,CAAC,EAArC,EAAyC;AAAA,qBACT8D,OAAO,CAAC9D,CAAD,CADE;AAAA,QAC7BM,GAD6B,cAC7BA,GAD6B;AAAA,QACxB6D,GADwB,cACxBA,GADwB;AAAA,QACnB5F,KADmB,cACnBA,KADmB;;AAErC,QAAI+B,GAAG,KAAKyH,UAAZ,EAAwB;AACpBA,gBAAU,GAAGzH,GAAb;AACAwH,YAAM,CAACrI,IAAP,CAAYO,CAAZ;AACH;;AACDY,WAAO,CAACnB,IAAR,CAAa0E,GAAb;AACAP,UAAM,CAACnE,IAAP,CAAYlB,KAAZ;AACH;;AACD,SAAO;AAAEqC,WAAO,EAAPA,OAAF;AAAWgD,UAAM,EAANA,MAAX;AAAmBkE,UAAM,EAANA;AAAnB,GAAP;AACH;;AACDxJ,OAAO,CAACyE,MAAR,GAAiBA,MAAjB,C;;;;;;;;;;;;ACzUa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AACA3E,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAAC0J,gBAAR,GAA2B1J,OAAO,CAAC2J,uBAAR,GAAkC3J,OAAO,CAAC4J,mBAAR,GAA8B5J,OAAO,CAAC6J,aAAR,GAAwB,KAAK,CAAxH;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAM3I,IAAI,GAAGR,mBAAO,CAAC,qDAAD,CAApB;;AACA,IAAMyG,MAAM,GAAGzG,mBAAO,CAAC,yDAAD,CAAtB;;AACA,IAAMoJ,IAAI,GAAGpJ,mBAAO,CAAC,qDAAD,CAApB;;AACA,IAAMD,KAAK,GAAGC,mBAAO,CAAC,uDAAD,CAArB;AACA;AACA;AACA;;;AACA,SAASmJ,aAAT,CAAuBE,UAAvB,EAAmCxI,MAAnC,EAA2C;AACvC,SAAO,SAASyI,SAAT,CAAmBC,IAAnB,EAAyBC,SAAzB,EAAoClH,UAApC,EAA8H;AAAA,QAA9EmH,MAA8E,uEAArE,EAAqE;AAAA,QAAjElH,aAAiE,uEAAjD,EAAiD;AAAA,QAA7CmH,KAA6C,uEAArC,KAAqC;AAAA,QAA9BC,GAA8B,uEAAxB,GAAwB;AAAA,QAAnBC,UAAmB,uEAAN,IAAM;AACjI,QAAMvH,SAAS,GAAGkH,IAAI,CAACxH,MAAvB;AACA,QAAMK,YAAY,GAAG5B,IAAI,CAACV,QAAL,CAAcyJ,IAAI,CAACxH,MAAnB,EAA2BO,UAA3B,CAArB;;AACA,SAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuI,IAAI,CAACxH,MAAzB,EAAiCf,CAAC,EAAlC,EAAsC;AAClC,UAAMY,OAAO,GAAGpB,IAAI,CAACX,eAAL,CAAqByC,UAArB,EAAiCiH,IAAI,CAACxH,MAAtC,EAA8ClB,MAA9C,CAAhB;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,OAAO,CAACG,MAA5B,EAAoCb,CAAC,EAArC,EAAyC;AACrC,YAAMyB,CAAC,GAAG0G,UAAU,CAACE,IAAI,CAACvI,CAAD,CAAL,EAAUuI,IAAI,CAAC3H,OAAO,CAACV,CAAD,CAAR,CAAd,CAApB;AACAV,YAAI,CAACZ,QAAL,CAAcwC,YAAd,EAA4BpB,CAA5B,EAA+B2B,CAA/B,EAAkCf,OAAO,CAACV,CAAD,CAAzC,EAA8C,CAA9C;AACAV,YAAI,CAACZ,QAAL,CAAcwC,YAAd,EAA4BR,OAAO,CAACV,CAAD,CAAnC,EAAwCyB,CAAxC,EAA2C3B,CAA3C,EAA8C,CAA9C;AACH;AACJ;;AACD,QAAI4I,UAAJ,EAAgB;AACZ,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACzH,MAA9B,EAAsC8H,CAAC,EAAvC,EAA2C;AACvC,aAAK,IAAI7I,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGwI,SAAS,CAACK,CAAD,CAAT,CAAa9H,MAAjC,EAAyCf,EAAC,EAA1C,EAA8C;AAC1C,cAAIwI,SAAS,CAACK,CAAD,CAAT,CAAa7I,EAAb,IAAkB,CAAtB,EAAyB;AACrB;AACH;;AACD,eAAK,IAAIE,EAAC,GAAGF,EAAC,GAAG,CAAjB,EAAoBE,EAAC,GAAGsI,SAAS,CAACK,CAAD,CAAT,CAAa9H,MAArC,EAA6Cb,EAAC,EAA9C,EAAkD;AAC9C,gBAAIsI,SAAS,CAACK,CAAD,CAAT,CAAa3I,EAAb,IAAkB,CAAtB,EAAyB;AACrB;AACH;;AACD,gBAAMyB,EAAC,GAAG0G,UAAU,CAACE,IAAI,CAACC,SAAS,CAACK,CAAD,CAAT,CAAa7I,EAAb,CAAD,CAAL,EAAwBuI,IAAI,CAACC,SAAS,CAACK,CAAD,CAAT,CAAa3I,EAAb,CAAD,CAA5B,CAApB;;AACAV,gBAAI,CAACZ,QAAL,CAAcwC,YAAd,EAA4BoH,SAAS,CAACK,CAAD,CAAT,CAAa7I,EAAb,CAA5B,EAA6C2B,EAA7C,EAAgD6G,SAAS,CAACK,CAAD,CAAT,CAAa3I,EAAb,CAAhD,EAAiE,CAAjE;AACAV,gBAAI,CAACZ,QAAL,CAAcwC,YAAd,EAA4BoH,SAAS,CAACK,CAAD,CAAT,CAAa3I,EAAb,CAA5B,EAA6CyB,EAA7C,EAAgD6G,SAAS,CAACK,CAAD,CAAT,CAAa7I,EAAb,CAAhD,EAAiE,CAAjE;AACH;AACJ;AACJ;AACJ;;AACD,SAAK,IAAI6I,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGJ,MAApB,EAA4BI,EAAC,EAA7B,EAAiC;AAC7B,UAAMrH,kBAAkB,GAAGhC,IAAI,CAACd,eAAL,CAAqB0C,YAArB,EAAmCC,SAAnC,EAA8CC,UAA9C,EAA0DC,aAA1D,EAAyE1B,MAAzE,CAA3B;AACA,UAAIiJ,CAAC,GAAG,CAAR;;AACA,WAAK,IAAI9I,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGqB,SAApB,EAA+BrB,GAAC,EAAhC,EAAoC;AAChC,aAAK,IAAIE,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGqB,aAApB,EAAmCrB,GAAC,EAApC,EAAwC;AACpC,cAAI6I,CAAC,GAAGrI,IAAI,CAACC,KAAL,CAAWa,kBAAkB,CAAC,CAAD,CAAlB,CAAsBxB,GAAtB,EAAyBE,GAAzB,CAAX,CAAR;;AACA,cAAI6I,CAAC,GAAG,CAAJ,IAAShK,KAAK,CAAC6C,OAAN,CAAc/B,MAAd,IAAwB8I,GAArC,EAA0C;AACtC;AACH;;AACD,eAAK,IAAItI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,aAApB,EAAmClB,CAAC,EAApC,EAAwC;AACpC,gBAAM2I,CAAC,GAAGtI,IAAI,CAACC,KAAL,CAAWa,kBAAkB,CAAC,CAAD,CAAlB,CAAsBxB,GAAtB,EAAyBK,CAAzB,CAAX,CAAV;AACA,gBAAM4I,EAAE,GAAGzH,kBAAkB,CAAC,CAAD,CAAlB,CAAsBxB,GAAtB,EAAyBE,GAAzB,CAAX;AACA,gBAAMgJ,EAAE,GAAG1H,kBAAkB,CAAC,CAAD,CAAlB,CAAsBxB,GAAtB,EAAyBK,CAAzB,CAAX;;AACA,gBAAI2I,CAAC,GAAG,CAAJ,IAAU,CAACC,EAAD,IAAO,CAACC,EAAtB,EAA2B;AACvB;AACH;;AACD,gBAAMvH,GAAC,GAAG0G,UAAU,CAACE,IAAI,CAACQ,CAAD,CAAL,EAAUR,IAAI,CAACS,CAAD,CAAd,CAApB;;AACAF,aAAC,IAAItJ,IAAI,CAACZ,QAAL,CAAcwC,YAAd,EAA4B2H,CAA5B,EAA+BpH,GAA/B,EAAkCqH,CAAlC,EAAqC,CAArC,CAAL;AACAF,aAAC,IAAItJ,IAAI,CAACZ,QAAL,CAAcwC,YAAd,EAA4B4H,CAA5B,EAA+BrH,GAA/B,EAAkCoH,CAAlC,EAAqC,CAArC,CAAL;AACH;AACJ;AACJ;;AACD,UAAID,CAAC,IAAIJ,KAAK,GAAGpH,UAAR,GAAqBiH,IAAI,CAACxH,MAAnC,EAA2C;AACvC;AACH;AACJ;;AACD,QAAMoI,MAAM,GAAG3J,IAAI,CAACf,UAAL,CAAgB2C,YAAhB,CAAf;AACA,WAAO+H,MAAP;AACH,GAxDD;AAyDH;;AACD7K,OAAO,CAAC6J,aAAR,GAAwBA,aAAxB;;AACA,SAASD,mBAAT,CAA6BG,UAA7B,EAAyC;AACrC,WAASe,cAAT,CAAwB9H,UAAxB,EAAoCiH,IAApC,EAA0Cc,WAA1C,EAAuDC,KAAvD,EAA8DzJ,MAA9D,EAAsE;AAClE,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,WAAW,CAACtI,MAAhC,EAAwCf,CAAC,EAAzC,EAA6C;AACzC,UAAMY,OAAO,GAAG7B,KAAK,CAACF,eAAN,CAAsByC,UAAtB,EAAkCiH,IAAI,CAACxH,MAAvC,EAA+ClB,MAA/C,CAAhB;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,OAAO,CAACG,MAA5B,EAAoCb,CAAC,EAArC,EAAyC;AACrC,YAAIU,OAAO,CAACV,CAAD,CAAP,GAAa,CAAjB,EAAoB;AAChB;AACH;;AACD,YAAMyB,CAAC,GAAG0G,UAAU,CAACE,IAAI,CAAC3H,OAAO,CAACV,CAAD,CAAR,CAAL,EAAmBmJ,WAAW,CAACrJ,CAAD,CAA9B,CAApB;AACAR,YAAI,CAACZ,QAAL,CAAc0K,KAAd,EAAqBtJ,CAArB,EAAwB2B,CAAxB,EAA2Bf,OAAO,CAACV,CAAD,CAAlC,EAAuC,CAAvC;AACH;AACJ;AACJ;;AACD,WAASqJ,YAAT,CAAsBC,KAAtB,EAA6BjB,IAA7B,EAAmCc,WAAnC,EAAgDC,KAAhD,EAAuDzJ,MAAvD,EAA+D;AAC3D,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,WAAW,CAACtI,MAAhC,EAAwCf,CAAC,EAAzC,EAA6C;AACzC,UAAMY,OAAO,GAAGwH,IAAI,CAACqB,cAAL,CAAoBJ,WAAW,CAACrJ,CAAD,CAA/B,EAAoCwJ,KAApC,EAA2C3J,MAA3C,CAAhB;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,OAAO,CAACG,MAA5B,EAAoCb,CAAC,EAArC,EAAyC;AACrC,YAAIU,OAAO,CAACV,CAAD,CAAP,GAAa,CAAjB,EAAoB;AAChB;AACH;;AACD,YAAMyB,CAAC,GAAG0G,UAAU,CAACE,IAAI,CAAC3H,OAAO,CAACV,CAAD,CAAR,CAAL,EAAmBmJ,WAAW,CAACrJ,CAAD,CAA9B,CAApB;AACAR,YAAI,CAACZ,QAAL,CAAc0K,KAAd,EAAqBtJ,CAArB,EAAwB2B,CAAxB,EAA2Bf,OAAO,CAACV,CAAD,CAAlC,EAAuC,CAAvC;AACH;AACJ;;AACD;AACH;;AACD,SAAO;AAAEkJ,kBAAc,EAAdA,cAAF;AAAkBG,gBAAY,EAAZA;AAAlB,GAAP;AACH;;AACDjL,OAAO,CAAC4J,mBAAR,GAA8BA,mBAA9B;;AACA,SAASD,uBAAT,CAAiCI,UAAjC,EAA6C;AACzC,SAAO,SAASqB,UAAT,CAAoBnB,IAApB,EAA0BoB,KAA1B,EAAiCC,cAAjC,EAAiDP,WAAjD,EAA8D;AAAA,yBACrC5D,MAAM,CAAC1C,MAAP,CAAc4G,KAAd,CADqC;AAAA,QACzD/I,OADyD,kBACzDA,OADyD;AAAA,QAChDkH,MADgD,kBAChDA,MADgD;;AAEjE,SAAK,IAAI9H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,WAAW,CAACtI,MAAhC,EAAwCf,CAAC,EAAzC,EAA6C;AACzC,UAAM6J,KAAK,GAAG,IAAI7D,GAAJ,CAAQ4D,cAAc,CAAC,CAAD,CAAd,CAAkB5J,CAAlB,CAAR,CAAd;;AACA,aAAO,IAAP,EAAa;AACT;AACA,YAAM8J,MAAM,GAAGtK,IAAI,CAAChB,eAAL,CAAqBoL,cAArB,EAAqC5J,CAArC,CAAf;;AACA,YAAI8J,MAAM,KAAK,CAAC,CAAhB,EAAmB;AACf;AACH;;AACD,YAAMC,UAAU,GAAGnJ,OAAO,CAACoJ,KAAR,CAAclC,MAAM,CAACgC,MAAD,CAApB,EAA8BhC,MAAM,CAACgC,MAAM,GAAG,CAAV,CAApC,CAAnB;;AANS,mDAOeC,UAPf;AAAA;;AAAA;AAOT,8DAAoC;AAAA,gBAAzBE,SAAyB;;AAChC,gBAAIA,SAAS,KAAKH,MAAd,IACAG,SAAS,KAAK,CAAC,CADf,IAEAJ,KAAK,CAACpF,GAAN,CAAUwF,SAAV,CAFJ,EAE0B;AACtB;AACH;;AACD,gBAAMtI,CAAC,GAAG0G,UAAU,CAACE,IAAI,CAAC0B,SAAD,CAAL,EAAkBZ,WAAW,CAACrJ,CAAD,CAA7B,CAApB;AACAR,gBAAI,CAACb,iBAAL,CAAuBiL,cAAvB,EAAuC5J,CAAvC,EAA0C2B,CAA1C,EAA6CsI,SAA7C,EAAwD,CAAxD;AACAJ,iBAAK,CAACxG,GAAN,CAAU4G,SAAV;AACH;AAhBQ;AAAA;AAAA;AAAA;AAAA;AAiBZ;AACJ;;AACD,WAAOL,cAAP;AACH,GAxBD;AAyBH;;AACDtL,OAAO,CAAC2J,uBAAR,GAAkCA,uBAAlC;;AACA,SAASD,gBAAT,CAA0BkC,MAA1B,EAAkC3B,IAAlC,EAAwCc,WAAxC,EAAqD/H,UAArD,EAAiE8H,cAAjE,EAAiFG,YAAjF,EAA+F1J,MAA/F,EAAuG;AACnG,MAAMsK,OAAO,GAAG3K,IAAI,CAACV,QAAL,CAAcuK,WAAW,CAACtI,MAA1B,EAAkCO,UAAlC,CAAhB;AACA8H,gBAAc,CAAC9H,UAAD,EAAaiH,IAAb,EAAmBc,WAAnB,EAAgCc,OAAhC,EAAyCtK,MAAzC,CAAd;;AACA,MAAIqK,MAAJ,EAAY;AAAA,gDACSA,MADT;AAAA;;AAAA;AACR,6DAAyB;AAAA,YAAhB9B,MAAgB;AACrBmB,oBAAY,CAACnB,MAAD,EAAOG,IAAP,EAAac,WAAb,EAA0Bc,OAA1B,EAAmCtK,MAAnC,CAAZ;AACH;AAHO;AAAA;AAAA;AAAA;AAAA;AAIX;;AACD,SAAOsK,OAAP;AACH;;AACD7L,OAAO,CAAC0J,gBAAR,GAA2BA,gBAA3B,C;;;;;;;;;;;;ACjMa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA5J,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACmL,cAAR,GAAyBnL,OAAO,CAAC8L,aAAR,GAAwB9L,OAAO,CAAC+L,UAAR,GAAqB/L,OAAO,CAACgM,QAAR,GAAmB,KAAK,CAA9F;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMvL,KAAK,GAAGC,mBAAO,CAAC,uDAAD,CAArB;;IACMsL,Q,GACF,kBAAYC,WAAZ,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C7J,OAA5C,EAAqD;AAAA;;AACjD,OAAK2J,WAAL,GAAmBA,WAAnB;AACA,OAAKC,OAAL,GAAeA,OAAf;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAK7J,OAAL,GAAeA,OAAf;AACH,C;;AAELtC,OAAO,CAACgM,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;;AACA,SAASD,UAAT,CAAoB9B,IAApB,EAA0BjH,UAA1B,EAAsCoJ,MAAtC,EAA8C7K,MAA9C,EAAsD;AAClD,MAAM8K,QAAQ,GAAGjK,IAAI,CAACuG,GAAL,CAAS,EAAT,EAAa3F,UAAb,CAAjB;AACA,MAAMsJ,KAAK,GAAG7L,KAAK,CACd8L,KADS,CACHH,MADG,EAETpL,GAFS,CAEL,UAAC6G,CAAD,EAAInG,CAAJ;AAAA,WAAU8K,QAAQ,CAACvC,IAAD,EAAOoC,QAAP,EAAiB3K,CAAjB,EAAoBH,MAApB,CAAlB;AAAA,GAFK,CAAd;AAGA,MAAMqK,MAAM,GAAGU,KAAK,CAACtL,GAAN,CAAU,UAAA8I,IAAI;AAAA,WAAI2C,WAAW,CAAC3C,IAAD,EAAOuC,QAAP,CAAf;AAAA,GAAd,CAAf;AACA,SAAOT,MAAP;AACH;;AACD5L,OAAO,CAAC+L,UAAR,GAAqBA,UAArB;AACA;AACA;AACA;AACA;;AACA,SAASS,QAAT,CAAkBvC,IAAlB,EAAkD;AAAA,MAA1BoC,QAA0B,uEAAf,EAAe;AAAA,MAAX9B,CAAW;AAAA,MAARhJ,MAAQ;AAC9C,MAAMe,OAAO,GAAG7B,KAAK,CAAC8L,KAAN,CAAYtC,IAAI,CAACxH,MAAjB,CAAhB;AACA,MAAMqH,IAAI,GAAG4C,iBAAiB,CAACzC,IAAD,EAAO3H,OAAP,EAAgB+J,QAAhB,EAA0B9B,CAA1B,EAA6BhJ,MAA7B,CAA9B;AACA,SAAOuI,IAAP;AACH;;AACD,SAAS4C,iBAAT,CAA2BzC,IAA3B,EAAiC3H,OAAjC,EAAoE;AAAA,MAA1B+J,QAA0B,uEAAf,EAAe;AAAA,MAAX3B,CAAW;AAAA,MAARnJ,MAAQ;;AAChE,MAAIe,OAAO,CAACG,MAAR,GAAiB4J,QAArB,EAA+B;AAC3B,QAAMM,YAAY,GAAGC,8BAA8B,CAAC3C,IAAD,EAAO3H,OAAP,EAAgBf,MAAhB,CAAnD;AAD2B,QAEnBsL,WAFmB,GAE+BF,YAF/B,CAEnBE,WAFmB;AAAA,QAENC,YAFM,GAE+BH,YAF/B,CAENG,YAFM;AAAA,QAEQC,UAFR,GAE+BJ,YAF/B,CAEQI,UAFR;AAAA,QAEoBC,MAFpB,GAE+BL,YAF/B,CAEoBK,MAFpB;AAG3B,QAAM9I,SAAS,GAAGwI,iBAAiB,CAACzC,IAAD,EAAO4C,WAAP,EAAoBR,QAApB,EAA8B3B,CAAC,GAAG,CAAlC,EAAqCnJ,MAArC,CAAnC;AACA,QAAM4C,UAAU,GAAGuI,iBAAiB,CAACzC,IAAD,EAAO6C,YAAP,EAAqBT,QAArB,EAA+B3B,CAAC,GAAG,CAAnC,EAAsCnJ,MAAtC,CAApC;AACA,QAAM0L,IAAI,GAAG;AAAE/I,eAAS,EAATA,SAAF;AAAaC,gBAAU,EAAVA,UAAb;AAAyB+I,YAAM,EAAE,KAAjC;AAAwCH,gBAAU,EAAVA,UAAxC;AAAoDC,YAAM,EAANA;AAApD,KAAb;AACA,WAAOC,IAAP;AACH,GAPD,MAQK;AACD,QAAMA,KAAI,GAAG;AAAE3K,aAAO,EAAPA,OAAF;AAAW4K,YAAM,EAAE;AAAnB,KAAb;AACA,WAAOD,KAAP;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASL,8BAAT,CAAwC3C,IAAxC,EAA8C3H,OAA9C,EAAuDf,MAAvD,EAA+D;AAC3D,MAAM4L,GAAG,GAAGlD,IAAI,CAAC,CAAD,CAAJ,CAAQxH,MAApB,CAD2D,CAE3D;;AACA,MAAI2K,SAAS,GAAG3M,KAAK,CAACoB,UAAN,CAAiBS,OAAO,CAACG,MAAzB,EAAiClB,MAAjC,CAAhB;AACA,MAAI8L,UAAU,GAAG5M,KAAK,CAACoB,UAAN,CAAiBS,OAAO,CAACG,MAAzB,EAAiClB,MAAjC,CAAjB;AACA8L,YAAU,IAAID,SAAS,KAAKC,UAAd,GAA2B,CAA3B,GAA+B,CAA7C;AACAA,YAAU,GAAGA,UAAU,GAAG/K,OAAO,CAACG,MAAlC;AACA,MAAM6K,IAAI,GAAGhL,OAAO,CAAC8K,SAAD,CAApB;AACA,MAAMG,KAAK,GAAGjL,OAAO,CAAC+K,UAAD,CAArB,CAR2D,CAS3D;AACA;;AACA,MAAIG,gBAAgB,GAAG,CAAvB;AACA,MAAMC,gBAAgB,GAAGhN,KAAK,CAACgB,KAAN,CAAY0L,GAAZ,CAAzB;;AACA,OAAK,IAAIzL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+L,gBAAgB,CAAChL,MAArC,EAA6Cf,CAAC,EAA9C,EAAkD;AAC9C+L,oBAAgB,CAAC/L,CAAD,CAAhB,GAAsBuI,IAAI,CAACqD,IAAD,CAAJ,CAAW5L,CAAX,IAAgBuI,IAAI,CAACsD,KAAD,CAAJ,CAAY7L,CAAZ,CAAtC;AACA8L,oBAAgB,IACXC,gBAAgB,CAAC/L,CAAD,CAAhB,IAAuBuI,IAAI,CAACqD,IAAD,CAAJ,CAAW5L,CAAX,IAAgBuI,IAAI,CAACsD,KAAD,CAAJ,CAAY7L,CAAZ,CAAvC,CAAD,GAA2D,GAD/D;AAEH,GAjB0D,CAkB3D;AACA;AACA;;;AACA,MAAIgM,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAMC,IAAI,GAAGnN,KAAK,CAACgB,KAAN,CAAYa,OAAO,CAACG,MAApB,CAAb;;AACA,OAAK,IAAIf,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGY,OAAO,CAACG,MAA5B,EAAoCf,EAAC,EAArC,EAAyC;AACrC,QAAImM,MAAM,GAAGL,gBAAb;;AACA,SAAK,IAAInK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8J,GAApB,EAAyB9J,CAAC,EAA1B,EAA8B;AAC1BwK,YAAM,IAAIJ,gBAAgB,CAACpK,CAAD,CAAhB,GAAsB4G,IAAI,CAAC3H,OAAO,CAACZ,EAAD,CAAR,CAAJ,CAAiB2B,CAAjB,CAAhC;AACH;;AACD,QAAIwK,MAAM,KAAK,CAAf,EAAkB;AACdD,UAAI,CAAClM,EAAD,CAAJ,GAAUjB,KAAK,CAACoB,UAAN,CAAiB,CAAjB,EAAoBN,MAApB,CAAV;;AACA,UAAIqM,IAAI,CAAClM,EAAD,CAAJ,KAAY,CAAhB,EAAmB;AACfgM,aAAK,IAAI,CAAT;AACH,OAFD,MAGK;AACDC,cAAM,IAAI,CAAV;AACH;AACJ,KARD,MASK,IAAIE,MAAM,GAAG,CAAb,EAAgB;AACjBD,UAAI,CAAClM,EAAD,CAAJ,GAAU,CAAV;AACAgM,WAAK,IAAI,CAAT;AACH,KAHI,MAIA;AACDE,UAAI,CAAClM,EAAD,CAAJ,GAAU,CAAV;AACAiM,YAAM,IAAI,CAAV;AACH;AACJ,GA9C0D,CA+C3D;;;AACA,MAAMd,WAAW,GAAGpM,KAAK,CAACgB,KAAN,CAAYiM,KAAZ,CAApB;AACA,MAAMZ,YAAY,GAAGrM,KAAK,CAACgB,KAAN,CAAYkM,MAAZ,CAArB,CAjD2D,CAkD3D;;AACAD,OAAK,GAAG,CAAR;AACAC,QAAM,GAAG,CAAT;;AACA,OAAK,IAAIjM,GAAT,IAAcjB,KAAK,CAAC8L,KAAN,CAAYqB,IAAI,CAACnL,MAAjB,CAAd,EAAwC;AACpC,QAAImL,IAAI,CAAClM,GAAD,CAAJ,KAAY,CAAhB,EAAmB;AACfmL,iBAAW,CAACa,KAAD,CAAX,GAAqBpL,OAAO,CAACZ,GAAD,CAA5B;AACAgM,WAAK,IAAI,CAAT;AACH,KAHD,MAIK;AACDZ,kBAAY,CAACa,MAAD,CAAZ,GAAuBrL,OAAO,CAACZ,GAAD,CAA9B;AACAiM,YAAM,IAAI,CAAV;AACH;AACJ;;AACD,SAAO;AACHd,eAAW,EAAXA,WADG;AAEHC,gBAAY,EAAZA,YAFG;AAGHC,cAAU,EAAEU,gBAHT;AAIHT,UAAM,EAAEQ;AAJL,GAAP;AAMH;;AACD,SAASf,WAAT,CAAqB3C,IAArB,EAA2BuC,QAA3B,EAAqC;AACjC,MAAMyB,MAAM,GAAGC,QAAQ,CAACjE,IAAD,CAAvB;AACA,MAAMkE,OAAO,GAAGC,SAAS,CAACnE,IAAD,CAAzB,CAFiC,CAGjC;;AACA,MAAMmC,WAAW,GAAGxL,KAAK,CACpB8L,KADe,CACTuB,MADS,EAEf9M,GAFe,CAEX;AAAA,WAAMP,KAAK,CAACgB,KAAN,CAAYqI,IAAI,CAACiD,UAAL,GAAkBjD,IAAI,CAACiD,UAAL,CAAgBtK,MAAlC,GAA2C,CAAvD,CAAN;AAAA,GAFW,CAApB;AAGA,MAAMyJ,OAAO,GAAGzL,KAAK,CAACgB,KAAN,CAAYqM,MAAZ,CAAhB;AACA,MAAM3B,QAAQ,GAAG1L,KAAK,CAAC8L,KAAN,CAAYuB,MAAZ,EAAoB9M,GAApB,CAAwB;AAAA,WAAM,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAN;AAAA,GAAxB,CAAjB;AACA,MAAMsB,OAAO,GAAG7B,KAAK,CAChB8L,KADW,CACLyB,OADK,EAEXhN,GAFW,CAEP;AAAA,WAAMP,KAAK,CAAC8L,KAAN,CAAYF,QAAZ,EAAsBrL,GAAtB,CAA0B;AAAA,aAAM,CAAC,CAAP;AAAA,KAA1B,CAAN;AAAA,GAFO,CAAhB;AAGAkN,kBAAgB,CAACpE,IAAD,EAAOmC,WAAP,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuC7J,OAAvC,EAAgD,CAAhD,EAAmD,CAAnD,CAAhB;AACA,SAAO,IAAI0J,QAAJ,CAAaC,WAAb,EAA0BC,OAA1B,EAAmCC,QAAnC,EAA6C7J,OAA7C,CAAP;AACH;;AACD,SAAS4L,gBAAT,CAA0BpE,IAA1B,EAAgCmC,WAAhC,EAA6CC,OAA7C,EAAsDC,QAAtD,EAAgE7J,OAAhE,EAAyE6L,OAAzE,EAAkFC,OAAlF,EAA2F;AACvF,MAAItE,IAAI,CAACoD,MAAT,EAAiB;AAAA;;AACbf,YAAQ,CAACgC,OAAD,CAAR,CAAkB,CAAlB,IAAuB,CAACC,OAAxB,CADa,CAEb;AACA;;AACA,wBAAA9L,OAAO,CAAC8L,OAAD,CAAP,EAAiBC,MAAjB,0BAAwB,CAAxB,EAA2BvE,IAAI,CAACxH,OAAL,CAAaG,MAAxC,4BAAmDqH,IAAI,CAACxH,OAAxD;;AACA8L,WAAO,IAAI,CAAX;AACA,WAAO;AAAED,aAAO,EAAPA,OAAF;AAAWC,aAAO,EAAPA;AAAX,KAAP;AACH,GAPD,MAQK;AACDnC,eAAW,CAACkC,OAAD,CAAX,GAAuBrE,IAAI,CAACiD,UAA5B;AACAb,WAAO,CAACiC,OAAD,CAAP,GAAmBrE,IAAI,CAACkD,MAAxB;AACAb,YAAQ,CAACgC,OAAD,CAAR,CAAkB,CAAlB,IAAuBA,OAAO,GAAG,CAAjC;AACA,QAAMG,UAAU,GAAGH,OAAnB;AACA,QAAII,GAAG,GAAGL,gBAAgB,CAACpE,IAAI,CAAC5F,SAAN,EAAiB+H,WAAjB,EAA8BC,OAA9B,EAAuCC,QAAvC,EAAiD7J,OAAjD,EAA0D6L,OAAO,GAAG,CAApE,EAAuEC,OAAvE,CAA1B;AACAD,WAAO,GAAGI,GAAG,CAACJ,OAAd;AACAC,WAAO,GAAGG,GAAG,CAACH,OAAd;AACAjC,YAAQ,CAACmC,UAAD,CAAR,CAAqB,CAArB,IAA0BH,OAAO,GAAG,CAApC;AACAI,OAAG,GAAGL,gBAAgB,CAACpE,IAAI,CAAC3F,UAAN,EAAkB8H,WAAlB,EAA+BC,OAA/B,EAAwCC,QAAxC,EAAkD7J,OAAlD,EAA2D6L,OAAO,GAAG,CAArE,EAAwEC,OAAxE,CAAtB;AACA,WAAO;AAAED,aAAO,EAAEI,GAAG,CAACJ,OAAf;AAAwBC,aAAO,EAAEG,GAAG,CAACH;AAArC,KAAP;AACH;AACJ;;AACD,SAASL,QAAT,CAAkBjE,IAAlB,EAAwB;AACpB,MAAIA,IAAI,CAACoD,MAAT,EAAiB;AACb,WAAO,CAAP;AACH,GAFD,MAGK;AACD,WAAO,IAAIa,QAAQ,CAACjE,IAAI,CAAC5F,SAAN,CAAZ,GAA+B6J,QAAQ,CAACjE,IAAI,CAAC3F,UAAN,CAA9C;AACH;AACJ;;AACD,SAAS8J,SAAT,CAAmBnE,IAAnB,EAAyB;AACrB,MAAIA,IAAI,CAACoD,MAAT,EAAiB;AACb,WAAO,CAAP;AACH,GAFD,MAGK;AACD,WAAOe,SAAS,CAACnE,IAAI,CAAC5F,SAAN,CAAT,GAA4B+J,SAAS,CAACnE,IAAI,CAAC3F,UAAN,CAA5C;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2H,aAAT,CAAuB0C,QAAvB,EAAiC;AAC7B,MAAIA,QAAQ,CAAC/L,MAAT,GAAkB,CAAtB,EAAyB;AACrB,QAAMyE,MAAM,GAAG,EAAf;;AADqB,+CAEJsH,QAFI;AAAA;;AAAA;AAErB,0DAA2B;AAAA,YAAlB1E,IAAkB;AACvB5C,cAAM,CAAC/F,IAAP,OAAA+F,MAAM,qBAAS4C,IAAI,CAACxH,OAAd,EAAN;AACH;AAJoB;AAAA;AAAA;AAAA;AAAA;;AAKrB,WAAO4E,MAAP;AACH,GAND,MAOK;AACD,WAAO,CAAC,CAAC,CAAC,CAAF,CAAD,CAAP;AACH;AACJ;;AACDlH,OAAO,CAAC8L,aAAR,GAAwBA,aAAxB;AACA;AACA;AACA;;AACA,SAAS2C,UAAT,CAAoB1B,UAApB,EAAgCC,MAAhC,EAAwC0B,KAAxC,EAA+CnN,MAA/C,EAAuD;AACnD,MAAIsM,MAAM,GAAGb,MAAb;;AACA,OAAK,IAAI3J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqL,KAAK,CAACjM,MAA1B,EAAkCY,CAAC,EAAnC,EAAuC;AACnCwK,UAAM,IAAId,UAAU,CAAC1J,CAAD,CAAV,GAAgBqL,KAAK,CAACrL,CAAD,CAA/B;AACH;;AACD,MAAIwK,MAAM,KAAK,CAAf,EAAkB;AACd,QAAMD,IAAI,GAAGnN,KAAK,CAACoB,UAAN,CAAiB,CAAjB,EAAoBN,MAApB,CAAb;AACA,WAAOqM,IAAP;AACH,GAHD,MAIK,IAAIC,MAAM,GAAG,CAAb,EAAgB;AACjB,WAAO,CAAP;AACH,GAFI,MAGA;AACD,WAAO,CAAP;AACH;AACJ;AACD;AACA;AACA;;;AACA,SAAS1C,cAAT,CAAwBuD,KAAxB,EAA+B5E,IAA/B,EAAqCvI,MAArC,EAA6C;AACzC,MAAI0L,IAAI,GAAG,CAAX;;AACA,SAAOnD,IAAI,CAACqC,QAAL,CAAcc,IAAd,EAAoB,CAApB,IAAyB,CAAhC,EAAmC;AAC/B,QAAMW,IAAI,GAAGa,UAAU,CAAC3E,IAAI,CAACmC,WAAL,CAAiBgB,IAAjB,CAAD,EAAyBnD,IAAI,CAACoC,OAAL,CAAae,IAAb,CAAzB,EAA6CyB,KAA7C,EAAoDnN,MAApD,CAAvB;;AACA,QAAIqM,IAAI,KAAK,CAAb,EAAgB;AACZX,UAAI,GAAGnD,IAAI,CAACqC,QAAL,CAAcc,IAAd,EAAoB,CAApB,CAAP;AACH,KAFD,MAGK;AACDA,UAAI,GAAGnD,IAAI,CAACqC,QAAL,CAAcc,IAAd,EAAoB,CAApB,CAAP;AACH;AACJ;;AACD,MAAM/K,KAAK,GAAG,CAAC,CAAD,GAAK4H,IAAI,CAACqC,QAAL,CAAcc,IAAd,EAAoB,CAApB,CAAnB;AACA,SAAOnD,IAAI,CAACxH,OAAL,CAAaJ,KAAb,CAAP;AACH;;AACDlC,OAAO,CAACmL,cAAR,GAAyBA,cAAzB,C;;;;;;;;;;;;ACrSa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAIwD,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAe/O,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAY6O,CAAjB,GAAqB7O,KAArB,GAA6B,IAAI6O,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,aAAO,CAAChP,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAK6O,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBnP,KAAnB,EAA0B;AAAE,UAAI;AAAEoP,YAAI,CAACN,SAAS,CAACO,IAAV,CAAerP,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOsP,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBvP,KAAlB,EAAyB;AAAE,UAAI;AAAEoP,YAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmB9O,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOsP,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAc7N,MAAd,EAAsB;AAAEA,YAAM,CAACiO,IAAP,GAAcR,OAAO,CAACzN,MAAM,CAACvB,KAAR,CAArB,GAAsC+O,KAAK,CAACxN,MAAM,CAACvB,KAAR,CAAL,CAAoByP,IAApB,CAAyBN,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,QAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACY,KAAV,CAAgBf,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDS,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASAxP,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAAC4P,aAAR,GAAwB5P,OAAO,CAAC6P,sBAAR,GAAiC7P,OAAO,CAAC8P,gBAAR,GAA2B9P,OAAO,CAAC+P,YAAR,GAAuB/P,OAAO,CAACgQ,MAAR,GAAiBhQ,OAAO,CAACiQ,SAAR,GAAoBjQ,OAAO,CAACkQ,OAAR,GAAkBlQ,OAAO,CAACmQ,IAAR,GAAe,KAAK,CAAtL;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMjP,IAAI,GAAGR,mBAAO,CAAC,qDAAD,CAApB;;AACA,IAAMyG,MAAM,GAAGzG,mBAAO,CAAC,yDAAD,CAAtB;;AACA,IAAM0P,SAAS,GAAG1P,mBAAO,CAAC,iEAAD,CAAzB;;AACA,IAAMoJ,IAAI,GAAGpJ,mBAAO,CAAC,qDAAD,CAApB;;AACA,IAAMD,KAAK,GAAGC,mBAAO,CAAC,uDAAD,CAArB;;AACA,IAAM2P,wBAAwB,GAAG3P,mBAAO,CAAC,kFAAD,CAAxC;;AACA,IAAM4P,kBAAkB,GAAG,IAA3B;AACA,IAAMC,gBAAgB,GAAG,IAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMJ,I;AACF,kBAAyB;AAAA;;AAAA,QAAbK,MAAa,uEAAJ,EAAI;;AAAA;;AACrB,SAAKC,YAAL,GAAoB,GAApB;AACA,SAAKC,iBAAL,GAAyB,GAAzB;AACA,SAAKnM,OAAL,GAAe,GAAf;AACA,SAAKoM,WAAL,GAAmB,CAAnB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAK5N,UAAL,GAAkB,EAAlB;AACA,SAAK6N,kBAAL,GAA0B,CAA1B;AACA,SAAKtP,MAAL,GAAca,IAAI,CAACb,MAAnB;AACA,SAAKuP,iBAAL,GAAyB,GAAzB;AACA,SAAKC,aAAL,GAAqB,GAArB;AACA,SAAKC,MAAL,GAAc,GAAd;AACA,SAAKC,kBAAL,GAA0B,GAA1B,CAZqB,CAarB;;AACA,SAAKC,YAAL,GAAoB;AAAc;AAAlC;AACA,SAAKC,YAAL,GAAoB,GAApB;AACA,SAAKC,gBAAL,GAAwB,KAAKpO,UAA7B;AACA,SAAK+G,UAAL,GAAkBkG,SAAlB;AACA,SAAKoB,aAAL,GAAqB,KAArB;AACA,SAAK7C,QAAL,GAAgB,EAAhB,CAnBqB,CAoBrB;;AACA,SAAK8C,SAAL,GAAiB,EAAjB;AACA,SAAKC,iBAAL,GAAyB,IAAIC,iBAAJ,EAAzB;;AACA,QAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAC1L,GAAD,EAAS;AACtB,UAAIyK,MAAM,CAACzK,GAAD,CAAN,KAAgB2L,SAApB,EACI,KAAI,CAAC3L,GAAD,CAAJ,GAAYyK,MAAM,CAACzK,GAAD,CAAlB;AACP,KAHD;;AAIA0L,YAAQ,CAAC,YAAD,CAAR;AACAA,YAAQ,CAAC,cAAD,CAAR;AACAA,YAAQ,CAAC,mBAAD,CAAR;AACAA,YAAQ,CAAC,SAAD,CAAR;AACAA,YAAQ,CAAC,aAAD,CAAR;AACAA,YAAQ,CAAC,SAAD,CAAR;AACAA,YAAQ,CAAC,YAAD,CAAR;AACAA,YAAQ,CAAC,oBAAD,CAAR;AACAA,YAAQ,CAAC,QAAD,CAAR;AACAA,YAAQ,CAAC,mBAAD,CAAR;AACAA,YAAQ,CAAC,eAAD,CAAR;AACAA,YAAQ,CAAC,QAAD,CAAR;AACAA,YAAQ,CAAC,oBAAD,CAAR;AACH;AACD;AACJ;AACA;;;;;WACI,aAAIE,CAAJ,EAAOC,gBAAP,EAAyB;AACrB,WAAKC,aAAL,CAAmBF,CAAnB,EAAsBC,gBAAtB;AACA,WAAKE,cAAL;AACA,aAAO,KAAKR,SAAZ;AACH;AACD;AACJ;AACA;AACA;;;;WACI,kBAASK,CAAT,EAAYC,gBAAZ,EAAqD;AAAA,UAAvBG,QAAuB,uEAAZ;AAAA,eAAM,IAAN;AAAA,OAAY;AACjD,aAAOpD,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,uCAAuB;AAAA;AAAA;AAAA;AAAA;AACnC,qBAAKkD,aAAL,CAAmBF,CAAnB,EAAsBC,gBAAtB;AADmC;AAEnC,uBAAM,KAAKI,mBAAL,CAAyBD,QAAzB,CAAN;;AAFmC;AAAA,iDAG5B,KAAKT,SAHuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAKH;AACD;AACJ;AACA;;;;WACI,iCAAwBW,CAAxB,EAAwC;AAAA,UAAbzB,MAAa,uEAAJ,EAAI;AACpC,WAAKyB,CAAL,GAASA,CAAT;AACA,WAAKf,YAAL,GAAoBV,MAAM,CAACU,YAAP,IAAuB,KAAKA,YAAhD;AACA,WAAKC,YAAL,GAAoBX,MAAM,CAACW,YAAP,IAAuB,KAAKA,YAAhD;AACA,WAAKC,gBAAL,GAAwBZ,MAAM,CAACY,gBAAP,IAA2B,KAAKA,gBAAxD;AACH;AACD;AACJ;AACA;;;;WACI,2BAAkBc,UAAlB,EAA8BC,YAA9B,EAA4C;AACxC,WAAKD,UAAL,GAAkBA,UAAlB;AACA,WAAKC,YAAL,GAAoBA,YAApB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,uBAAcR,CAAd,EAAiBC,gBAAjB,EAAmC;AAC/B,UAAID,CAAC,CAAClP,MAAF,IAAY,KAAKO,UAArB,EAAiC;AAC7B,cAAM,IAAI4C,KAAJ,mCAAqC+L,CAAC,CAAClP,MAAvC,qCAAwE,KAAKO,UAA7E,0DAAN;AACH,OAH8B,CAI/B;;;AACA,UAAI,KAAK2O,CAAL,KAAWA,CAAX,IAAgB,KAAKN,aAAzB,EAAwC;AACpC,eAAO,KAAKe,UAAL,EAAP;AACH;;AACD,WAAKT,CAAL,GAASA,CAAT;;AACA,UAAI,CAAC,KAAKO,UAAN,IAAoB,CAAC,KAAKC,YAA9B,EAA4C;AACxC,YAAME,UAAU,GAAG,KAAKC,gBAAL,CAAsBX,CAAtB,CAAnB;AACA,aAAKO,UAAL,GAAkBG,UAAU,CAACH,UAA7B;AACA,aAAKC,YAAL,GAAoBE,UAAU,CAACF,YAA/B;AACH;;AACD,WAAK9G,KAAL,GAAa,KAAKkH,kBAAL,CAAwBZ,CAAxB,EAA2B,KAAK3O,UAAhC,EAA4C,KAAK+N,aAAjD,CAAb,CAd+B,CAe/B;;AACA,WAAKyB,aAAL;AACA,WAAKC,WAAL,GAAmB,KAAKC,eAAL,CAAqBf,CAArB,CAAnB,CAjB+B,CAkB/B;;AACA,WAAKgB,mCAAL;;AAnB+B,kCAoBU,KAAKC,gCAAL,CAAsChB,gBAAtC,CApBV;AAAA,UAoBvBiB,IApBuB,yBAoBvBA,IApBuB;AAAA,UAoBjBC,IApBiB,yBAoBjBA,IApBiB;AAAA,UAoBXC,eApBW,yBAoBXA,eApBW,EAqB/B;;;AACA,WAAKxB,iBAAL,CAAuBsB,IAAvB,GAA8BA,IAA9B;AACA,WAAKtB,iBAAL,CAAuBuB,IAAvB,GAA8BA,IAA9B;AACA,WAAKvB,iBAAL,CAAuBwB,eAAvB,GAAyCA,eAAzC,CAxB+B,CAyB/B;;AACA,WAAKC,sBAAL;AACA,WAAKC,0BAAL;AACA,WAAK5B,aAAL,GAAqB,IAArB;AACA,aAAO,KAAKe,UAAL,EAAP;AACH;;;WACD,yBAAgB;AAAA,kCAC6BhC,SAAS,CAACxG,mBAAV,CAA8B,KAAKG,UAAnC,CAD7B;AAAA,UACJkB,YADI,yBACJA,YADI;AAAA,UACUH,cADV,yBACUA,cADV;;AAEZ,WAAKG,YAAL,GAAoBA,YAApB;AACA,WAAKH,cAAL,GAAsBA,cAAtB;AACA,WAAKoI,MAAL,GAAc9C,SAAS,CAACzG,uBAAV,CAAkC,KAAKI,UAAvC,CAAd;AACH;;;WACD,yBAAgB4H,CAAhB,EAAmB;AACf,UAAMO,UAAU,GAAG,KAAKA,UAAxB;AACA,UAAMC,YAAY,GAAG,KAAKA,YAA1B;AACA,UAAM5M,IAAI,GAAG,CAACoM,CAAC,CAAClP,MAAH,EAAWkP,CAAC,CAAClP,MAAb,CAAb;AACA,UAAMgQ,WAAW,GAAG,IAAItL,MAAM,CAAChC,YAAX,CAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoCI,IAApC,CAApB;;AACA,WAAK,IAAI7D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwQ,UAAU,CAACzP,MAA/B,EAAuCf,CAAC,EAAxC,EAA4C;AACxC,YAAMyR,GAAG,GAAGjB,UAAU,CAACxQ,CAAD,CAAtB;AACA,YAAM0R,SAAS,GAAGjB,YAAY,CAACzQ,CAAD,CAA9B;;AACA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuR,GAAG,CAAC1Q,MAAxB,EAAgCb,CAAC,EAAjC,EAAqC;AACjC,cAAMyR,QAAQ,GAAGF,GAAG,CAACvR,CAAD,CAApB;AACA,cAAM0R,QAAQ,GAAGF,SAAS,CAACxR,CAAD,CAA1B;;AACA,cAAI0R,QAAQ,GAAG,CAAf,EAAkB;AACdb,uBAAW,CAACxM,GAAZ,CAAgBvE,CAAhB,EAAmB2R,QAAnB,EAA6BC,QAA7B;AACH;AACJ;AACJ;;AACD,UAAMpO,SAAS,GAAGiC,MAAM,CAACjC,SAAP,CAAiBuN,WAAjB,CAAlB;AACA,aAAOtL,MAAM,CAACtC,OAAP,CAAe4N,WAAf,EAA4BvN,SAA5B,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,mBAAUqO,WAAV,EAAuB;AAAA;;AACnB;AACA,UAAMC,OAAO,GAAG,KAAK7B,CAArB;;AACA,UAAI6B,OAAO,KAAK9B,SAAZ,IAAyB8B,OAAO,CAAC/Q,MAAR,KAAmB,CAAhD,EAAmD;AAC/C,cAAM,IAAImD,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACD,UAAI5C,UAAU,GAAGZ,IAAI,CAACC,KAAL,CAAW,KAAKW,UAAL,GAAkB,KAAKiO,kBAAlC,CAAjB;AACAjO,gBAAU,GAAGZ,IAAI,CAACqR,GAAL,CAASD,OAAO,CAAC/Q,MAAjB,EAAyBO,UAAzB,CAAb;AACA,UAAM0Q,IAAI,GAAGtD,SAAS,CAAC1G,gBAAV,CAA2B,KAAK8E,QAAhC,EAA0CgF,OAA1C,EAAmDD,WAAnD,EAAgEvQ,UAAhE,EAA4E,KAAK8H,cAAjF,EAAiG,KAAKG,YAAtG,EAAoH,KAAK1J,MAAzH,CAAb;AACA,UAAMC,MAAM,GAAG,KAAK0R,MAAL,CAAYM,OAAZ,EAAqB,KAAKf,WAA1B,EAAuCiB,IAAvC,EAA6CH,WAA7C,CAAf;;AATmB,6BAUmBrS,IAAI,CAACf,UAAL,CAAgBqB,MAAhB,CAVnB;AAAA,UAUbc,OAVa,oBAUbA,OAVa;AAAA,UAUK8Q,SAVL,oBAUJ7Q,OAVI;;AAWnBD,aAAO,GAAGA,OAAO,CAACtB,GAAR,CAAY,UAAAqG,CAAC;AAAA,eAAIA,CAAC,CAACqE,KAAF,CAAQ,CAAR,EAAW,MAAI,CAAC1I,UAAhB,CAAJ;AAAA,OAAb,CAAV;AACAoQ,eAAS,GAAGA,SAAS,CAACpS,GAAV,CAAc,UAAAqG,CAAC;AAAA,eAAIA,CAAC,CAACqE,KAAF,CAAQ,CAAR,EAAW,MAAI,CAAC1I,UAAhB,CAAJ;AAAA,OAAf,CAAZ;AACA,UAAM2Q,yBAAyB,GAAGvR,IAAI,CAACuG,GAAL,CAAS,CAAT,EAAY,KAAK+H,iBAAL,GAAyB,CAArC,CAAlC;;AAbmB,kCAcM,KAAKkD,iBAAL,CAAuBR,SAAvB,EAAkC,KAAKpQ,UAAvC,EAAmD2Q,yBAAnD,CAdN;AAAA,UAcXE,MAdW,yBAcXA,MAdW;AAAA,UAcHC,IAdG,yBAcHA,IAdG;;AAAA,kCAeU,KAAKC,0BAAL,CAAgCzR,OAAhC,EAAyC8Q,SAAzC,EAAoDS,MAApD,EAA4DC,IAA5D,CAfV;AAAA,UAeX1O,IAfW,yBAeXA,IAfW;AAAA,UAeLC,IAfK,yBAeLA,IAfK;AAAA,UAeC0B,IAfD,yBAeCA,IAfD;;AAgBnB,UAAMnG,IAAI,GAAG,CAAC2S,WAAW,CAAC9Q,MAAb,EAAqB+Q,OAAO,CAAC/Q,MAA7B,CAAb;AACA,UAAI4I,KAAK,GAAG,IAAIlE,MAAM,CAAChC,YAAX,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC0B,IAApC,EAA0CnG,IAA1C,CAAZ,CAjBmB,CAkBnB;AACA;AACA;;AACA,UAAMoT,MAAM,GAAG7M,MAAM,CAACzC,SAAP,CAAiB2G,KAAjB,EAAwB;AAAK;AAA7B,OAAf;AACA,UAAM4I,SAAS,GAAG9M,MAAM,CAAC1C,MAAP,CAAcuP,MAAd,CAAlB;AACA,UAAMrT,OAAO,GAAG4S,WAAW,CAAC9Q,MAA5B;AACA,UAAMyR,QAAQ,GAAGzT,KAAK,CAAC0T,SAAN,CAAgBF,SAAS,CAAC3R,OAA1B,EAAmC3B,OAAnC,EAA4C,KAAKqC,UAAjD,CAAjB;AACA,UAAMoR,QAAQ,GAAG3T,KAAK,CAAC0T,SAAN,CAAgBF,SAAS,CAAC3O,MAA1B,EAAkC3E,OAAlC,EAA2C,KAAKqC,UAAhD,CAAjB;AACA,UAAMsO,SAAS,GAAG1B,aAAa,CAACsE,QAAD,EAAWE,QAAX,EAAqB,KAAK9C,SAA1B,CAA/B;AACA,UAAMV,OAAO,GAAG,KAAKA,OAAL,GACV,KAAKA,OAAL,GAAe,CADL,GAEVvF,KAAK,CAAC3F,KAAN,IAAe,KAAf,GACI,GADJ,GAEI,EAJV;AAKA,UAAM2O,QAAQ,GAAGhJ,KAAK,CACjB1D,SADY,GAEZ2M,MAFY,CAEL,UAAC3L,GAAD,EAAM4L,GAAN;AAAA,eAAeA,GAAG,GAAG5L,GAAN,GAAY4L,GAAZ,GAAkB5L,GAAjC;AAAA,OAFK,EAEkC,CAFlC,CAAjB;AAGA0C,WAAK,GAAGA,KAAK,CAACrK,GAAN,CAAU,UAAAf,KAAK;AAAA,eAAKA,KAAK,GAAGoU,QAAQ,GAAGzD,OAAnB,GAA6B,CAA7B,GAAiC3Q,KAAtC;AAAA,OAAf,CAAR;AACAoL,WAAK,GAAGlE,MAAM,CAACxC,cAAP,CAAsB0G,KAAtB,CAAR;AACA,UAAM0H,eAAe,GAAG,KAAKyB,mBAAL,CAAyBnJ,KAAK,CAAC1D,SAAN,EAAzB,EAA4CiJ,OAA5C,CAAxB;AACA,UAAMiC,IAAI,GAAGxH,KAAK,CAACrE,OAAN,EAAb;AACA,UAAM8L,IAAI,GAAGzH,KAAK,CAACpE,OAAN,EAAb,CAvCmB,CAwCnB;;AACA,WAAKwN,iCAAL,CAAuC;AACnCC,qBAAa,EAAEpD,SADoB;AAEnCqD,qBAAa,EAAE,KAAKrD,SAFe;AAGnCuB,YAAI,EAAJA,IAHmC;AAInCC,YAAI,EAAJA,IAJmC;AAKnC8B,oBAAY,EAAE,CALqB;AAMnChE,eAAO,EAAPA,OANmC;AAOnC7N,iBAAS,EAAEsI,KAAK,CAACnD,OAAN,GAAgB,CAAhB,CAPwB;AAQnC6K,uBAAe,EAAfA;AARmC,OAAvC;AAUA,WAAKE,0BAAL;AACA,aAAO,KAAKnB,cAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,+CAAsC;AAAA,UAC1BG,CAD0B,GACjB,IADiB,CAC1BA,CAD0B;AAAA,UACvBN,CADuB,GACjB,IADiB,CACvBA,CADuB;;AAElC,UAAIM,CAAJ,EAAO;AACH,YAAIA,CAAC,CAACxP,MAAF,KAAakP,CAAC,CAAClP,MAAnB,EAA2B;AACvB,gBAAM,IAAImD,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,YAAI,KAAKsL,YAAL,KAAsB;AAAc;AAAxC,UAA2D;AACvD,gBAAM2D,EAAE,GAAG,KAAK1D,YAAL,GAAoB,GAA/B;AACA,gBAAM2D,OAAO,GAAGD,EAAE,GAAG,OAAO,OAAO,MAAM,KAAK1D,YAAlB,CAAP,CAAH,GAA6C,MAA/D;AACA,iBAAK9F,KAAL,GAAa,KAAK0J,oCAAL,CAA0C,KAAK1J,KAA/C,EAAsD4G,CAAtD,EAAyD6C,OAAzD,CAAb;AACH,WARE,CASH;;AACH;AACJ;AACD;AACJ;AACA;;;;WACI,gBAAO;AAAA,UACKF,YADL,GACsB,KAAKrD,iBAD3B,CACKqD,YADL;;AAEH,UAAIA,YAAY,GAAG,KAAKxC,UAAL,EAAnB,EAAsC;AAClC,aAAK4C,kBAAL,CAAwBJ,YAAxB;AACH;;AACD,aAAO,KAAKrD,iBAAL,CAAuBqD,YAA9B;AACH;AACD;AACJ;AACA;;;;WACI,wBAAe;AACX,aAAO,KAAKtD,SAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,0BAAiBK,CAAjB,EAAoB;AAAA,UACR5H,UADQ,GACmB,IADnB,CACRA,UADQ;AAAA,UACI/G,UADJ,GACmB,IADnB,CACIA,UADJ;;AAEhB,UAAMiS,IAAI,GAAG,SAAPA,IAAO,CAAC1K,CAAD;AAAA,eAAOnI,IAAI,CAAC8S,GAAL,CAAS3K,CAAT,IAAcnI,IAAI,CAAC8S,GAAL,CAAS,CAAT,CAArB;AAAA,OAAb;;AACA,UAAMC,eAAe,GAAG/E,SAAS,CAACvG,aAAV,CAAwBE,UAAxB,EAAoC,KAAKxI,MAAzC,CAAxB,CAHgB,CAIhB;;AACA,UAAM6T,KAAK,GAAG,SAARA,KAAQ,CAAC7K,CAAD,EAAO;AACjB,eAAOA,CAAC,KAAK,GAAN,GAAY,CAAZ,GAAgBnI,IAAI,CAACgT,KAAL,CAAW7K,CAAX,CAAvB;AACH,OAFD;;AAGA,UAAM6B,MAAM,GAAG,IAAIhK,IAAI,CAACC,KAAL,CAAW+S,KAAK,CAAC,SAAAzD,CAAC,CAAClP,MAAF,EAAY,GAAZ,IAAkB,IAAnB,CAAhB,CAAnB;AACA,UAAM0H,MAAM,GAAG/H,IAAI,CAACuG,GAAL,CAAS,CAAT,EAAYvG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACgT,KAAL,CAAWH,IAAI,CAACtD,CAAC,CAAClP,MAAH,CAAf,CAAX,CAAZ,CAAf;AACA,WAAK+L,QAAL,GAAgB1E,IAAI,CAACiC,UAAL,CAAgB4F,CAAhB,EAAmB3O,UAAnB,EAA+BoJ,MAA/B,EAAuC,KAAK7K,MAA5C,CAAhB;AACA,UAAM2I,SAAS,GAAGJ,IAAI,CAACgC,aAAL,CAAmB,KAAK0C,QAAxB,CAAlB;;AAXgB,6BAYa2G,eAAe,CAACxD,CAAD,EAAIzH,SAAJ,EAAelH,UAAf,EAA2BmH,MAA3B,CAZ5B;AAAA,UAYR7H,OAZQ,oBAYRA,OAZQ;AAAA,UAYCC,OAZD,oBAYCA,OAZD;;AAahB,aAAO;AAAE2P,kBAAU,EAAE5P,OAAd;AAAuB6P,oBAAY,EAAE5P;AAArC,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBoP,CAAnB,EAAsB3O,UAAtB,EAAuD;AAAA,UAArB+N,aAAqB,uEAAL,GAAK;AAAA,6BACe,IADf,CAC3CmB,UAD2C;AAAA,UAC3CA,UAD2C,iCAC9B,EAD8B;AAAA,+BACe,IADf,CAC1BC,YAD0B;AAAA,UAC1BA,YAD0B,mCACX,EADW;AAAA,UACPzB,iBADO,GACe,IADf,CACPA,iBADO;;AAAA,mCAE1B,KAAKkD,iBAAL,CAAuBzB,YAAvB,EAAqCnP,UAArC,EAAiD0N,iBAAjD,CAF0B;AAAA,UAE3CmD,MAF2C,0BAE3CA,MAF2C;AAAA,UAEnCC,IAFmC,0BAEnCA,IAFmC;;AAAA,mCAGtB,KAAKC,0BAAL,CAAgC7B,UAAhC,EAA4CC,YAA5C,EAA0D0B,MAA1D,EAAkEC,IAAlE,CAHsB;AAAA,UAG3C1O,IAH2C,0BAG3CA,IAH2C;AAAA,UAGrCC,IAHqC,0BAGrCA,IAHqC;AAAA,UAG/B0B,IAH+B,0BAG/BA,IAH+B;;AAInD,UAAMnG,IAAI,GAAG,CAAC+Q,CAAC,CAAClP,MAAH,EAAWkP,CAAC,CAAClP,MAAb,CAAb;AACA,UAAM4S,YAAY,GAAG,IAAIlO,MAAM,CAAChC,YAAX,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC0B,IAApC,EAA0CnG,IAA1C,CAArB;AACA,UAAMsE,SAAS,GAAGiC,MAAM,CAACjC,SAAP,CAAiBmQ,YAAjB,CAAlB;AACA,UAAMC,UAAU,GAAGnO,MAAM,CAACnC,gBAAP,CAAwBqQ,YAAxB,EAAsCnQ,SAAtC,CAAnB;AACA,UAAMwB,CAAC,GAAGS,MAAM,CAACrC,QAAP,CAAgBqC,MAAM,CAACpC,GAAP,CAAWsQ,YAAX,EAAyBnQ,SAAzB,CAAhB,EAAqDoQ,UAArD,CAAV;AACA,UAAM3O,CAAC,GAAGQ,MAAM,CAACvC,cAAP,CAAsB8B,CAAtB,EAAyBqK,aAAzB,CAAV;AACA,UAAMvG,CAAC,GAAGrD,MAAM,CAACvC,cAAP,CAAsB0Q,UAAtB,EAAkC,MAAMvE,aAAxC,CAAV;AACA,UAAMvP,MAAM,GAAG2F,MAAM,CAACpC,GAAP,CAAW4B,CAAX,EAAc6D,CAAd,CAAf;AACA,aAAOhJ,MAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,8CAAqC+T,aAArC,EAAoDC,MAApD,EAA4DV,OAA5D,EAAwF;AAAA,UAAnBW,WAAmB,uEAAL,GAAK;AACpF,UAAIC,YAAY,GAAG5F,gBAAgB,CAACyF,aAAD,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCX,OAArC,CAAnC;AACAY,kBAAY,GAAGvO,MAAM,CAACxC,cAAP,CAAsB+Q,YAAtB,CAAf;AACA,aAAO7F,sBAAsB,CAAC6F,YAAD,CAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,2BAAkBtC,SAAlB,EAA6BrR,CAA7B,EAAsF;AAAA,UAAtD2O,iBAAsD,uEAAlC,GAAkC;AAAA,UAA7BiF,KAA6B,uEAArB,EAAqB;AAAA,UAAjBC,SAAiB,uEAAL,GAAK;AAClF,UAAMJ,MAAM,GAAIpT,IAAI,CAAC8S,GAAL,CAASnT,CAAT,IAAcK,IAAI,CAAC8S,GAAL,CAAS,CAAT,CAAf,GAA8BU,SAA7C;AACA,UAAMvL,GAAG,GAAG5J,KAAK,CAACgB,KAAN,CAAY2R,SAAS,CAAC3Q,MAAtB,CAAZ;AACA,UAAMjB,MAAM,GAAGf,KAAK,CAACgB,KAAN,CAAY2R,SAAS,CAAC3Q,MAAtB,CAAf;;AACA,WAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0R,SAAS,CAAC3Q,MAA9B,EAAsCf,CAAC,EAAvC,EAA2C;AACvC,YAAImU,EAAE,GAAG,GAAT;AACA,YAAIC,EAAE,GAAG1U,QAAT;AACA,YAAI2U,GAAG,GAAG,GAAV,CAHuC,CAIvC;;AACA,YAAMC,YAAY,GAAG5C,SAAS,CAAC1R,CAAD,CAA9B;AACA,YAAMuU,YAAY,GAAGD,YAAY,CAACjO,MAAb,CAAoB,UAAA1E,CAAC;AAAA,iBAAIA,CAAC,GAAG,GAAR;AAAA,SAArB,CAArB;;AACA,YAAI4S,YAAY,CAACxT,MAAb,IAAuBiO,iBAA3B,EAA8C;AAC1C,cAAIxO,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWqO,iBAAX,CAAZ;AACA,cAAIwF,aAAa,GAAGxF,iBAAiB,GAAGxO,KAAxC;;AACA,cAAIA,KAAK,GAAG,CAAZ,EAAe;AACXmI,eAAG,CAAC3I,CAAD,CAAH,GAASuU,YAAY,CAAC/T,KAAK,GAAG,CAAT,CAArB;;AACA,gBAAIgU,aAAa,GAAG5F,kBAApB,EAAwC;AACpCjG,iBAAG,CAAC3I,CAAD,CAAH,IACIwU,aAAa,IAAID,YAAY,CAAC/T,KAAD,CAAZ,GAAsB+T,YAAY,CAAC/T,KAAK,GAAG,CAAT,CAAtC,CADjB;AAEH;AACJ,WAND,MAOK;AACDmI,eAAG,CAAC3I,CAAD,CAAH,GAASwU,aAAa,GAAGD,YAAY,CAAC,CAAD,CAArC;AACH;AACJ,SAbD,MAcK,IAAIA,YAAY,CAACxT,MAAb,GAAsB,CAA1B,EAA6B;AAC9B4H,aAAG,CAAC3I,CAAD,CAAH,GAASjB,KAAK,CAACkI,GAAN,CAAUsN,YAAV,CAAT;AACH;;AACD,aAAK,IAAI1L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoL,KAApB,EAA2BpL,CAAC,EAA5B,EAAgC;AAC5B,cAAI4L,IAAI,GAAG,GAAX;;AACA,eAAK,IAAIvU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwR,SAAS,CAAC1R,CAAD,CAAT,CAAae,MAAjC,EAAyCb,CAAC,EAA1C,EAA8C;AAC1C,gBAAMyB,CAAC,GAAG+P,SAAS,CAAC1R,CAAD,CAAT,CAAaE,CAAb,IAAkByI,GAAG,CAAC3I,CAAD,CAA/B;;AACA,gBAAI2B,CAAC,GAAG,CAAR,EAAW;AACP8S,kBAAI,IAAI/T,IAAI,CAACgU,GAAL,CAAS,EAAE/S,CAAC,GAAG0S,GAAN,CAAT,CAAR;AACH,aAFD,MAGK;AACDI,kBAAI,IAAI,GAAR;AACH;AACJ;;AACD,cAAI/T,IAAI,CAACiU,GAAL,CAASF,IAAI,GAAGX,MAAhB,IAA0BlF,kBAA9B,EAAkD;AAC9C;AACH;;AACD,cAAI6F,IAAI,GAAGX,MAAX,EAAmB;AACfM,cAAE,GAAGC,GAAL;AACAA,eAAG,GAAG,CAACF,EAAE,GAAGC,EAAN,IAAY,GAAlB;AACH,WAHD,MAIK;AACDD,cAAE,GAAGE,GAAL;;AACA,gBAAID,EAAE,KAAK1U,QAAX,EAAqB;AACjB2U,iBAAG,IAAI,CAAP;AACH,aAFD,MAGK;AACDA,iBAAG,GAAG,CAACF,EAAE,GAAGC,EAAN,IAAY,GAAlB;AACH;AACJ;AACJ;;AACDtU,cAAM,CAACE,CAAD,CAAN,GAAYqU,GAAZ,CApDuC,CAqDvC;;AACA,YAAI1L,GAAG,CAAC3I,CAAD,CAAH,GAAS,GAAb,EAAkB;AACd,cAAM4U,gBAAgB,GAAG7V,KAAK,CAAC8V,IAAN,CAAWP,YAAX,CAAzB;;AACA,cAAIxU,MAAM,CAACE,CAAD,CAAN,GAAY6O,gBAAgB,GAAG+F,gBAAnC,EAAqD;AACjD9U,kBAAM,CAACE,CAAD,CAAN,GAAY6O,gBAAgB,GAAG+F,gBAA/B;AACH;AACJ,SALD,MAMK;AACD,cAAME,aAAa,GAAG/V,KAAK,CAAC8V,IAAN,CAAWnD,SAAS,CAACpS,GAAV,CAAcP,KAAK,CAAC8V,IAApB,CAAX,CAAtB;;AACA,cAAI/U,MAAM,CAACE,CAAD,CAAN,GAAY6O,gBAAgB,GAAGiG,aAAnC,EAAkD;AAC9ChV,kBAAM,CAACE,CAAD,CAAN,GAAY6O,gBAAgB,GAAGiG,aAA/B;AACH;AACJ;AACJ;;AACD,aAAO;AAAE3C,cAAM,EAAErS,MAAV;AAAkBsS,YAAI,EAAEzJ;AAAxB,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,oCAA2B6H,UAA3B,EAAuCC,YAAvC,EAAqD0B,MAArD,EAA6DC,IAA7D,EAAmE;AAC/D,UAAMzS,QAAQ,GAAG6Q,UAAU,CAACzP,MAA5B;AACA,UAAMO,UAAU,GAAGkP,UAAU,CAAC,CAAD,CAAV,CAAczP,MAAjC;AACA,UAAM2C,IAAI,GAAG3E,KAAK,CAACgB,KAAN,CAAYJ,QAAQ,GAAG2B,UAAvB,CAAb;AACA,UAAMqC,IAAI,GAAG5E,KAAK,CAACgB,KAAN,CAAYJ,QAAQ,GAAG2B,UAAvB,CAAb;AACA,UAAM+D,IAAI,GAAGtG,KAAK,CAACgB,KAAN,CAAYJ,QAAQ,GAAG2B,UAAvB,CAAb;;AACA,WAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAApB,EAA8BK,CAAC,EAA/B,EAAmC;AAC/B,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,UAApB,EAAgCpB,CAAC,EAAjC,EAAqC;AACjC,cAAI2S,GAAG,GAAG,CAAV;;AACA,cAAIrC,UAAU,CAACxQ,CAAD,CAAV,CAAcE,CAAd,MAAqB,CAAC,CAA1B,EAA6B;AACzB,qBADyB,CACf;AACb;;AACD,cAAIsQ,UAAU,CAACxQ,CAAD,CAAV,CAAcE,CAAd,MAAqBF,CAAzB,EAA4B;AACxB6S,eAAG,GAAG,GAAN;AACH,WAFD,MAGK,IAAIpC,YAAY,CAACzQ,CAAD,CAAZ,CAAgBE,CAAhB,IAAqBkS,IAAI,CAACpS,CAAD,CAAzB,IAAgC,GAApC,EAAyC;AAC1C6S,eAAG,GAAG,GAAN;AACH,WAFI,MAGA;AACDA,eAAG,GAAGnS,IAAI,CAACgU,GAAL,CAAS,EAAE,CAACjE,YAAY,CAACzQ,CAAD,CAAZ,CAAgBE,CAAhB,IAAqBkS,IAAI,CAACpS,CAAD,CAA1B,IAAiCmS,MAAM,CAACnS,CAAD,CAAzC,CAAT,CAAN;AACH;;AACD0D,cAAI,CAAC1D,CAAC,GAAGsB,UAAJ,GAAiBpB,CAAlB,CAAJ,GAA2BF,CAA3B;AACA2D,cAAI,CAAC3D,CAAC,GAAGsB,UAAJ,GAAiBpB,CAAlB,CAAJ,GAA2BsQ,UAAU,CAACxQ,CAAD,CAAV,CAAcE,CAAd,CAA3B;AACAmF,cAAI,CAACrF,CAAC,GAAGsB,UAAJ,GAAiBpB,CAAlB,CAAJ,GAA2B2S,GAA3B;AACH;AACJ;;AACD,aAAO;AAAEnP,YAAI,EAAJA,IAAF;AAAQC,YAAI,EAAJA,IAAR;AAAc0B,YAAI,EAAJA;AAAd,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,0CAAiC6K,gBAAjC,EAAmD;AAAA;;AAC/C,UAAMhB,OAAO,GAAG,KAAKwB,UAAL,EAAhB;AAD+C,UAEvCzB,WAFuC,GAEvB,IAFuB,CAEvCA,WAFuC;AAG/C,UAAM8F,WAAW,GAAG,KAAKpL,KAAL,CAAW1D,SAAX,EAApB;AACA,UAAI0M,QAAQ,GAAG,CAAf;;AACA,WAAK,IAAI3S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+U,WAAW,CAAChU,MAAhC,EAAwCf,CAAC,EAAzC,EAA6C;AACzC,YAAMzB,KAAK,GAAGwW,WAAW,CAAC/U,CAAD,CAAzB;;AACA,YAAI2S,QAAQ,GAAGoC,WAAW,CAAC/U,CAAD,CAA1B,EAA+B;AAC3B2S,kBAAQ,GAAGpU,KAAX;AACH;AACJ;;AACD,UAAMoL,KAAK,GAAG,KAAKA,KAAL,CAAWrK,GAAX,CAAe,UAAAf,KAAK,EAAI;AAClC,YAAIA,KAAK,GAAGoU,QAAQ,GAAGzD,OAAvB,EAAgC;AAC5B,iBAAO,CAAP;AACH,SAFD,MAGK;AACD,iBAAO3Q,KAAP;AACH;AACJ,OAPa,CAAd,CAX+C,CAmB/C;AACA;AACA;;AACA,UAAI2R,gBAAJ,EAAsB;AAClB,aAAKN,SAAL,GAAiBM,gBAAjB;AACH,OAFD,MAGK;AACD,aAAKN,SAAL,GAAiB7Q,KAAK,CAACgB,KAAN,CAAY4J,KAAK,CAAC3F,KAAlB,EAAyB1E,GAAzB,CAA6B,YAAM;AAChD,iBAAOP,KAAK,CAACgB,KAAN,CAAYkP,WAAZ,EAAyB3P,GAAzB,CAA6B,YAAM;AACtC,mBAAOP,KAAK,CAAC6C,OAAN,CAAc,MAAI,CAAC/B,MAAnB,IAA6B,EAA7B,GAAkC,CAAC,EAA1C,CADsC,CACQ;AACjD,WAFM,CAAP;AAGH,SAJgB,CAAjB;AAKH,OA/B8C,CAgC/C;;;AACA,UAAMgB,OAAO,GAAG,EAAhB;AACA,UAAMsQ,IAAI,GAAG,EAAb;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMvM,YAAY,GAAG8E,KAAK,CAACqL,MAAN,EAArB;;AACA,WAAK,IAAIhV,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG6E,YAAY,CAAC9D,MAAjC,EAAyCf,EAAC,EAA1C,EAA8C;AAC1C,YAAMiV,KAAK,GAAGpQ,YAAY,CAAC7E,EAAD,CAA1B;;AACA,YAAIiV,KAAK,CAAC1W,KAAV,EAAiB;AACbsC,iBAAO,CAACpB,IAAR,CAAawV,KAAK,CAAC1W,KAAnB;AACA6S,cAAI,CAAC3R,IAAL,CAAUwV,KAAK,CAAC3U,GAAhB;AACA6Q,cAAI,CAAC1R,IAAL,CAAUwV,KAAK,CAAC9Q,GAAhB;AACH;AACJ;;AACD,UAAMkN,eAAe,GAAG,KAAKyB,mBAAL,CAAyBjS,OAAzB,EAAkCqO,OAAlC,CAAxB;AACA,aAAO;AAAEiC,YAAI,EAAJA,IAAF;AAAQC,YAAI,EAAJA,IAAR;AAAcC,uBAAe,EAAfA;AAAd,OAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,6BAAoBxQ,OAApB,EAA6BqO,OAA7B,EAAsC;AAClC,UAAMpP,MAAM,GAAGf,KAAK,CAACQ,MAAN,CAAasB,OAAO,CAACE,MAArB,EAA6B,CAAC,GAA9B,CAAf;AACA,UAAMkG,GAAG,GAAGlI,KAAK,CAACkI,GAAN,CAAUpG,OAAV,CAAZ;AACA,UAAMlB,QAAQ,GAAGkB,OAAO,CAACvB,GAAR,CAAY,UAAA4V,CAAC;AAAA,eAAKA,CAAC,GAAGjO,GAAL,GAAYiI,OAAhB;AAAA,OAAb,CAAjB;AACAvP,cAAQ,CAACmF,OAAT,CAAiB,UAAC+D,CAAD,EAAI7I,CAAJ,EAAU;AACvB,YAAI6I,CAAC,GAAG,CAAR,EACI/I,MAAM,CAACE,CAAD,CAAN,GAAYkP,OAAO,GAAGvP,QAAQ,CAACK,CAAD,CAA9B;AACP,OAHD;AAIA,aAAOF,MAAP;AACH;AACD;AACJ;AACA;;;;WACI,2CAAkCqV,KAAlC,EAAyC;AACrC/W,YAAM,CAACgX,MAAP,CAAc,KAAKvF,iBAAnB,EAAsCsF,KAAtC;AACH;AACD;AACJ;AACA;AACA;;;;WACI,sCAA6B;AACzB;AADyB,UAEjB/F,iBAFiB,GAEuC,IAFvC,CAEjBA,iBAFiB;AAAA,UAEEL,YAFF,GAEuC,IAFvC,CAEEA,YAFF;AAAA,UAEgBI,kBAFhB,GAEuC,IAFvC,CAEgBA,kBAFhB;AAAA,kCAGkC,KAAKU,iBAHvC;AAAA,UAGjBwB,eAHiB,yBAGjBA,eAHiB;AAAA,UAGA2B,aAHA,yBAGAA,aAHA;AAAA,UAGeC,aAHf,yBAGeA,aAHf;AAIzB,UAAMxH,GAAG,GAAGuH,aAAa,CAAC,CAAD,CAAb,CAAiBjS,MAA7B;AACA,UAAMsU,SAAS,GAAGrC,aAAa,CAACjS,MAAd,KAAyBkS,aAAa,CAAClS,MAAzD;AACA,UAAMuU,uBAAuB,GAAGjE,eAAe,CAAC/R,GAAhB,CAAoB,UAAAuO,CAAC;AAAA,eAAIA,CAAC,GAAGsB,kBAAR;AAAA,OAArB,CAAhC;;AACA,UAAMoG,yBAAyB,sBAAOD,uBAAP,CAA/B;;AACA,UAAME,iBAAiB,sBAAOnE,eAAP,CAAvB;;AACA,WAAK0B,iCAAL,CAAuC;AACnCyC,yBAAiB,EAAjBA,iBADmC;AAEnCD,iCAAyB,EAAzBA,yBAFmC;AAGnCD,+BAAuB,EAAvBA,uBAHmC;AAInCD,iBAAS,EAATA,SAJmC;AAKnCI,oBAAY,EAAE1G,YALqB;AAMnC2G,aAAK,EAAE3G,YAN4B;AAOnC4G,aAAK,EAAEvG,iBAP4B;AAQnC3D,WAAG,EAAHA;AARmC,OAAvC;AAUH;AACD;AACJ;AACA;;;;WACI,kCAAyB;AACrB;AACA,UAAMuH,aAAa,GAAG,KAAKpD,SAA3B;AACA,UAAMqD,aAAa,GAAG,KAAKrD,SAA3B,CAHqB,CAIrB;;AAJqB,mCAKmB,KAAKC,iBALxB;AAAA,UAKbsB,IALa,0BAKbA,IALa;AAAA,UAKPC,IALO,0BAKPA,IALO;AAAA,UAKDC,eALC,0BAKDA,eALC;AAMrB,UAAMnC,OAAO,GAAG,KAAKwB,UAAL,EAAhB;AACA,UAAMrP,SAAS,GAAG,KAAKsI,KAAL,CAAW1F,KAA7B;;AAPqB,0BAQJoK,YAAY,CAAC,KAAKiB,MAAN,EAAc,KAAKzM,OAAnB,CARR;AAAA,UAQbmC,CARa,iBAQbA,CARa;AAAA,UAQVC,CARU,iBAQVA,CARU;;AASrB,WAAK8N,iCAAL,CAAuC;AACnCC,qBAAa,EAAbA,aADmC;AAEnCC,qBAAa,EAAbA,aAFmC;AAGnC9B,YAAI,EAAJA,IAHmC;AAInCC,YAAI,EAAJA,IAJmC;AAKnCC,uBAAe,EAAfA,eALmC;AAMnCrM,SAAC,EAADA,CANmC;AAOnCC,SAAC,EAADA,CAPmC;AAQnCiK,eAAO,EAAPA,OARmC;AASnC7N,iBAAS,EAATA;AATmC,OAAvC;AAWH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBwH,CAAnB,EAAsB;AAAA,UACVgH,iBADU,GACY,IADZ,CACVA,iBADU;AAAA,UAEVsB,IAFU,GAEkMtB,iBAFlM,CAEVsB,IAFU;AAAA,UAEJC,IAFI,GAEkMvB,iBAFlM,CAEJuB,IAFI;AAAA,UAEE4B,aAFF,GAEkMnD,iBAFlM,CAEEmD,aAFF;AAAA,UAEiBC,aAFjB,GAEkMpD,iBAFlM,CAEiBoD,aAFjB;AAAA,UAEgC5B,eAFhC,GAEkMxB,iBAFlM,CAEgCwB,eAFhC;AAAA,UAEiDmE,iBAFjD,GAEkM3F,iBAFlM,CAEiD2F,iBAFjD;AAAA,UAEoED,yBAFpE,GAEkM1F,iBAFlM,CAEoE0F,yBAFpE;AAAA,UAE+FD,uBAF/F,GAEkMzF,iBAFlM,CAE+FyF,uBAF/F;AAAA,UAEwHD,SAFxH,GAEkMxF,iBAFlM,CAEwHwF,SAFxH;AAAA,UAEmII,YAFnI,GAEkM5F,iBAFlM,CAEmI4F,YAFnI;AAAA,UAEiJC,KAFjJ,GAEkM7F,iBAFlM,CAEiJ6F,KAFjJ;AAAA,UAEwJC,KAFxJ,GAEkM9F,iBAFlM,CAEwJ8F,KAFxJ;AAAA,UAE+J3Q,CAF/J,GAEkM6K,iBAFlM,CAE+J7K,CAF/J;AAAA,UAEkKC,CAFlK,GAEkM4K,iBAFlM,CAEkK5K,CAFlK;AAAA,UAEqKwG,GAFrK,GAEkMoE,iBAFlM,CAEqKpE,GAFrK;AAAA,UAE0KyD,OAF1K,GAEkMW,iBAFlM,CAE0KX,OAF1K;AAAA,UAEmL7N,SAFnL,GAEkMwO,iBAFlM,CAEmLxO,SAFnL;AAGlB,UAAMuU,SAAS,GAAG,GAAlB;;AACA,WAAK,IAAI5V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqR,eAAe,CAACtQ,MAApC,EAA4Cf,CAAC,EAA7C,EAAiD;AAC7C,YAAIwV,iBAAiB,CAACxV,CAAD,CAAjB,GAAuB6I,CAA3B,EAA8B;AAC1B;AACH;;AACD,YAAM3I,CAAC,GAAGiR,IAAI,CAACnR,CAAD,CAAd;AACA,YAAMK,CAAC,GAAG+Q,IAAI,CAACpR,CAAD,CAAd;AACA,YAAM6V,OAAO,GAAG7C,aAAa,CAAC9S,CAAD,CAA7B;AACA,YAAM4V,KAAK,GAAG7C,aAAa,CAAC5S,CAAD,CAA3B;AACA,YAAM0V,WAAW,GAAGC,KAAK,CAACH,OAAD,EAAUC,KAAV,CAAzB;AACA,YAAIG,SAAS,GAAG,CAAhB;;AACA,YAAIF,WAAW,GAAG,CAAlB,EAAqB;AACjBE,mBAAS,GAAG,CAAC,GAAD,GAAOjR,CAAP,GAAWC,CAAX,GAAevE,IAAI,CAACwV,GAAL,CAASH,WAAT,EAAsB9Q,CAAC,GAAG,GAA1B,CAA3B;AACAgR,mBAAS,IAAIjR,CAAC,GAAGtE,IAAI,CAACwV,GAAL,CAASH,WAAT,EAAsB9Q,CAAtB,CAAJ,GAA+B,GAA5C;AACH;;AACD,aAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8J,GAApB,EAAyB9J,CAAC,EAA1B,EAA8B;AAC1B,cAAMwU,KAAK,GAAGC,IAAI,CAACH,SAAS,IAAIJ,OAAO,CAAClU,CAAD,CAAP,GAAamU,KAAK,CAACnU,CAAD,CAAtB,CAAV,EAAsCiU,SAAtC,CAAlB;AACAC,iBAAO,CAAClU,CAAD,CAAP,IAAcwU,KAAK,GAAGT,KAAtB;;AACA,cAAIL,SAAJ,EAAe;AACXS,iBAAK,CAACnU,CAAD,CAAL,IAAY,CAACwU,KAAD,GAAST,KAArB;AACH;AACJ;;AACDF,yBAAiB,CAACxV,CAAD,CAAjB,IAAwBqR,eAAe,CAACrR,CAAD,CAAvC;AACA,YAAMqW,WAAW,GAAG3V,IAAI,CAACC,KAAL,CAAW,CAACkI,CAAC,GAAG0M,yBAAyB,CAACvV,CAAD,CAA9B,IAAqCsV,uBAAuB,CAACtV,CAAD,CAAvE,CAApB;;AACA,aAAK,IAAI+I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsN,WAApB,EAAiCtN,CAAC,EAAlC,EAAsC;AAClC,cAAM1I,EAAC,GAAGtB,KAAK,CAACoB,UAAN,CAAiBkB,SAAjB,EAA4B,KAAKxB,MAAjC,CAAV;;AACA,cAAMiW,MAAK,GAAG7C,aAAa,CAAC5S,EAAD,CAA3B;;AACA,cAAM0V,YAAW,GAAGC,KAAK,CAACH,OAAD,EAAUC,MAAV,CAAzB;;AACA,cAAIG,UAAS,GAAG,GAAhB;;AACA,cAAIF,YAAW,GAAG,GAAlB,EAAuB;AACnBE,sBAAS,GAAG,MAAMN,KAAN,GAAc1Q,CAA1B;AACAgR,sBAAS,IACL,CAAC,QAAQF,YAAT,KAAyB/Q,CAAC,GAAGtE,IAAI,CAACwV,GAAL,CAASH,YAAT,EAAsB9Q,CAAtB,CAAJ,GAA+B,CAAxD,CADJ;AAEH,WAJD,MAKK,IAAI/E,CAAC,KAAKG,EAAV,EAAa;AACd;AACH;;AACD,eAAK,IAAIsB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG8J,GAApB,EAAyB9J,EAAC,EAA1B,EAA8B;AAC1B,gBAAIwU,MAAK,GAAG,GAAZ;;AACA,gBAAIF,UAAS,GAAG,GAAhB,EAAqB;AACjBE,oBAAK,GAAGC,IAAI,CAACH,UAAS,IAAIJ,OAAO,CAAClU,EAAD,CAAP,GAAamU,MAAK,CAACnU,EAAD,CAAtB,CAAV,EAAsCiU,SAAtC,CAAZ;AACH;;AACDC,mBAAO,CAAClU,EAAD,CAAP,IAAcwU,MAAK,GAAGT,KAAtB;AACH;AACJ;;AACDH,iCAAyB,CAACvV,CAAD,CAAzB,IAAgCqW,WAAW,GAAGf,uBAAuB,CAACtV,CAAD,CAArE;AACH;;AACD6P,uBAAiB,CAAC6F,KAAlB,GAA0BD,YAAY,IAAI,MAAM5M,CAAC,GAAGqG,OAAd,CAAtC;AACAW,uBAAiB,CAACqD,YAAlB,IAAkC,CAAlC;AACA,aAAOF,aAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,+BAAgD;AAAA;;AAAA,UAA5BsD,aAA4B,uEAAZ;AAAA,eAAM,IAAN;AAAA,OAAY;AAC5C,aAAO,IAAI9I,OAAJ,CAAY,UAACD,OAAD,EAAUE,MAAV,EAAqB;AACpC,YAAME,IAAI,GAAG,SAAPA,IAAO;AAAA,iBAAMV,SAAS,CAAC,MAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,uCAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAET,KAAK4C,iBAFI,EAEnCX,OAFmC,0BAEnCA,OAFmC,EAE1BgE,YAF0B,0BAE1BA,YAF0B;AAG3C,yBAAKtD,SAAL,GAAiB,KAAK0D,kBAAL,CAAwBJ,YAAxB,CAAjB;AACMqD,kCAJqC,GAIpB,KAAK1G,iBAAL,CAAuBqD,YAJH;AAKrCsD,8BALqC,GAKxBF,aAAa,CAACC,cAAD,CAAb,KAAkC,KALV;AAMrCE,8BANqC,GAMxBF,cAAc,KAAKrH,OANK;;AAAA,0BAOvC,CAACsH,UAAD,IAAe,CAACC,UAPuB;AAAA;AAAA;AAAA;;AAQvCC,8BAAU,CAAC;AAAA,6BAAM/I,IAAI,EAAV;AAAA,qBAAD,EAAe,CAAf,CAAV;AARuC;AAAA;;AAAA;AAAA,sDAWhCJ,OAAO,CAACkJ,UAAD,CAXyB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAe3ChJ,0BAAM,cAAN;;AAf2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAvB,EAAf;AAAA,SAAb;;AAkBAiJ,kBAAU,CAAC;AAAA,iBAAM/I,IAAI,EAAV;AAAA,SAAD,EAAe,CAAf,CAAV;AACH,OApBM,CAAP;AAqBH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,0BAA2C;AAAA,UAA5B2I,aAA4B,uEAAZ;AAAA,eAAM,IAAN;AAAA,OAAY;AACvC,UAAIG,UAAU,GAAG,KAAjB;AACA,UAAI7G,SAAS,GAAG,EAAhB;;AACA,aAAO,CAAC6G,UAAR,EAAoB;AAAA,qCACkB,KAAK5G,iBADvB;AAAA,YACRX,OADQ,0BACRA,OADQ;AAAA,YACCgE,YADD,0BACCA,YADD;AAEhBtD,iBAAS,GAAG,KAAK0D,kBAAL,CAAwBJ,YAAxB,CAAZ;AACA,YAAMqD,cAAc,GAAG,KAAK1G,iBAAL,CAAuBqD,YAA9C;AACA,YAAMsD,UAAU,GAAGF,aAAa,CAACC,cAAD,CAAb,KAAkC,KAArD;AACAE,kBAAU,GAAGF,cAAc,KAAKrH,OAAnB,IAA8BsH,UAA3C;AACH;;AACD,aAAO5G,SAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,sBAAa;AACT,UAAMjG,KAAK,GAAG,KAAKA,KAAnB;;AACA,UAAI,KAAKuF,OAAL,GAAe,CAAnB,EAAsB;AAClB,eAAO,KAAKA,OAAZ;AACH;;AACD,UAAMnO,MAAM,GAAG4I,KAAK,CAAC3F,KAArB;;AACA,UAAIjD,MAAM,IAAI,IAAd,EAAoB;AAChB,eAAO,GAAP;AACH,OAFD,MAGK,IAAIA,MAAM,IAAI,IAAd,EAAoB;AACrB,eAAO,GAAP;AACH,OAFI,MAGA,IAAIA,MAAM,IAAI,IAAd,EAAoB;AACrB,eAAO,GAAP;AACH,OAFI,MAGA;AACD,eAAO,GAAP;AACH;AACJ;;;;;;AAELzC,OAAO,CAACmQ,IAAR,GAAeA,IAAf,C,CACA;;AACA,SAASD,OAAT,CAAiB7I,CAAjB,EAAoBC,CAApB,EAAuB;AACnB,MAAI+Q,YAAY,GAAG3X,mBAAO,CAAC,kDAAD,CAA1B;;AACA,SAAO2X,YAAY,CAACnW,KAAb,CAAmBmF,CAAnB,EAAsBC,CAAtB,CAAP;AACH;;AACDtH,OAAO,CAACkQ,OAAR,GAAkBA,OAAlB;;AACA,SAASD,SAAT,CAAmB5I,CAAnB,EAAsBC,CAAtB,EAAyB;AACrB,MAAI9F,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2F,CAAC,CAAC5E,MAAtB,EAA8Bf,CAAC,EAA/B,EAAmC;AAC/BF,UAAM,aAAK6F,CAAC,CAAC3F,CAAD,CAAD,GAAO4F,CAAC,CAAC5F,CAAD,CAAb,EAAqB,CAArB,CAAN;AACH;;AACD,SAAOU,IAAI,CAACyG,IAAL,CAAUrH,MAAV,CAAP;AACH;;AACDxB,OAAO,CAACiQ,SAAR,GAAoBA,SAApB;;AACA,SAASD,MAAT,CAAgB3I,CAAhB,EAAmBC,CAAnB,EAAsB;AAClB,MAAI9F,MAAM,GAAG,GAAb;AACA,MAAI8W,KAAK,GAAG,GAAZ;AACA,MAAIC,KAAK,GAAG,GAAZ;;AACA,OAAK,IAAI7W,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2F,CAAC,CAAC5E,MAAtB,EAA8Bf,CAAC,EAA/B,EAAmC;AAC/BF,UAAM,IAAI6F,CAAC,CAAC3F,CAAD,CAAD,GAAO4F,CAAC,CAAC5F,CAAD,CAAlB;AACA4W,SAAK,aAAIjR,CAAC,CAAC3F,CAAD,CAAL,EAAY,CAAZ,CAAL;AACA6W,SAAK,aAAIjR,CAAC,CAAC5F,CAAD,CAAL,EAAY,CAAZ,CAAL;AACH;;AACD,MAAI4W,KAAK,KAAK,CAAV,IAAeC,KAAK,KAAK,CAA7B,EAAgC;AAC5B,WAAO,CAAP;AACH,GAFD,MAGK,IAAID,KAAK,KAAK,CAAV,IAAeC,KAAK,KAAK,CAA7B,EAAgC;AACjC,WAAO,GAAP;AACH,GAFI,MAGA;AACD,WAAO,MAAM/W,MAAM,GAAGY,IAAI,CAACyG,IAAL,CAAUyP,KAAK,GAAGC,KAAlB,CAAtB;AACH;AACJ;;AACDvY,OAAO,CAACgQ,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;AACA;;IACMwB,iB,GACF,6BAAc;AAAA;;AACV,OAAKoD,YAAL,GAAoB,CAApB,CADU,CAEV;;AACA,OAAKF,aAAL,GAAqB,EAArB;AACA,OAAKC,aAAL,GAAqB,EAArB;AACA,OAAK9B,IAAL,GAAY,EAAZ;AACA,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKC,eAAL,GAAuB,EAAvB;AACA,OAAKmE,iBAAL,GAAyB,EAAzB;AACA,OAAKD,yBAAL,GAAiC,EAAjC;AACA,OAAKD,uBAAL,GAA+B,EAA/B;AACA,OAAKD,SAAL,GAAiB,IAAjB;AACA,OAAKI,YAAL,GAAoB,GAApB;AACA,OAAKC,KAAL,GAAa,GAAb;AACA,OAAKC,KAAL,GAAa,GAAb;AACA,OAAK3Q,CAAL,GAAS,kBAAT;AACA,OAAKC,CAAL,GAAS,kBAAT;AACA,OAAKwG,GAAL,GAAW,CAAX;AACA,OAAKyD,OAAL,GAAe,GAAf;AACA,OAAK7N,SAAL,GAAiB,CAAjB;AACH,C;AAEL;AACA;AACA;;;AACA,SAAS+U,IAAT,CAAczQ,CAAd,EAAiBiQ,SAAjB,EAA4B;AACxB,MAAIjQ,CAAC,GAAGiQ,SAAR,EACI,OAAOA,SAAP,CADJ,KAEK,IAAIjQ,CAAC,GAAG,CAACiQ,SAAT,EACD,OAAO,CAACA,SAAR,CADC,KAGD,OAAOjQ,CAAP;AACP;AACD;AACA;AACA;;;AACA,SAASqQ,KAAT,CAAerQ,CAAf,EAAkBC,CAAlB,EAAqB;AACjB,MAAI9F,MAAM,GAAG,GAAb;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2F,CAAC,CAAC5E,MAAtB,EAA8Bf,CAAC,EAA/B,EAAmC;AAC/BF,UAAM,IAAIY,IAAI,CAACwV,GAAL,CAASvQ,CAAC,CAAC3F,CAAD,CAAD,GAAO4F,CAAC,CAAC5F,CAAD,CAAjB,EAAsB,CAAtB,CAAV;AACH;;AACD,SAAOF,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASuO,YAAT,CAAsBiB,MAAtB,EAA8BzM,OAA9B,EAAuC;AACnC,MAAMiU,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA,QAAE9R,CAAF;AAAA,QAAKC,CAAL;;AAAA,WAAY,UAACU,CAAD,EAAO;AAC7B,aAAO,OAAO,MAAMX,CAAC,YAAGW,CAAH,EAAS,IAAIV,CAAb,CAAd,CAAP;AACH,KAFa;AAAA,GAAd;;AAGA,MAAM8R,EAAE,GAAGhY,KAAK,CACXiY,MADM,CACC,CADD,EACI1H,MAAM,GAAG,CADb,EACgB,GADhB,EAENhQ,GAFM,CAEF,UAAAuT,GAAG;AAAA,WAAKA,GAAG,GAAGhQ,OAAN,GAAgB,GAAhB,GAAsBgQ,GAA3B;AAAA,GAFD,CAAX;AAGA,MAAMoE,EAAE,GAAGlY,KAAK,CAACgB,KAAN,CAAYgX,EAAE,CAAChW,MAAf,EAAuBzB,GAAvB,CAA2B,UAACuT,GAAD,EAAMrS,KAAN,EAAgB;AAClD,QAAM0W,GAAG,GAAGH,EAAE,CAACvW,KAAD,CAAF,IAAaqC,OAAzB;AACA,WAAOqU,GAAG,GAAGxW,IAAI,CAACgU,GAAL,CAAS,EAAEqC,EAAE,CAACvW,KAAD,CAAF,GAAYqC,OAAd,IAAyByM,MAAlC,CAAH,GAA+CuD,GAAzD;AACH,GAHU,CAAX;AAIA,MAAMsE,aAAa,GAAG,CAAC,GAAD,EAAM,GAAN,CAAtB;AACA,MAAM5O,IAAI,GAAG;AAAE5C,KAAC,EAAEoR,EAAL;AAASnR,KAAC,EAAEqR;AAAZ,GAAb,CAZmC,CAanC;;AACA,MAAMG,OAAO,GAAG;AACZC,WAAO,EAAE,GADG;AAEZF,iBAAa,EAAbA,aAFY;AAGZG,sBAAkB,EAAE,KAHR;AAIZC,iBAAa,EAAE,GAJH;AAKZC,kBAAc,EAAE;AALJ,GAAhB;;AAdmC,8BAqBP7I,wBAAwB,CAAC8I,OAAzB,CAAiClP,IAAjC,EAAuCuO,KAAvC,EAA8CM,OAA9C,CArBO;AAAA,MAqB3BM,eArB2B,yBAqB3BA,eArB2B;;AAAA,wCAsBpBA,eAtBoB;AAAA,MAsB5B1S,CAtB4B;AAAA,MAsBzBC,CAtByB;;AAuBnC,SAAO;AAAED,KAAC,EAADA,CAAF;AAAKC,KAAC,EAADA;AAAL,GAAP;AACH;;AACD3G,OAAO,CAAC+P,YAAR,GAAuBA,YAAvB;AACA;AACA;AACA;AACA;;AACA,SAASD,gBAAT,CAA0BzE,KAA1B,EAAiCmK,MAAjC,EAA2E;AAAA,MAAlCC,WAAkC,uEAApB,GAAoB;AAAA,MAAfX,OAAe,uEAAL,GAAK;AACvE,SAAOzJ,KAAK,CAACrK,GAAN,CAAU,UAACf,KAAD,EAAQ+B,GAAR,EAAa6D,GAAb,EAAqB;AAClC,QAAI2P,MAAM,CAACxT,GAAD,CAAN,KAAgB,CAAC,CAAjB,IAAsBwT,MAAM,CAAC3P,GAAD,CAAN,KAAgB,CAAC,CAA3C,EAA8C;AAC1C,aAAO5F,KAAK,GAAGmC,IAAI,CAACgU,GAAL,CAAS,CAACX,WAAV,CAAf;AACH,KAFD,MAGK,IAAID,MAAM,CAACxT,GAAD,CAAN,KAAgBwT,MAAM,CAAC3P,GAAD,CAA1B,EAAiC;AAClC,aAAO5F,KAAK,GAAGmC,IAAI,CAACgU,GAAL,CAAS,CAACtB,OAAV,CAAf;AACH,KAFI,MAGA;AACD,aAAO7U,KAAP;AACH;AACJ,GAVM,CAAP;AAWH;;AACDD,OAAO,CAAC8P,gBAAR,GAA2BA,gBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,sBAAT,CAAgC0F,aAAhC,EAA+C;AAC3CA,eAAa,GAAGpO,MAAM,CAACzC,SAAP,CAAiB6Q,aAAjB,EAAgC;AAAM;AAAtC,GAAhB;AACA,MAAMrQ,SAAS,GAAGiC,MAAM,CAACjC,SAAP,CAAiBqQ,aAAjB,CAAlB;AACA,MAAMD,UAAU,GAAGnO,MAAM,CAACnC,gBAAP,CAAwBE,SAAxB,EAAmCqQ,aAAnC,CAAnB;AACAA,eAAa,GAAGpO,MAAM,CAACpC,GAAP,CAAWwQ,aAAX,EAA0BpO,MAAM,CAACrC,QAAP,CAAgBI,SAAhB,EAA2BoQ,UAA3B,CAA1B,CAAhB;AACA,SAAOnO,MAAM,CAACxC,cAAP,CAAsB4Q,aAAtB,CAAP;AACH;;AACDvV,OAAO,CAAC6P,sBAAR,GAAiCA,sBAAjC;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,aAAT,CAAuBtN,OAAvB,EAAgCC,OAAhC,EAAyC+O,SAAzC,EAAoD;AAChD,MAAM9P,MAAM,GAAGf,KAAK,CACfgB,KADU,CACJa,OAAO,CAACG,MADJ,EAEVzB,GAFU,CAEN,UAAAqY,CAAC;AAAA,WAAI5Y,KAAK,CAACgB,KAAN,CAAY6P,SAAS,CAAC,CAAD,CAAT,CAAa7O,MAAzB,CAAJ;AAAA,GAFK,CAAf;;AAGA,OAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,OAAO,CAACG,MAA5B,EAAoCf,CAAC,EAArC,EAAyC;AACrC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,OAAO,CAAC,CAAD,CAAP,CAAWG,MAA/B,EAAuCb,CAAC,EAAxC,EAA4C;AACxC,WAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiO,SAAS,CAAC,CAAD,CAAT,CAAa7O,MAAjC,EAAyCY,CAAC,EAA1C,EAA8C;AAC1C,YAAMqD,CAAC,GAAGpE,OAAO,CAACZ,CAAD,CAAP,CAAWE,CAAX,CAAV;AACAJ,cAAM,CAACE,CAAD,CAAN,CAAU2B,CAAV,KAAgBd,OAAO,CAACb,CAAD,CAAP,CAAWE,CAAX,IAAgB0P,SAAS,CAAC5K,CAAD,CAAT,CAAarD,CAAb,CAAhC;AACH;AACJ;AACJ;;AACD,SAAO7B,MAAP;AACH;;AACDxB,OAAO,CAAC4P,aAAR,GAAwBA,aAAxB,C;;;;;;;;;;;;ACn5Ba;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AACA9P,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACmU,SAAR,GAAoBnU,OAAO,CAACO,eAAR,GAA0BP,OAAO,CAACsZ,KAAR,GAAgBtZ,OAAO,CAAC2I,GAAR,GAAc3I,OAAO,CAACuW,IAAR,GAAevW,OAAO,CAAC4I,GAAR,GAAc5I,OAAO,CAAC0Y,MAAR,GAAiB1Y,OAAO,CAACuZ,IAAR,GAAevZ,OAAO,CAACyB,KAAR,GAAgBzB,OAAO,CAACiB,MAAR,GAAiBjB,OAAO,CAACuM,KAAR,GAAgBvM,OAAO,CAACe,KAAR,GAAgBf,OAAO,CAACyI,IAAR,GAAezI,OAAO,CAACsD,OAAR,GAAkBtD,OAAO,CAAC6B,UAAR,GAAqB,KAAK,CAArQ;AACA;AACA;AACA;;AACA,SAASA,UAAT,CAAoB0I,CAApB,EAAuBhJ,MAAvB,EAA+B;AAC3B,SAAOa,IAAI,CAACC,KAAL,CAAWd,MAAM,KAAKgJ,CAAtB,CAAP;AACH;;AACDvK,OAAO,CAAC6B,UAAR,GAAqBA,UAArB;AACA;AACA;AACA;;AACA,SAASyB,OAAT,CAAiB/B,MAAjB,EAAyB;AACrB,SAAOA,MAAM,EAAb;AACH;;AACDvB,OAAO,CAACsD,OAAR,GAAkBA,OAAlB;AACA;AACA;AACA;;AACA,SAASmF,IAAT,CAAc+Q,GAAd,EAAmB;AACf,MAAIhY,MAAM,GAAG,CAAb;;AADe,6CAEEgY,GAFF;AAAA;;AAAA;AAEf,wDAAsB;AAAA,UAAbC,IAAa;AAClBjY,YAAM,aAAIiY,IAAJ,EAAY,CAAZ,CAAN;AACH;AAJc;AAAA;AAAA;AAAA;AAAA;;AAKf,SAAOrX,IAAI,CAACyG,IAAL,CAAUrH,MAAV,CAAP;AACH;;AACDxB,OAAO,CAACyI,IAAR,GAAeA,IAAf;AACA;AACA;AACA;;AACA,SAAS1H,KAAT,CAAewJ,CAAf,EAAkB;AACd,MAAMrD,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIxF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6I,CAApB,EAAuB7I,CAAC,EAAxB,EAA4B;AACxBwF,UAAM,CAAC/F,IAAP,CAAYuQ,SAAZ;AACH;;AACD,SAAOxK,MAAP;AACH;;AACDlH,OAAO,CAACe,KAAR,GAAgBA,KAAhB;AACA;AACA;AACA;;AACA,SAASwL,KAAT,CAAehC,CAAf,EAAkB;AACd,SAAOxJ,KAAK,CAACwJ,CAAD,CAAL,CAASvJ,GAAT,CAAa,UAAC6G,CAAD,EAAInG,CAAJ;AAAA,WAAUA,CAAV;AAAA,GAAb,CAAP;AACH;;AACD1B,OAAO,CAACuM,KAAR,GAAgBA,KAAhB;AACA;AACA;AACA;;AACA,SAAStL,MAAT,CAAgBsJ,CAAhB,EAAmBmP,CAAnB,EAAsB;AAClB,SAAO3Y,KAAK,CAACwJ,CAAD,CAAL,CAASvJ,GAAT,CAAa;AAAA,WAAM0Y,CAAN;AAAA,GAAb,CAAP;AACH;;AACD1Z,OAAO,CAACiB,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;;AACA,SAASQ,KAAT,CAAe8I,CAAf,EAAkB;AACd,SAAOtJ,MAAM,CAACsJ,CAAD,EAAI,CAAJ,CAAb;AACH;;AACDvK,OAAO,CAACyB,KAAR,GAAgBA,KAAhB;AACA;AACA;AACA;;AACA,SAAS8X,IAAT,CAAchP,CAAd,EAAiB;AACb,SAAOtJ,MAAM,CAACsJ,CAAD,EAAI,CAAJ,CAAb;AACH;;AACDvK,OAAO,CAACuZ,IAAR,GAAeA,IAAf;AACA;AACA;AACA;;AACA,SAASb,MAAT,CAAgBhS,CAAhB,EAAmBC,CAAnB,EAAsBgT,GAAtB,EAA2B;AACvB,SAAO5Y,KAAK,CAAC4Y,GAAD,CAAL,CAAW3Y,GAAX,CAAe,UAAC6G,CAAD,EAAInG,CAAJ,EAAU;AAC5B,WAAOgF,CAAC,GAAGhF,CAAC,IAAI,CAACiF,CAAC,GAAGD,CAAL,KAAWiT,GAAG,GAAG,CAAjB,CAAJ,CAAZ;AACH,GAFM,CAAP;AAGH;;AACD3Z,OAAO,CAAC0Y,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;;AACA,SAAS9P,GAAT,CAAagR,KAAb,EAAoB;AAChB,SAAOA,KAAK,CAACtF,MAAN,CAAa,UAAC1L,GAAD,EAAM2L,GAAN;AAAA,WAAc3L,GAAG,GAAG2L,GAApB;AAAA,GAAb,CAAP;AACH;;AACDvU,OAAO,CAAC4I,GAAR,GAAcA,GAAd;AACA;AACA;AACA;;AACA,SAAS2N,IAAT,CAAcqD,KAAd,EAAqB;AACjB,SAAOhR,GAAG,CAACgR,KAAD,CAAH,GAAaA,KAAK,CAACnX,MAA1B;AACH;;AACDzC,OAAO,CAACuW,IAAR,GAAeA,IAAf;AACA;AACA;AACA;;AACA,SAAS5N,GAAT,CAAaiR,KAAb,EAAoB;AAChB,MAAIjR,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIjH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkY,KAAK,CAACnX,MAA1B,EAAkCf,CAAC,EAAnC,EAAuC;AACnCiH,OAAG,GAAGiR,KAAK,CAAClY,CAAD,CAAL,GAAWiH,GAAX,GAAiBiR,KAAK,CAAClY,CAAD,CAAtB,GAA4BiH,GAAlC;AACH;;AACD,SAAOA,GAAP;AACH;;AACD3I,OAAO,CAAC2I,GAAR,GAAcA,GAAd;AACA;AACA;AACA;;AACA,SAAS2Q,KAAT,CAAeM,KAAf,EAAsB;AAClB,MAAIjR,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIjH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkY,KAAK,CAACnX,MAA1B,EAAkCf,CAAC,EAAnC,EAAuC;AACnC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgY,KAAK,CAAClY,CAAD,CAAL,CAASe,MAA7B,EAAqCb,CAAC,EAAtC,EAA0C;AACtC+G,SAAG,GAAGiR,KAAK,CAAClY,CAAD,CAAL,CAASE,CAAT,IAAc+G,GAAd,GAAoBiR,KAAK,CAAClY,CAAD,CAAL,CAASE,CAAT,CAApB,GAAkC+G,GAAxC;AACH;AACJ;;AACD,SAAOA,GAAP;AACH;;AACD3I,OAAO,CAACsZ,KAAR,GAAgBA,KAAhB;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS/Y,eAAT,CAAyBc,QAAzB,EAAmCC,QAAnC,EAA6CC,MAA7C,EAAqD;AACjD,MAAMC,MAAM,GAAGC,KAAK,CAACJ,QAAD,CAApB;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAApB,EAA8BK,CAAC,EAA/B,EAAmC;AAC/B,QAAIC,YAAY,GAAG,IAAnB;;AACA,WAAOA,YAAP,EAAqB;AACjB,UAAMC,CAAC,GAAGC,UAAU,CAACP,QAAD,EAAWC,MAAX,CAApB;AACA,UAAIO,MAAM,GAAG,KAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,CAApB,EAAuBK,CAAC,EAAxB,EAA4B;AACxB,YAAIH,CAAC,KAAKJ,MAAM,CAACO,CAAD,CAAhB,EAAqB;AACjBD,gBAAM,GAAG,IAAT;AACA;AACH;AACJ;;AACD,UAAI,CAACA,MAAL,EAAa;AACTH,oBAAY,GAAG,KAAf;AACH;;AACDH,YAAM,CAACE,CAAD,CAAN,GAAYE,CAAZ;AACH;AACJ;;AACD,SAAOJ,MAAP;AACH;;AACDxB,OAAO,CAACO,eAAR,GAA0BA,eAA1B;AACA;AACA;AACA;;AACA,SAAS4T,SAAT,CAAmB9M,CAAnB,EAAsBX,CAAtB,EAAyBC,CAAzB,EAA4B;AACxB,MAAMvB,IAAI,GAAG,EAAb;AACA,MAAIyU,KAAK,GAAG,CAAZ;AACA,MAAI3X,KAAK,GAAG,CAAZ;;AACA,MAAImF,CAAC,CAAC5E,MAAF,KAAaiE,CAAC,GAAGC,CAArB,EAAwB;AACpB,UAAM,IAAIf,KAAJ,CAAU,2CAAV,CAAN;AACH;;AACD,OAAK,IAAIlE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgF,CAApB,EAAuBhF,CAAC,EAAxB,EAA4B;AACxB,QAAMmE,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIjE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+E,CAApB,EAAuB/E,CAAC,EAAxB,EAA4B;AACxBiE,SAAG,CAAC1E,IAAJ,CAASkG,CAAC,CAACnF,KAAD,CAAV;AACAA,WAAK,IAAI,CAAT;AACH;;AACDkD,QAAI,CAACjE,IAAL,CAAU0E,GAAV;AACAgU,SAAK,IAAI,CAAT;AACH;;AACD,SAAOzU,IAAP;AACH;;AACDpF,OAAO,CAACmU,SAAR,GAAoBA,SAApB,C;;;;;;;;;;;;ACpLa;;;;;;;;;;;;;;AACbrU,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;;AACAS,mBAAO,CAAC,kFAAD,CAAP;;AACA,IAAMoZ,MAAM,GAAGpZ,mBAAO,CAAC,sEAAD,CAAtB,C,CACA;;;AACA,IAAIqZ,MAAM,GAAGA,MAAM,IAAI;AAAEC,UAAQ,EAAE;AAAZ,CAAvB;;AACA,CAAC,UAAUC,MAAV,EAAkB;AACf,eADe,CAEf;;AACA,MAAIC,MAAM,GAAG,SAATA,MAAS,CAAUC,SAAV,EAAqBC,OAArB,EAA8B;AACvC,QAAI,CAACD,SAAL,EAAgB;AACZ,YAAMC,OAAO,IAAI,kBAAjB;AACH;AACJ,GAJD,CAHe,CAQf;;;AACA,MAAIC,MAAM,GAAG,SAATA,MAAS,CAAUC,GAAV,EAAeC,KAAf,EAAsBC,UAAtB,EAAkC;AAC3C,QAAIF,GAAG,CAACG,cAAJ,CAAmBF,KAAnB,CAAJ,EAA+B;AAC3B,aAAOD,GAAG,CAACC,KAAD,CAAV;AACH,KAFD,MAGK;AACD,aAAOC,UAAP;AACH;AACJ,GAPD,CATe,CAiBf;;;AACA,MAAIE,QAAQ,GAAG,KAAf;AACA,MAAIC,KAAK,GAAG,GAAZ;;AACA,MAAIC,WAAW,GAAG,SAAdA,WAAc,GAAY;AAC1B,QAAIF,QAAJ,EAAc;AACVA,cAAQ,GAAG,KAAX;AACA,aAAOC,KAAP;AACH;;AACD,QAAIE,CAAC,GAAG,IAAIzY,IAAI,CAACb,MAAL,EAAJ,GAAoB,CAA5B;AACA,QAAImY,CAAC,GAAG,IAAItX,IAAI,CAACb,MAAL,EAAJ,GAAoB,CAA5B;AACA,QAAIuZ,CAAC,GAAGD,CAAC,GAAGA,CAAJ,GAAQnB,CAAC,GAAGA,CAApB;AACA,QAAIoB,CAAC,IAAI,CAAL,IAAUA,CAAC,GAAG,CAAlB,EACI,OAAOF,WAAW,EAAlB;AACJ,QAAIpQ,CAAC,GAAGpI,IAAI,CAACyG,IAAL,CAAU,CAAC,CAAD,GAAKzG,IAAI,CAAC8S,GAAL,CAAS4F,CAAT,CAAL,GAAmBA,CAA7B,CAAR;AACAH,SAAK,GAAGjB,CAAC,GAAGlP,CAAZ,CAX0B,CAWX;;AACfkQ,YAAQ,GAAG,IAAX;AACA,WAAOG,CAAC,GAAGrQ,CAAX;AACH,GAdD,CApBe,CAmCf;;;AACA,MAAIuQ,KAAK,GAAG,SAARA,KAAQ,CAAUC,EAAV,EAAcC,GAAd,EAAmB;AAAE,WAAOD,EAAE,GAAGJ,WAAW,KAAKK,GAA5B;AAAkC,GAAnE,CApCe,CAqCf;;;AACA,MAAIxZ,KAAK,GAAG,SAARA,KAAQ,CAAU8I,CAAV,EAAa;AACrB,QAAI,OAAQA,CAAR,KAAe,WAAf,IAA8B2Q,KAAK,CAAC3Q,CAAD,CAAvC,EAA4C;AACxC,aAAO,EAAP;AACH;;AACD,QAAI,OAAO4Q,WAAP,KAAuB,WAA3B,EAAwC;AACpC;AACA,UAAIC,GAAG,GAAG,IAAIxU,KAAJ,CAAU2D,CAAV,CAAV;;AACA,WAAK,IAAI7I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6I,CAApB,EAAuB7I,CAAC,EAAxB,EAA4B;AACxB0Z,WAAG,CAAC1Z,CAAD,CAAH,GAAS,CAAT;AACH;;AACD,aAAO0Z,GAAP;AACH,KAPD,MAQK;AACD,aAAO,IAAIC,YAAJ,CAAiB9Q,CAAjB,CAAP,CADC,CAC2B;AAC/B;AACJ,GAfD,CAtCe,CAsDf;AACA;;;AACA,MAAI+Q,OAAO,GAAG,SAAVA,OAAU,CAAU/Q,CAAV,EAAalH,CAAb,EAAgBkY,CAAhB,EAAmB;AAC7B,QAAIC,IAAI,GAAG,OAAOD,CAAP,KAAa,WAAxB;AACA,QAAIlU,CAAC,GAAG,EAAR;;AACA,SAAK,IAAI3F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6I,CAApB,EAAuB7I,CAAC,EAAxB,EAA4B;AACxB,UAAI+Z,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAI7Z,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,CAApB,EAAuBzB,CAAC,EAAxB,EAA4B;AACxB,YAAI4Z,IAAJ,EAAU;AACNC,eAAK,CAACta,IAAN,CAAWoa,CAAX;AACH,SAFD,MAGK;AACDE,eAAK,CAACta,IAAN,CAAW4Z,KAAK,CAAC,GAAD,EAAM,IAAN,CAAhB;AACH;AACJ;;AACD1T,OAAC,CAAClG,IAAF,CAAOsa,KAAP;AACH;;AACD,WAAOpU,CAAP;AACH,GAhBD,CAxDe,CAyEf;;;AACA,MAAIqU,EAAE,GAAG,SAALA,EAAK,CAAUC,EAAV,EAAcC,EAAd,EAAkB;AACvB,QAAIC,CAAC,GAAGF,EAAE,CAAClZ,MAAX;AACA,QAAIY,CAAC,GAAG,CAAR;;AACA,SAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGma,CAApB,EAAuBna,CAAC,EAAxB,EAA4B;AACxB,UAAIoa,GAAG,GAAGH,EAAE,CAACja,CAAD,CAAZ;AACA,UAAIqa,GAAG,GAAGH,EAAE,CAACla,CAAD,CAAZ;AACA2B,OAAC,IAAI,CAACyY,GAAG,GAAGC,GAAP,KAAeD,GAAG,GAAGC,GAArB,CAAL;AACH;;AACD,WAAO1Y,CAAP;AACH,GATD,CA1Ee,CAoFf;;;AACA,MAAI2Y,IAAI,GAAG,SAAPA,IAAO,CAAUrK,CAAV,EAAa5H,UAAb,EAAyB;AAChC,QAAIkS,CAAC,GAAGtK,CAAC,CAAClP,MAAV;AACA,QAAI6B,IAAI,GAAG7C,KAAK,CAACwa,CAAC,GAAGA,CAAL,CAAhB,CAFgC,CAEP;;AACzB,SAAK,IAAIva,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,CAApB,EAAuBva,CAAC,EAAxB,EAA4B;AACxB,WAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGqa,CAAxB,EAA2Bra,CAAC,EAA5B,EAAgC;AAC5B,YAAIyB,CAAC,GAAG0G,UAAU,CAAC4H,CAAC,CAACjQ,CAAD,CAAF,EAAOiQ,CAAC,CAAC/P,CAAD,CAAR,CAAlB;AACA0C,YAAI,CAAC5C,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAJ,GAAkByB,CAAlB;AACAiB,YAAI,CAAC1C,CAAC,GAAGqa,CAAJ,GAAQva,CAAT,CAAJ,GAAkB2B,CAAlB;AACH;AACJ;;AACD,WAAOiB,IAAP;AACH,GAXD,CArFe,CAiGf;;;AACA,MAAI4X,GAAG,GAAG,SAANA,GAAM,CAAUL,CAAV,EAAaM,UAAb,EAAyBC,GAAzB,EAA8B;AACpC,QAAIC,EAAE,GAAGja,IAAI,CAACyG,IAAL,CAAUgT,CAAC,CAACpZ,MAAZ,CAAT,CADoC,CACN;;AAC9B,QAAIwZ,CAAC,GAAG7Z,IAAI,CAACC,KAAL,CAAWga,EAAX,CAAR;AACAnC,UAAM,CAAC+B,CAAC,KAAKI,EAAP,EAAW,0CAAX,CAAN;AACA,QAAIC,OAAO,GAAGla,IAAI,CAAC8S,GAAL,CAASiH,UAAT,CAAd,CAJoC,CAIA;;AACpC,QAAIrN,CAAC,GAAGrN,KAAK,CAACwa,CAAC,GAAGA,CAAL,CAAb,CALoC,CAKd;;AACtB,QAAIM,IAAI,GAAG9a,KAAK,CAACwa,CAAD,CAAhB,CANoC,CAMf;;AACrB,SAAK,IAAIva,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,CAApB,EAAuBva,CAAC,EAAxB,EAA4B;AACxB,UAAI8a,OAAO,GAAG,CAACpb,QAAf;AACA,UAAIqb,OAAO,GAAGrb,QAAd;AACA,UAAIsb,IAAI,GAAG,CAAX,CAHwB,CAGV;;AACd,UAAIjN,IAAI,GAAG,KAAX;AACA,UAAIkN,QAAQ,GAAG,EAAf,CALwB,CAMxB;AACA;;AACA,UAAIC,GAAG,GAAG,CAAV;;AACA,aAAO,CAACnN,IAAR,EAAc;AACV;AACA;AACA,YAAI0G,IAAI,GAAG,GAAX;;AACA,aAAK,IAAIvU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqa,CAApB,EAAuBra,CAAC,EAAxB,EAA4B;AACxB,cAAIib,EAAE,GAAGza,IAAI,CAACgU,GAAL,CAAS,CAACyF,CAAC,CAACna,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAF,GAAgB8a,IAAzB,CAAT;;AACA,cAAIhb,CAAC,KAAKE,CAAV,EAAa;AACTib,cAAE,GAAG,CAAL;AACH,WAJuB,CAItB;;;AACFN,cAAI,CAAC3a,CAAD,CAAJ,GAAUib,EAAV;AACA1G,cAAI,IAAI0G,EAAR;AACH,SAXS,CAYV;;;AACA,YAAIC,KAAK,GAAG,GAAZ;;AACA,aAAK,IAAIlb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqa,CAApB,EAAuBra,CAAC,EAAxB,EAA4B;AACxB,cAAIuU,IAAI,IAAI,CAAZ,EAAe;AACX,gBAAI0G,EAAE,GAAG,CAAT;AACH,WAFD,MAGK;AACD,gBAAIA,EAAE,GAAGN,IAAI,CAAC3a,CAAD,CAAJ,GAAUuU,IAAnB;AACH;;AACDoG,cAAI,CAAC3a,CAAD,CAAJ,GAAUib,EAAV;AACA,cAAIA,EAAE,GAAG,IAAT,EACIC,KAAK,IAAID,EAAE,GAAGza,IAAI,CAAC8S,GAAL,CAAS2H,EAAT,CAAd;AACP,SAxBS,CAyBV;;;AACA,YAAIC,KAAK,GAAGR,OAAZ,EAAqB;AACjB;AACA;AACAE,iBAAO,GAAGE,IAAV,CAHiB,CAGD;;AAChB,cAAID,OAAO,KAAKrb,QAAhB,EAA0B;AACtBsb,gBAAI,GAAGA,IAAI,GAAG,CAAd;AACH,WAFD,MAGK;AACDA,gBAAI,GAAG,CAACA,IAAI,GAAGD,OAAR,IAAmB,CAA1B;AACH;AACJ,SAVD,MAWK;AACD;AACAA,iBAAO,GAAGC,IAAV;;AACA,cAAIF,OAAO,KAAK,CAACpb,QAAjB,EAA2B;AACvBsb,gBAAI,GAAGA,IAAI,GAAG,CAAd;AACH,WAFD,MAGK;AACDA,gBAAI,GAAG,CAACA,IAAI,GAAGF,OAAR,IAAmB,CAA1B;AACH;AACJ,SA9CS,CA+CV;;;AACAI,WAAG;;AACH,YAAIxa,IAAI,CAACiU,GAAL,CAASyG,KAAK,GAAGR,OAAjB,IAA4BF,GAAhC,EAAqC;AACjC3M,cAAI,GAAG,IAAP;AACH;;AACD,YAAImN,GAAG,IAAID,QAAX,EAAqB;AACjBlN,cAAI,GAAG,IAAP;AACH;AACJ,OAhEuB,CAiExB;AACA;;;AACA,WAAK,IAAI7N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqa,CAApB,EAAuBra,CAAC,EAAxB,EAA4B;AACxBkN,SAAC,CAACpN,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAD,GAAe2a,IAAI,CAAC3a,CAAD,CAAnB;AACH;AACJ,KA7EmC,CA6ElC;AACF;;;AACA,QAAImb,IAAI,GAAGtb,KAAK,CAACwa,CAAC,GAAGA,CAAL,CAAhB;AACA,QAAIe,EAAE,GAAGf,CAAC,GAAG,CAAb;;AACA,SAAK,IAAIva,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,CAApB,EAAuBva,CAAC,EAAxB,EAA4B;AACxB,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqa,CAApB,EAAuBra,CAAC,EAAxB,EAA4B;AACxBmb,YAAI,CAACrb,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAJ,GAAkBQ,IAAI,CAACuG,GAAL,CAAS,CAACmG,CAAC,CAACpN,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAD,GAAekN,CAAC,CAAClN,CAAC,GAAGqa,CAAJ,GAAQva,CAAT,CAAjB,IAAgCsb,EAAzC,EAA6C,MAA7C,CAAlB;AACH;AACJ;;AACD,WAAOD,IAAP;AACH,GAvFD,CAlGe,CA0Lf;;;AACA,WAASE,IAAT,CAAc5V,CAAd,EAAiB;AAAE,WAAOA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AAAoC;;AACvD,MAAI6V,IAAI,GAAG,SAAPA,IAAO,CAAU5C,GAAV,EAAe;AACtB,QAAIA,GAAG,GAAGA,GAAG,IAAI,EAAjB;AACA,SAAK6B,UAAL,GAAkB9B,MAAM,CAACC,GAAD,EAAM,YAAN,EAAoB,EAApB,CAAxB,CAFsB,CAE2B;;AACjD,SAAKnN,GAAL,GAAWkN,MAAM,CAACC,GAAD,EAAM,KAAN,EAAa,CAAb,CAAjB,CAHsB,CAGY;;AAClC,SAAK6C,OAAL,GAAe9C,MAAM,CAACC,GAAD,EAAM,SAAN,EAAiB,EAAjB,CAArB,CAJsB,CAIqB;;AAC3C,SAAKvQ,UAAL,GAAkBsQ,MAAM,CAACC,GAAD,EAAM,YAAN,EAAoBR,MAAM,CAAC7J,SAA3B,CAAxB;AACA,SAAKmN,IAAL,GAAY,CAAZ;AACH,GAPD;;AAQAF,MAAI,CAACG,SAAL,GAAiB;AACb;AACA;AACAC,eAAW,EAAE,qBAAU3L,CAAV,EAAa;AACtB,UAAIsK,CAAC,GAAGtK,CAAC,CAAClP,MAAV;AACA,UAAIoZ,CAAC,GAAGlK,CAAC,CAAC,CAAD,CAAD,CAAKlP,MAAb;AACAyX,YAAM,CAAC+B,CAAC,GAAG,CAAL,EAAQ,uCAAR,CAAN;AACA/B,YAAM,CAAC2B,CAAC,GAAG,CAAL,EAAQ,oCAAR,CAAN;AACA,UAAI0B,KAAK,GAAGvB,IAAI,CAACrK,CAAD,EAAI,KAAK5H,UAAT,CAAhB,CALsB,CAKgB;;AACtC,WAAK+E,CAAL,GAASoN,GAAG,CAACqB,KAAD,EAAQ,KAAKpB,UAAb,EAAyB,IAAzB,CAAZ,CANsB,CAMsB;;AAC5C,WAAKF,CAAL,GAASA,CAAT,CAPsB,CAOV;;AACZ,WAAKuB,YAAL,GARsB,CAQD;AACxB,KAZY;AAabC,kBAAc,EAAE,wBAAU9L,CAAV,EAAa+L,IAAb,EAAmB;AAC/B,UAAIzB,CAAC,GAAGtK,CAAC,CAAClP,MAAV;AACA,UAAIoZ,CAAC,GAAGlK,CAAC,CAAC,CAAD,CAAD,CAAKlP,MAAb;AACAyX,YAAM,CAAC+B,CAAC,GAAG,CAAL,EAAQ,uCAAR,CAAN;AACA/B,YAAM,CAAC2B,CAAC,GAAG,CAAL,EAAQ,oCAAR,CAAN;AACA,UAAI0B,KAAK,GAAGvB,IAAI,CAACrK,CAAD,EAAI,KAAK5H,UAAT,CAAhB,CAL+B,CAKO;;AACtC,WAAK+E,CAAL,GAASoN,GAAG,CAACqB,KAAD,EAAQ,KAAKpB,UAAb,EAAyB,IAAzB,CAAZ,CAN+B,CAMa;;AAC5C,WAAKF,CAAL,GAASA,CAAT,CAP+B,CAOnB;AACZ;;AACA,UAAIyB,IAAJ,EAAU;AACN,YAAMC,IAAI,GAAGvb,IAAI,CAACuG,GAAL,OAAAvG,IAAI,qBAAQsb,IAAI,CAAC1c,GAAL,CAAS,UAAAua,CAAC;AAAA,iBAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,SAAV,CAAR,EAAjB;AACA,YAAMqC,IAAI,GAAGxb,IAAI,CAACqR,GAAL,OAAArR,IAAI,qBAAQsb,IAAI,CAAC1c,GAAL,CAAS,UAAAua,CAAC;AAAA,iBAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,SAAV,CAAR,EAAjB;AACA,YAAMsC,IAAI,GAAGzb,IAAI,CAACuG,GAAL,OAAAvG,IAAI,qBAAQsb,IAAI,CAAC1c,GAAL,CAAS,UAAAua,CAAC;AAAA,iBAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,SAAV,CAAR,EAAjB;AACA,YAAMuC,IAAI,GAAG1b,IAAI,CAACqR,GAAL,OAAArR,IAAI,qBAAQsb,IAAI,CAAC1c,GAAL,CAAS,UAAAua,CAAC;AAAA,iBAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,SAAV,CAAR,EAAjB;AACA,YAAMlF,GAAG,GAAGjU,IAAI,CAACuG,GAAL,CAASvG,IAAI,CAACiU,GAAL,CAASuH,IAAT,CAAT,EAAyBxb,IAAI,CAACiU,GAAL,CAASsH,IAAT,CAAzB,EAAyCvb,IAAI,CAACiU,GAAL,CAASyH,IAAT,CAAzC,EAAyD1b,IAAI,CAACiU,GAAL,CAASwH,IAAT,CAAzD,CAAZ;AACA,YAAIrc,MAAM,GAAG,EAAb;;AACA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKua,CAAzB,EAA4Bva,CAAC,EAA7B,EAAiC;AAC7BF,gBAAM,CAACL,IAAP,CAAY,CAAEuc,IAAI,CAAChc,CAAD,CAAJ,CAAQ,CAAR,IAAa2U,GAAd,GAAqB,IAAtB,EAA6BqH,IAAI,CAAChc,CAAD,CAAJ,CAAQ,CAAR,IAAa2U,GAAd,GAAqB,IAAjD,CAAZ;AACH;;AACD,aAAKpE,CAAL,GAASzQ,MAAT;AACH,OAXD,MAYK;AACD,aAAKyQ,CAAL,GAASqJ,OAAO,CAAC,KAAKW,CAAN,EAAS,KAAK9O,GAAd,EAAmBuE,SAAnB,CAAhB,CADC,CAC8C;AAClD;;AACD,WAAKqM,KAAL,GAAazC,OAAO,CAAC,KAAKW,CAAN,EAAS,KAAK9O,GAAd,EAAmB,GAAnB,CAApB,CAxB+B,CAwBc;;AAC7C,WAAK6Q,KAAL,GAAa1C,OAAO,CAAC,KAAKW,CAAN,EAAS,KAAK9O,GAAd,EAAmB,GAAnB,CAApB,CAzB+B,CAyBc;;AAC7C,WAAKiQ,IAAL,GAAY,CAAZ;AACH,KAxCY;AAyCb;AACA;AACA;AACAa,gBAAY,EAAE,sBAAUpC,CAAV,EAAa;AACvB,UAAII,CAAC,GAAGJ,CAAC,CAACpZ,MAAV;AACAyX,YAAM,CAAC+B,CAAC,GAAG,CAAL,EAAQ,uCAAR,CAAN,CAFuB,CAGvB;;AACA,UAAIsB,KAAK,GAAG9b,KAAK,CAACwa,CAAC,GAAGA,CAAL,CAAjB,CAJuB,CAIG;;AAC1B,WAAK,IAAIva,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,CAApB,EAAuBva,CAAC,EAAxB,EAA4B;AACxB,aAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGqa,CAAxB,EAA2Bra,CAAC,EAA5B,EAAgC;AAC5B,cAAIyB,CAAC,GAAGwY,CAAC,CAACna,CAAD,CAAD,CAAKE,CAAL,CAAR;AACA2b,eAAK,CAAC7b,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAL,GAAmByB,CAAnB;AACAka,eAAK,CAAC3b,CAAC,GAAGqa,CAAJ,GAAQva,CAAT,CAAL,GAAmB2B,CAAnB;AACH;AACJ;;AACD,WAAKyL,CAAL,GAASoN,GAAG,CAACqB,KAAD,EAAQ,KAAKpB,UAAb,EAAyB,IAAzB,CAAZ;AACA,WAAKF,CAAL,GAASA,CAAT;AACA,WAAKuB,YAAL,GAduB,CAcF;AACxB,KA3DY;AA4Db;AACAA,gBAAY,EAAE,wBAAY;AACtB;AACA,WAAKvL,CAAL,GAASqJ,OAAO,CAAC,KAAKW,CAAN,EAAS,KAAK9O,GAAd,EAAmBuE,SAAnB,CAAhB,CAFsB,CAEyB;;AAC/C,WAAKqM,KAAL,GAAazC,OAAO,CAAC,KAAKW,CAAN,EAAS,KAAK9O,GAAd,EAAmB,GAAnB,CAApB,CAHsB,CAGuB;;AAC7C,WAAK6Q,KAAL,GAAa1C,OAAO,CAAC,KAAKW,CAAN,EAAS,KAAK9O,GAAd,EAAmB,GAAnB,CAApB,CAJsB,CAIuB;;AAC7C,WAAKiQ,IAAL,GAAY,CAAZ;AACH,KAnEY;AAoEb;AACAc,eAAW,EAAE,uBAAY;AACrB,aAAO,KAAKjM,CAAZ;AACH,KAvEY;AAwEb;AACA5C,QAAI,EAAE,gBAAY;AACd,WAAK+N,IAAL,IAAa,CAAb;AACA,UAAInB,CAAC,GAAG,KAAKA,CAAb;AACA,UAAIkC,EAAE,GAAG,KAAKC,QAAL,CAAc,KAAKnM,CAAnB,CAAT,CAHc,CAGkB;;AAChC,UAAIoM,IAAI,GAAGF,EAAE,CAACE,IAAd;AACA,UAAIC,IAAI,GAAGH,EAAE,CAACG,IAAd,CALc,CAMd;;AACA,UAAIC,KAAK,GAAG9c,KAAK,CAAC,KAAK0L,GAAN,CAAjB;;AACA,WAAK,IAAIzL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,CAApB,EAAuBva,CAAC,EAAxB,EAA4B;AACxB,aAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8J,GAAzB,EAA8B9J,CAAC,EAA/B,EAAmC;AAC/B,cAAImb,GAAG,GAAGF,IAAI,CAAC5c,CAAD,CAAJ,CAAQ2B,CAAR,CAAV;AACA,cAAIob,GAAG,GAAG,KAAKT,KAAL,CAAWtc,CAAX,EAAc2B,CAAd,CAAV;AACA,cAAIqb,MAAM,GAAG,KAAKX,KAAL,CAAWrc,CAAX,EAAc2B,CAAd,CAAb,CAH+B,CAI/B;;AACA,cAAIsb,OAAO,GAAG1B,IAAI,CAACuB,GAAD,CAAJ,KAAcvB,IAAI,CAACwB,GAAD,CAAlB,GAA0BC,MAAM,GAAG,GAAnC,GAAyCA,MAAM,GAAG,GAAhE;AACA,cAAIC,OAAO,GAAG,IAAd,EACIA,OAAO,GAAG,IAAV,CAP2B,CAOX;;AACpB,eAAKZ,KAAL,CAAWrc,CAAX,EAAc2B,CAAd,IAAmBsb,OAAnB,CAR+B,CAQH;AAC5B;;AACA,cAAIC,MAAM,GAAG,KAAKxB,IAAL,GAAY,GAAZ,GAAkB,GAAlB,GAAwB,GAArC;AACA,cAAIyB,MAAM,GAAGD,MAAM,GAAGH,GAAT,GAAe,KAAKtB,OAAL,GAAewB,OAAf,GAAyBL,IAAI,CAAC5c,CAAD,CAAJ,CAAQ2B,CAAR,CAArD;AACA,eAAK2a,KAAL,CAAWtc,CAAX,EAAc2B,CAAd,IAAmBwb,MAAnB,CAZ+B,CAYJ;AAC3B;;AACA,eAAK5M,CAAL,CAAOvQ,CAAP,EAAU2B,CAAV,KAAgBwb,MAAhB;AACAN,eAAK,CAAClb,CAAD,CAAL,IAAY,KAAK4O,CAAL,CAAOvQ,CAAP,EAAU2B,CAAV,CAAZ,CAf+B,CAeL;AAC7B;AACJ,OA1Ba,CA2Bd;;;AACA,WAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,CAApB,EAAuBva,CAAC,EAAxB,EAA4B;AACxB,aAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8J,GAAzB,EAA8B9J,CAAC,EAA/B,EAAmC;AAC/B,eAAK4O,CAAL,CAAOvQ,CAAP,EAAU2B,CAAV,KAAgBkb,KAAK,CAAClb,CAAD,CAAL,GAAW4Y,CAA3B;AACH;AACJ,OAhCa,CAiCd;;;AACA,aAAOoC,IAAP,CAlCc,CAkCD;AAChB,KA5GY;AA6Gb;AACAS,aAAS,EAAE,qBAAY;AACnB,UAAI7C,CAAC,GAAG,KAAKA,CAAb;AACA,UAAIkC,EAAE,GAAG,KAAKC,QAAL,CAAc,KAAKnM,CAAnB,CAAT,CAFmB,CAEa;;AAChC,UAAIoM,IAAI,GAAGF,EAAE,CAACE,IAAd;AACA,UAAIC,IAAI,GAAGH,EAAE,CAACG,IAAd;AACA,UAAI/O,CAAC,GAAG,IAAR;;AACA,WAAK,IAAI7N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,CAApB,EAAuBva,CAAC,EAAxB,EAA4B;AACxB,aAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8J,GAAzB,EAA8B9J,CAAC,EAA/B,EAAmC;AAC/B,cAAI0b,IAAI,GAAG,KAAK9M,CAAL,CAAOvQ,CAAP,EAAU2B,CAAV,CAAX;AACA,eAAK4O,CAAL,CAAOvQ,CAAP,EAAU2B,CAAV,IAAe0b,IAAI,GAAGxP,CAAtB;AACA,cAAIyP,GAAG,GAAG,KAAKZ,QAAL,CAAc,KAAKnM,CAAnB,CAAV;AACA,eAAKA,CAAL,CAAOvQ,CAAP,EAAU2B,CAAV,IAAe0b,IAAI,GAAGxP,CAAtB;AACA,cAAI0P,GAAG,GAAG,KAAKb,QAAL,CAAc,KAAKnM,CAAnB,CAAV;AACA,cAAIiN,QAAQ,GAAGZ,IAAI,CAAC5c,CAAD,CAAJ,CAAQ2B,CAAR,CAAf;AACA,cAAI8b,SAAS,GAAG,CAACH,GAAG,CAACX,IAAJ,GAAWY,GAAG,CAACZ,IAAhB,KAAyB,IAAI9O,CAA7B,CAAhB;AACA,eAAK0C,CAAL,CAAOvQ,CAAP,EAAU2B,CAAV,IAAe0b,IAAf;AACH;AACJ;AACJ,KAhIY;AAiIb;AACAX,YAAQ,EAAE,kBAAUnM,CAAV,EAAa;AACnB,UAAIgK,CAAC,GAAG,KAAKA,CAAb;AACA,UAAI9O,GAAG,GAAG,KAAKA,GAAf,CAFmB,CAEC;;AACpB,UAAI2B,CAAC,GAAG,KAAKA,CAAb;AACA,UAAIsQ,IAAI,GAAG,KAAKhC,IAAL,GAAY,GAAZ,GAAkB,CAAlB,GAAsB,CAAjC,CAJmB,CAIiB;AACpC;;AACA,UAAIiC,EAAE,GAAG5d,KAAK,CAACwa,CAAC,GAAGA,CAAL,CAAd;AACA,UAAIqD,IAAI,GAAG,GAAX;;AACA,WAAK,IAAI5d,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,CAApB,EAAuBva,CAAC,EAAxB,EAA4B;AACxB,aAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGqa,CAAxB,EAA2Bra,CAAC,EAA5B,EAAgC;AAC5B,cAAI2d,IAAI,GAAG,GAAX;;AACA,eAAK,IAAIlc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8J,GAApB,EAAyB9J,CAAC,EAA1B,EAA8B;AAC1B,gBAAImc,KAAK,GAAGvN,CAAC,CAACvQ,CAAD,CAAD,CAAK2B,CAAL,IAAU4O,CAAC,CAACrQ,CAAD,CAAD,CAAKyB,CAAL,CAAtB;AACAkc,gBAAI,IAAIC,KAAK,GAAGA,KAAhB;AACH;;AACD,cAAIC,EAAE,GAAG,OAAO,MAAMF,IAAb,CAAT,CAN4B,CAMC;;AAC7BF,YAAE,CAAC3d,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAF,GAAgB6d,EAAhB;AACAJ,YAAE,CAACzd,CAAC,GAAGqa,CAAJ,GAAQva,CAAT,CAAF,GAAgB+d,EAAhB;AACAH,cAAI,IAAI,IAAIG,EAAZ;AACH;AACJ,OApBkB,CAqBnB;;;AACA,UAAIC,EAAE,GAAGzD,CAAC,GAAGA,CAAb;AACA,UAAI0D,CAAC,GAAGle,KAAK,CAACie,EAAD,CAAb;;AACA,WAAK,IAAIhV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgV,EAApB,EAAwBhV,CAAC,EAAzB,EAA6B;AACzBiV,SAAC,CAACjV,CAAD,CAAD,GAAOtI,IAAI,CAACuG,GAAL,CAAS0W,EAAE,CAAC3U,CAAD,CAAF,GAAQ4U,IAAjB,EAAuB,MAAvB,CAAP;AACH;;AACD,UAAIjB,IAAI,GAAG,GAAX;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAI5c,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,CAApB,EAAuBva,CAAC,EAAxB,EAA4B;AACxB,YAAIke,IAAI,GAAG,IAAIhZ,KAAJ,CAAUuG,GAAV,CAAX,CADwB,CACG;;AAC3B,aAAK,IAAI9J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8J,GAApB,EAAyB9J,CAAC,EAA1B,EAA8B;AAC1Buc,cAAI,CAACvc,CAAD,CAAJ,GAAU,GAAV;AACH;;AACD,aAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqa,CAApB,EAAuBra,CAAC,EAAxB,EAA4B;AACxByc,cAAI,IAAI,CAACvP,CAAC,CAACpN,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAF,GAAgBQ,IAAI,CAAC8S,GAAL,CAASyK,CAAC,CAACje,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAV,CAAxB,CADwB,CACwB;;AAChD,cAAIie,OAAO,GAAG,KAAKT,IAAI,GAAGtQ,CAAC,CAACpN,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAAR,GAAsB+d,CAAC,CAACje,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAA5B,IAA2Cyd,EAAE,CAAC3d,CAAC,GAAGua,CAAJ,GAAQra,CAAT,CAA3D;;AACA,eAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8J,GAApB,EAAyB9J,CAAC,EAA1B,EAA8B;AAC1Buc,gBAAI,CAACvc,CAAD,CAAJ,IAAWwc,OAAO,IAAI5N,CAAC,CAACvQ,CAAD,CAAD,CAAK2B,CAAL,IAAU4O,CAAC,CAACrQ,CAAD,CAAD,CAAKyB,CAAL,CAAd,CAAlB;AACH;AACJ;;AACDib,YAAI,CAACnd,IAAL,CAAUye,IAAV;AACH;;AACD,aAAO;AAAEvB,YAAI,EAAEA,IAAR;AAAcC,YAAI,EAAEA;AAApB,OAAP;AACH;AA9KY,GAAjB;AAgLArE,QAAM,CAACiD,IAAP,GAAcA,IAAd,CApXe,CAoXK;AACvB,CArXD,EAqXGnD,MArXH;AAsXA;AACA;AACA;;;AACA+F,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAAUxQ,CAAV,EAAa;AAC1C,MAAIyQ,OAAO,GAAGF,IAAd;;AACA,MAAIvQ,CAAC,CAACtF,IAAF,CAAOgW,WAAP,IAAsB,MAA1B,EAAkC;AAC9BD,WAAO,CAACE,GAAR,GAAc3Q,CAAC,CAACtF,IAAhB;AACA+V,WAAO,CAACG,IAAR,GAAe,IAAIpG,MAAM,CAACmD,IAAX,CAAgB;AAC3BC,aAAO,EAAE5N,CAAC,CAACtF,IAAF,CAAOuG,MAAP,CAAcC,YADI;AAE3B0L,gBAAU,EAAE5M,CAAC,CAACtF,IAAF,CAAOuG,MAAP,CAAc2L,UAFC;AAG3BhP,SAAG,EAAE,CAHsB;AAI3BpD,gBAAU,EAAEwF,CAAC,CAACtF,IAAF,CAAOuG,MAAP,CAAc4P,cAAd,IAAgC,WAAhC,GAA8CtG,MAAM,CAAC7J,SAArD,GAAiE6J,MAAM,CAAC5J;AAJzD,KAAhB,CAAf;AAMA8P,WAAO,CAACG,IAAR,CAAa1C,cAAb,CAA4BlO,CAAC,CAACtF,IAAF,CAAO2P,KAAnC,EAA0CrK,CAAC,CAACtF,IAAF,CAAOuG,MAAP,CAAc6P,MAAd,GAAuB9Q,CAAC,CAACtF,IAAF,CAAOyT,IAA9B,GAAqChM,SAA/E;AACAsO,WAAO,CAACG,IAAR,CAAa9Q,IAAb;AACA2Q,WAAO,CAACM,WAAR,CAAoBN,OAAO,CAACG,IAAR,CAAajC,WAAb,EAApB;AACAqC,WAAO,CAACrL,GAAR,CAAY8K,OAAO,CAACG,IAAR,CAAajC,WAAb,EAAZ;AACH,GAZD,MAaK,IAAI8B,OAAO,CAACG,IAAR,IAAgB,IAApB,EAA0B;AAC3BH,WAAO,CAACG,IAAR,CAAa9Q,IAAb;AACA2Q,WAAO,CAACM,WAAR,CAAoBN,OAAO,CAACG,IAAR,CAAajC,WAAb,EAApB;AACH;AACJ,CAnBD,EAmBG,KAnBH,E","file":"tsne.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/components/workers/embeddings/worker_tsne.ts\");\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction slice(arrayLike, start) {\n    start = start|0;\n    var newLen = Math.max(arrayLike.length - start, 0);\n    var newArr = Array(newLen);\n    for(var idx = 0; idx < newLen; idx++)  {\n        newArr[idx] = arrayLike[start + idx];\n    }\n    return newArr;\n}\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply = function(fn/*, ...args*/) {\n    var args = slice(arguments, 1);\n    return function(/*callArgs*/) {\n        var callArgs = slice(arguments);\n        return fn.apply(null, args.concat(callArgs));\n    };\n};\n\nvar initialParams = function (fn) {\n    return function (/*...args, callback*/) {\n        var args = slice(arguments);\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    };\n};\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return function (fn/*, ...args*/) {\n        var args = slice(arguments, 1);\n        defer(function () {\n            fn.apply(null, args);\n        });\n    };\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function(value) {\n                invokeCallback(callback, null, value);\n            }, function(err) {\n                invokeCallback(callback, err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (e) {\n        setImmediate$1(rethrow, e);\n    }\n}\n\nfunction rethrow(error) {\n    throw error;\n}\n\nvar supportsSymbol = typeof Symbol === 'function';\n\nfunction isAsync(fn) {\n    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction wrapAsync(asyncFn) {\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\nfunction applyEach$1(eachfn) {\n    return function(fns/*, ...args*/) {\n        var args = slice(arguments, 1);\n        var go = initialParams(function(args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                wrapAsync(fn).apply(that, args.concat(cb));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule$1 && freeModule$1.require && freeModule$1.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? {value: obj[key], key: key} : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function() {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, wrapAsync(iteratee), callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, wrapAsync(iteratee), callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        _iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, wrapAsync(iteratee), callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(function(err, result) {\n            runningTasks--;\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function(val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange$1 = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg){\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            wrapAsync(taskFn).apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function(node) {\n    if (node.prev) node.prev.next = node.next;\n    else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;\n    else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = function () {\n    while(this.head) this.shift();\n    return this;\n};\n\nDLL.prototype.insertAfter = function(node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;\n    else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function(node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;\n    else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function(node) {\n    if (this.head) this.insertBefore(this.head, node);\n    else setInitial(this, node);\n};\n\nDLL.prototype.push = function(node) {\n    if (this.tail) this.insertAfter(this.tail, node);\n    else setInitial(this, node);\n};\n\nDLL.prototype.shift = function() {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function() {\n    return this.tail && this.removeLink(this.tail);\n};\n\nDLL.prototype.toArray = function () {\n    var arr = Array(this.length);\n    var curr = this.head;\n    for(var idx = 0; idx < this.length; idx++) {\n        arr[idx] = curr.data;\n        curr = curr.next;\n    }\n    return arr;\n};\n\nDLL.prototype.remove = function (testFn) {\n    var curr = this.head;\n    while(!!curr) {\n        var next = curr.next;\n        if (testFn(curr)) {\n            this.removeLink(curr);\n        }\n        curr = next;\n    }\n    return this;\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function() {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(function() {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n    }\n\n    function _next(tasks) {\n        return function(err){\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = baseIndexOf(workersList, task, 0);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback.apply(task, arguments);\n\n                if (err != null) {\n                    q.error(err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        };\n    }\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated:noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        remove: function (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process: function () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n\n                if (numRunning === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return numRunning;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    eachOfSeries(coll, function(x, i, callback) {\n        _iteratee(memo, x, function(err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function(err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(/*...functions*/) {\n    var _functions = arrayMap(arguments, wrapAsync);\n    return function(/*...args*/) {\n        var args = slice(arguments);\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(_functions, args, function(newargs, fn, cb) {\n            fn.apply(that, newargs.concat(function(err/*, ...nextargs*/) {\n                var nextargs = slice(arguments, 1);\n                cb(err, nextargs);\n            }));\n        },\n        function(err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = function(/*...args*/) {\n    return seq.apply(null, slice(arguments).reverse());\n};\n\nvar _concat = Array.prototype.concat;\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatLimit = function(coll, limit, iteratee, callback) {\n    callback = callback || noop;\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(coll, limit, function(val, callback) {\n        _iteratee(val, function(err /*, ...args*/) {\n            if (err) return callback(err);\n            return callback(null, slice(arguments, 1));\n        });\n    }, function(err, mapResults) {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = _concat.apply(result, mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doLimit(concatLimit, Infinity);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doLimit(concatLimit, 1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = function(/*...values*/) {\n    var values = slice(arguments);\n    var args = [null].concat(values);\n    return function (/*...ignoredArgs, callback*/) {\n        var callback = arguments[arguments.length - 1];\n        return callback.apply(this, args);\n    };\n};\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nfunction _createTester(check, getResult) {\n    return function(eachfn, arr, iteratee, cb) {\n        cb = cb || noop;\n        var testPassed = false;\n        var testResult;\n        eachfn(arr, function(value, _, callback) {\n            iteratee(value, function(err, result) {\n                if (err) {\n                    callback(err);\n                } else if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    callback(null, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }, function(err) {\n            if (err) {\n                cb(err);\n            } else {\n                cb(null, testPassed ? testResult : getResult(false));\n            }\n        });\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = doParallel(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = doParallelLimit(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = doLimit(detectLimit, 1);\n\nfunction consoleFunc(name) {\n    return function (fn/*, ...args*/) {\n        var args = slice(arguments, 1);\n        args.push(function (err/*, ...args*/) {\n            var args = slice(arguments, 1);\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        });\n        wrapAsync(fn).apply(null, args);\n    };\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {AsyncFunction} fn - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occurred, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var _fn = wrapAsync(fn);\n    var _test = wrapAsync(test);\n\n    function next(err/*, ...args*/) {\n        if (err) return callback(err);\n        var args = slice(arguments, 1);\n        args.push(check);\n        _test.apply(this, args);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        _fn(next);\n    }\n\n    check(null, true);\n\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    var next = function(err/*, ...args*/) {\n        if (err) return callback(err);\n        var args = slice(arguments, 1);\n        if (test.apply(this, args)) return _iteratee(next);\n        callback.apply(null, [null].concat(args));\n    };\n    _iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(iteratee, test, callback) {\n    doWhilst(iteratee, function() {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {AsyncFunction} fn - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occurred, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n    var _fn = wrapAsync(fn);\n    var _test = wrapAsync(test);\n\n    function next(err) {\n        if (err) return callback(err);\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        _fn(next);\n    }\n\n    _test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n    eachOf(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = doParallel(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = doParallelLimit(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({index: index, value: x});\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, wrapAsync(iteratee), callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupByLimit = function(coll, limit, iteratee, callback) {\n    callback = callback || noop;\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(coll, limit, function(val, callback) {\n        _iteratee(val, function(err, key) {\n            if (err) return callback(err);\n            return callback(null, {key: key, val: val});\n        });\n    }, function(err, mapResults) {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var key = mapResults[i].key;\n                var val = mapResults[i].val;\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @example\n *\n * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {\n *     db.findById(userId, function(err, user) {\n *         if (err) return callback(err);\n *         return callback(null, user.age);\n *     });\n * }, function(err, result) {\n *     // result is object containing the userIds grouped by age\n *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};\n * });\n */\nvar groupBy = doLimit(groupByLimit, Infinity);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupBySeries = doLimit(groupByLimit, 1);\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    eachOfLimit(obj, limit, function(val, key, next) {\n        _iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function() {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn.apply(null, args.concat(function(/*args*/) {\n                var args = slice(arguments);\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            }));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        wrapAsync(task)(function (err, result) {\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            }\n            results[key] = result;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n *\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n    _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n    _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue(function (items, cb) {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function() {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = slice(array).reverse();\n    reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(function callback(error, cbArg) {\n            if (error) {\n                reflectCallback(null, { error: error });\n            } else {\n                var value;\n                if (arguments.length <= 2) {\n                    value = cbArg;\n                } else {\n                    value = slice(arguments, 1);\n                }\n                reflectCallback(null, { value: value });\n            }\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function(task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function(value, cb) {\n        iteratee(value, function(err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ?\n                t.interval :\n                constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task(function(err) {\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    var _task = wrapAsync(task);\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            _task.apply(null, args.concat(cb));\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n    _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = doParallel(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = doParallelLimit(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    map(coll, function (x, callback) {\n        _iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, {value: x, criteria: criteria});\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams(function (args, callback) {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push(function () {\n            if (!timedOut) {\n                callback.apply(null, arguments);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn.apply(null, args);\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(baseRange(0, count, 1), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf(coll, function(v, k, cb) {\n        _iteratee(accumulator, v, k, cb);\n    }, function(err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    callback = callback || noop;\n    eachSeries(tasks, function(task, callback) {\n        wrapAsync(task)(function (err, res/*, ...args*/) {\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            } else {\n                result = res;\n            }\n            error = err;\n            callback(!err);\n        });\n    }, function () {\n        callback(error, result);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    if (!test()) return callback(null);\n    var next = function(err/*, ...args*/) {\n        if (err) return callback(err);\n        if (test()) return _iteratee(next);\n        var args = slice(arguments, 1);\n        callback.apply(null, [null].concat(args));\n    };\n    _iteratee(next);\n}\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, iteratee, callback) {\n    whilst(function() {\n        return !test.apply(this, arguments);\n    }, iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        args.push(onlyOnce(next));\n        task.apply(null, args);\n    }\n\n    function next(err/*, ...args*/) {\n        if (err || taskIndex === tasks.length) {\n            return callback.apply(null, arguments);\n        }\n        nextTask(slice(arguments, 1));\n    }\n\n    nextTask([]);\n};\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n * @see AsyncFunction\n */\n\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\n\nvar index = {\n    apply: apply,\n    applyEach: applyEach,\n    applyEachSeries: applyEachSeries,\n    asyncify: asyncify,\n    auto: auto,\n    autoInject: autoInject,\n    cargo: cargo,\n    compose: compose,\n    concat: concat,\n    concatLimit: concatLimit,\n    concatSeries: concatSeries,\n    constant: constant,\n    detect: detect,\n    detectLimit: detectLimit,\n    detectSeries: detectSeries,\n    dir: dir,\n    doDuring: doDuring,\n    doUntil: doUntil,\n    doWhilst: doWhilst,\n    during: during,\n    each: eachLimit,\n    eachLimit: eachLimit$1,\n    eachOf: eachOf,\n    eachOfLimit: eachOfLimit,\n    eachOfSeries: eachOfSeries,\n    eachSeries: eachSeries,\n    ensureAsync: ensureAsync,\n    every: every,\n    everyLimit: everyLimit,\n    everySeries: everySeries,\n    filter: filter,\n    filterLimit: filterLimit,\n    filterSeries: filterSeries,\n    forever: forever,\n    groupBy: groupBy,\n    groupByLimit: groupByLimit,\n    groupBySeries: groupBySeries,\n    log: log,\n    map: map,\n    mapLimit: mapLimit,\n    mapSeries: mapSeries,\n    mapValues: mapValues,\n    mapValuesLimit: mapValuesLimit,\n    mapValuesSeries: mapValuesSeries,\n    memoize: memoize,\n    nextTick: nextTick,\n    parallel: parallelLimit,\n    parallelLimit: parallelLimit$1,\n    priorityQueue: priorityQueue,\n    queue: queue$1,\n    race: race,\n    reduce: reduce,\n    reduceRight: reduceRight,\n    reflect: reflect,\n    reflectAll: reflectAll,\n    reject: reject,\n    rejectLimit: rejectLimit,\n    rejectSeries: rejectSeries,\n    retry: retry,\n    retryable: retryable,\n    seq: seq,\n    series: series,\n    setImmediate: setImmediate$1,\n    some: some,\n    someLimit: someLimit,\n    someSeries: someSeries,\n    sortBy: sortBy,\n    timeout: timeout,\n    times: times,\n    timesLimit: timeLimit,\n    timesSeries: timesSeries,\n    transform: transform,\n    tryEach: tryEach,\n    unmemoize: unmemoize,\n    until: until,\n    waterfall: waterfall,\n    whilst: whilst,\n\n    // aliases\n    all: every,\n    allLimit: everyLimit,\n    allSeries: everySeries,\n    any: some,\n    anyLimit: someLimit,\n    anySeries: someSeries,\n    find: detect,\n    findLimit: detectLimit,\n    findSeries: detectSeries,\n    forEach: eachLimit,\n    forEachSeries: eachSeries,\n    forEachLimit: eachLimit$1,\n    forEachOf: eachOf,\n    forEachOfSeries: eachOfSeries,\n    forEachOfLimit: eachOfLimit,\n    inject: reduce,\n    foldl: reduce,\n    foldr: reduceRight,\n    select: filter,\n    selectLimit: filterLimit,\n    selectSeries: filterSeries,\n    wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.apply = apply;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatLimit = concatLimit;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.groupBy = groupBy;\nexports.groupByLimit = groupByLimit;\nexports.groupBySeries = groupBySeries;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.tryEach = tryEach;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","/*\n * jaccard\n * <cam@campedersen.com>\n */\n\nvar async = require('async');\n\n/*\n * Return mutual elements in the input sets\n */\nvar intersection = function (a, b, c) {\n  var x = [];\n  var check = function (e, cb) {\n    if (~b.indexOf(e)) x.push(e);\n    if (cb && typeof cb == 'function') cb(null);\n  };\n\n  if (c) {\n    async.forEach(a, check, function () {\n      c(null, x);\n    });\n  } else {\n    a.forEach(check);\n    return x;\n  }\n}\n\n/*\n * Return distinct elements from both input sets\n */\nvar union = function (a, b, c) {\n  var x = [];\n  var check = function (e, cb) {\n    if (!~x.indexOf(e)) x.push(e);\n    if (cb && typeof cb == 'function') cb(null);\n  }\n\n  if (c) {\n    var waiting = 2;\n    var asyncCheck = function () {\n      if (--waiting == 0) {\n        c(null, x);\n      }\n    }\n    async.forEach(a, check, asyncCheck);\n    async.forEach(b, check, asyncCheck);\n  } else {\n    a.forEach(check);\n    b.forEach(check);\n    return x;\n  }\n}\n\n/*\n * Similarity\n */\nvar index = function (a, b, c) {\n  if (c) {\n    async.parallel({\n      intersection: function (cb) {\n        intersection(a, b, cb);\n      },\n      union: function (cb) {\n        union(a, b, cb);\n      }\n    }, function (err, results) {\n      c(results.intersection.length / results.union.length);\n    });\n  } else {\n    return intersection(a, b).length / union(a, b).length;\n  }\n}\n\n/*\n * Dissimilarity\n */\nvar distance = function (a, b, c) {\n  if (c) {\n    c(1 - index(a, b));\n  } else {\n    return 1 - index(a, b);\n  }\n}\n\n/*\n * Say cheese\n */\nmodule.exports = {\n  index: index,\n  distance: distance\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","/**\n * Calculate current error\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} parameters - Array of current parameter values\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {number}\n */\nexport default function errorCalculation(\n  data,\n  parameters,\n  parameterizedFunction\n) {\n  var error = 0;\n  const func = parameterizedFunction(parameters);\n\n  for (var i = 0; i < data.x.length; i++) {\n    error += Math.abs(data.y[i] - func(data.x[i]));\n  }\n\n  return error;\n}\n","import errorCalculation from './errorCalculation';\nimport step from './step';\n\n/**\n * Curve fitting algorithm\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @param {object} [options] - Options object\n * @param {number} [options.damping] - Levenberg-Marquardt parameter\n * @param {number} [options.gradientDifference = 10e-2] - Adjustment for decrease the damping parameter\n * @param {Array<number>} [options.minValues] - Minimum allowed values for parameters\n * @param {Array<number>} [options.maxValues] - Maximum allowed values for parameters\n * @param {Array<number>} [options.initialValues] - Array of initial parameter values\n * @param {number} [options.maxIterations = 100] - Maximum of allowed iterations\n * @param {number} [options.errorTolerance = 10e-3] - Minimum uncertainty allowed for each point\n * @return {{parameterValues: Array<number>, parameterError: number, iterations: number}}\n */\nexport default function levenbergMarquardt(\n  data,\n  parameterizedFunction,\n  options = {}\n) {\n  let {\n    maxIterations = 100,\n    gradientDifference = 10e-2,\n    damping = 0,\n    errorTolerance = 10e-3,\n    minValues,\n    maxValues,\n    initialValues\n  } = options;\n\n  if (damping <= 0) {\n    throw new Error('The damping option must be a positive number');\n  } else if (!data.x || !data.y) {\n    throw new Error('The data parameter must have x and y elements');\n  } else if (\n    !Array.isArray(data.x) ||\n    data.x.length < 2 ||\n    !Array.isArray(data.y) ||\n    data.y.length < 2\n  ) {\n    throw new Error(\n      'The data parameter elements must be an array with more than 2 points'\n    );\n  } else if (data.x.length !== data.y.length) {\n    throw new Error('The data parameter elements must have the same size');\n  }\n\n  var parameters =\n    initialValues || new Array(parameterizedFunction.length).fill(1);\n  let parLen = parameters.length;\n  maxValues = maxValues || new Array(parLen).fill(Number.MAX_SAFE_INTEGER);\n  minValues = minValues || new Array(parLen).fill(Number.MIN_SAFE_INTEGER);\n\n  if (maxValues.length !== minValues.length) {\n    throw new Error('minValues and maxValues must be the same size');\n  }\n\n  if (!Array.isArray(parameters)) {\n    throw new Error('initialValues must be an array');\n  }\n\n  var error = errorCalculation(data, parameters, parameterizedFunction);\n\n  var converged = error <= errorTolerance;\n\n  for (\n    var iteration = 0;\n    iteration < maxIterations && !converged;\n    iteration++\n  ) {\n    parameters = step(\n      data,\n      parameters,\n      damping,\n      gradientDifference,\n      parameterizedFunction\n    );\n\n    for (let k = 0; k < parLen; k++) {\n      parameters[k] = Math.min(\n        Math.max(minValues[k], parameters[k]),\n        maxValues[k]\n      );\n    }\n\n    error = errorCalculation(data, parameters, parameterizedFunction);\n    if (isNaN(error)) break;\n    converged = error <= errorTolerance;\n  }\n\n  return {\n    parameterValues: parameters,\n    parameterError: error,\n    iterations: iteration\n  };\n}\n","import { inverse, Matrix } from 'ml-matrix';\n\n/**\n * Difference of the matrix function over the parameters\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} paramFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Matrix}\n */\nfunction gradientFunction(\n  data,\n  evaluatedData,\n  params,\n  gradientDifference,\n  paramFunction\n) {\n  const n = params.length;\n  const m = data.x.length;\n\n  var ans = new Array(n);\n\n  for (var param = 0; param < n; param++) {\n    ans[param] = new Array(m);\n    var auxParams = params.concat();\n    auxParams[param] += gradientDifference;\n    var funcParam = paramFunction(auxParams);\n\n    for (var point = 0; point < m; point++) {\n      ans[param][point] = evaluatedData[point] - funcParam(data.x[point]);\n    }\n  }\n  return new Matrix(ans);\n}\n\n/**\n * Matrix function over the samples\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @return {Matrix}\n */\nfunction matrixFunction(data, evaluatedData) {\n  const m = data.x.length;\n\n  var ans = new Array(m);\n\n  for (var point = 0; point < m; point++) {\n    ans[point] = [data.y[point] - evaluatedData[point]];\n  }\n\n  return new Matrix(ans);\n}\n\n/**\n * Iteration for Levenberg-Marquardt\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} damping - Levenberg-Marquardt parameter\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Array<number>}\n */\nexport default function step(\n  data,\n  params,\n  damping,\n  gradientDifference,\n  parameterizedFunction\n) {\n  var value = damping * gradientDifference * gradientDifference;\n  var identity = Matrix.eye(params.length, params.length, value);\n\n  const func = parameterizedFunction(params);\n  var evaluatedData = data.x.map((e) => func(e));\n\n  var gradientFunc = gradientFunction(\n    data,\n    evaluatedData,\n    params,\n    gradientDifference,\n    parameterizedFunction\n  );\n  var matrixFunc = matrixFunction(data, evaluatedData);\n  var inverseMatrix = inverse(\n    identity.add(gradientFunc.mmul(gradientFunc.transpose()))\n  );\n\n  params = new Matrix([params]);\n  params = params.sub(\n    inverseMatrix\n      .mmul(gradientFunc)\n      .mmul(matrixFunc)\n      .mul(gradientDifference)\n      .transpose()\n  );\n\n  return params.to1DArray();\n}\n","import rescale from 'ml-array-rescale';\r\n\r\nimport LuDecomposition from './dc/lu';\r\nimport SvDecomposition from './dc/svd';\r\nimport {\r\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\r\n  checkRange, checkIndices,\r\n  sumByRow, sumByColumn, sumAll\r\n} from './util';\r\nimport MatrixTransposeView from './views/transpose';\r\nimport MatrixRowView from './views/row';\r\nimport MatrixSubView from './views/sub';\r\nimport MatrixSelectionView from './views/selection';\r\nimport MatrixRowSelectionView from './views/rowSelection';\r\nimport MatrixColumnSelectionView from './views/columnSelection';\r\nimport MatrixColumnView from './views/column';\r\nimport MatrixFlipRowView from './views/flipRow';\r\nimport MatrixFlipColumnView from './views/flipColumn';\r\n\r\nexport default function AbstractMatrix(superCtor) {\r\n  if (superCtor === undefined) superCtor = Object;\r\n\r\n  /**\r\n   * Real matrix\r\n   * @class Matrix\r\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\r\n   * 2D array containing the data or Matrix instance to clone\r\n   * @param {number} [nColumns] - Number of columns of the new matrix\r\n   */\r\n  class Matrix extends superCtor {\r\n    static get [Symbol.species]() {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Constructs a Matrix with the chosen dimensions from a 1D array\r\n     * @param {number} newRows - Number of rows\r\n     * @param {number} newColumns - Number of columns\r\n     * @param {Array} newData - A 1D array containing data for the matrix\r\n     * @return {Matrix} - The new matrix\r\n     */\r\n    static from1DArray(newRows, newColumns, newData) {\r\n      var length = newRows * newColumns;\r\n      if (length !== newData.length) {\r\n        throw new RangeError('Data length does not match given dimensions');\r\n      }\r\n      var newMatrix = new this(newRows, newColumns);\r\n      for (var row = 0; row < newRows; row++) {\r\n        for (var column = 0; column < newColumns; column++) {\r\n          newMatrix.set(row, column, newData[row * newColumns + column]);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a row vector, a matrix with only one row.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static rowVector(newData) {\r\n      var vector = new this(1, newData.length);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(0, i, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates a column vector, a matrix with only one column.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static columnVector(newData) {\r\n      var vector = new this(newData.length, 1);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(i, 0, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static empty(rows, columns) {\r\n      return new this(rows, columns);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to zero.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static zeros(rows, columns) {\r\n      return this.empty(rows, columns).fill(0);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to one.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static ones(rows, columns) {\r\n      return this.empty(rows, columns).fill(1);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be randomly set.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static rand(rows, columns, rng) {\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          matrix.set(i, j, rng());\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be random integers.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {number} [maxValue=1000] - Maximum value\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static randInt(rows, columns, maxValue, rng) {\r\n      if (maxValue === undefined) maxValue = 1000;\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          var value = Math.floor(rng() * maxValue);\r\n          matrix.set(i, j, value);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} [columns=rows] - Number of columns\r\n         * @param {number} [value=1] - Value to fill the diagonal with\r\n         * @return {Matrix} - The new identity matrix\r\n         */\r\n    static eye(rows, columns, value) {\r\n      if (columns === undefined) columns = rows;\r\n      if (value === undefined) value = 1;\r\n      var min = Math.min(rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, value);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a diagonal matrix based on the given array.\r\n         * @param {Array} data - Array containing the data for the diagonal\r\n         * @param {number} [rows] - Number of rows (Default: data.length)\r\n         * @param {number} [columns] - Number of columns (Default: rows)\r\n         * @return {Matrix} - The new diagonal matrix\r\n         */\r\n    static diag(data, rows, columns) {\r\n      var l = data.length;\r\n      if (rows === undefined) rows = l;\r\n      if (columns === undefined) columns = rows;\r\n      var min = Math.min(l, rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, data[i]);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static min(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static max(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Check that the provided value is a Matrix and tries to instantiate one if not\r\n         * @param {*} value - The value to check\r\n         * @return {Matrix}\r\n         */\r\n    static checkMatrix(value) {\r\n      return Matrix.isMatrix(value) ? value : new this(value);\r\n    }\r\n\r\n    /**\r\n         * Returns true if the argument is a Matrix, false otherwise\r\n         * @param {*} value - The value to check\r\n         * @return {boolean}\r\n         */\r\n    static isMatrix(value) {\r\n      return (value != null) && (value.klass === 'Matrix');\r\n    }\r\n\r\n    /**\r\n         * @prop {number} size - The number of elements in the matrix.\r\n         */\r\n    get size() {\r\n      return this.rows * this.columns;\r\n    }\r\n\r\n    /**\r\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\r\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\r\n         * @return {Matrix} this\r\n         */\r\n    apply(callback) {\r\n      if (typeof callback !== 'function') {\r\n        throw new TypeError('callback must be a function');\r\n      }\r\n      var ii = this.rows;\r\n      var jj = this.columns;\r\n      for (var i = 0; i < ii; i++) {\r\n        for (var j = 0; j < jj; j++) {\r\n          callback.call(this, i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new 1D array filled row by row with the matrix values\r\n         * @return {Array}\r\n         */\r\n    to1DArray() {\r\n      var array = new Array(this.size);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          array[i * this.columns + j] = this.get(i, j);\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n         * Returns a 2D array containing a copy of the data\r\n         * @return {Array}\r\n         */\r\n    to2DArray() {\r\n      var copy = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        copy[i] = new Array(this.columns);\r\n        for (var j = 0; j < this.columns; j++) {\r\n          copy[i][j] = this.get(i, j);\r\n        }\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row\r\n         */\r\n    isRowVector() {\r\n      return this.rows === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one column\r\n         */\r\n    isColumnVector() {\r\n      return this.columns === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row or one column\r\n         */\r\n    isVector() {\r\n      return (this.rows === 1) || (this.columns === 1);\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has the same number of rows and columns\r\n         */\r\n    isSquare() {\r\n      return this.rows === this.columns;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\r\n         */\r\n    isSymmetric() {\r\n      if (this.isSquare()) {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j <= i; j++) {\r\n            if (this.get(i, j) !== this.get(j, i)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n          * @return true if the matrix is in echelon form\r\n          */\r\n    isEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isEchelonForm;\r\n    }\r\n\r\n    /**\r\n             * @return true if the matrix is in reduced echelon form\r\n             */\r\n    isReducedEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isReducedEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isReducedEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isReducedEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        for (let k = j + 1; k < this.rows; k++) {\r\n          if (this.get(i, k) !== 0) {\r\n            isReducedEchelonForm = false;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isReducedEchelonForm;\r\n    }\r\n\r\n    /**\r\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @param {number} value - The new value for the element\r\n         * @return {Matrix} this\r\n         */\r\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\r\n      throw new Error('set method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @return {number}\r\n         */\r\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\r\n      throw new Error('get method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\r\n         * rows of the matrix, and colRep times the number of columns of the matrix\r\n         * @param {number} rowRep - Number of times the rows should be repeated\r\n         * @param {number} colRep - Number of times the columns should be re\r\n         * @return {Matrix}\r\n         * @example\r\n         * var matrix = new Matrix([[1,2]]);\r\n         * matrix.repeat(2); // [[1,2],[1,2]]\r\n         */\r\n    repeat(rowRep, colRep) {\r\n      rowRep = rowRep || 1;\r\n      colRep = colRep || 1;\r\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\r\n      for (var i = 0; i < rowRep; i++) {\r\n        for (var j = 0; j < colRep; j++) {\r\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Fills the matrix with a given value. All elements will be set to this value.\r\n         * @param {number} value - New value\r\n         * @return {Matrix} this\r\n         */\r\n    fill(value) {\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, value);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Negates the matrix. All elements will be multiplied by (-1)\r\n         * @return {Matrix} this\r\n         */\r\n    neg() {\r\n      return this.mulS(-1);\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Array}\r\n         */\r\n    getRow(index) {\r\n      checkRowIndex(this, index);\r\n      var row = new Array(this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        row[i] = this.get(index, i);\r\n      }\r\n      return row;\r\n    }\r\n\r\n    /**\r\n         * Returns a new row vector from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Matrix}\r\n         */\r\n    getRowVector(index) {\r\n      return this.constructor.rowVector(this.getRow(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a row at the given index\r\n         * @param {number} index - Row index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setRow(index, array) {\r\n      checkRowIndex(this, index);\r\n      array = checkRowVector(this, array);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two rows\r\n         * @param {number} row1 - First row index\r\n         * @param {number} row2 - Second row index\r\n         * @return {Matrix} this\r\n         */\r\n    swapRows(row1, row2) {\r\n      checkRowIndex(this, row1);\r\n      checkRowIndex(this, row2);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var temp = this.get(row1, i);\r\n        this.set(row1, i, this.get(row2, i));\r\n        this.set(row2, i, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Array}\r\n         */\r\n    getColumn(index) {\r\n      checkColumnIndex(this, index);\r\n      var column = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        column[i] = this.get(i, index);\r\n      }\r\n      return column;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column vector from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Matrix}\r\n         */\r\n    getColumnVector(index) {\r\n      return this.constructor.columnVector(this.getColumn(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a column at the given index\r\n         * @param {number} index - Column index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setColumn(index, array) {\r\n      checkColumnIndex(this, index);\r\n      array = checkColumnVector(this, array);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two columns\r\n         * @param {number} column1 - First column index\r\n         * @param {number} column2 - Second column index\r\n         * @return {Matrix} this\r\n         */\r\n    swapColumns(column1, column2) {\r\n      checkColumnIndex(this, column1);\r\n      checkColumnIndex(this, column2);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var temp = this.get(i, column1);\r\n        this.set(i, column1, this.get(i, column2));\r\n        this.set(i, column2, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each row by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each column by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a row with a scalar\r\n         * @param {number} index - Row index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulRow(index, value) {\r\n      checkRowIndex(this, index);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, this.get(index, i) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a column with a scalar\r\n         * @param {number} index - Column index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumn(index, value) {\r\n      checkColumnIndex(this, index);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, this.get(i, index) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of the matrix\r\n         * @return {number}\r\n         */\r\n    max() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value\r\n         * @return {Array}\r\n         */\r\n    maxIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of the matrix\r\n         * @return {number}\r\n         */\r\n    min() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value\r\n         * @return {Array}\r\n         */\r\n    minIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    maxRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    maxRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    minRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    minRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    maxColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    maxColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    minColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    minColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns an array containing the diagonal values of the matrix\r\n         * @return {Array}\r\n         */\r\n    diag() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var diag = new Array(min);\r\n      for (var i = 0; i < min; i++) {\r\n        diag[i] = this.get(i, i);\r\n      }\r\n      return diag;\r\n    }\r\n\r\n    /**\r\n         * Returns the sum by the argument given, if no argument given,\r\n         * it returns the sum of all elements of the matrix.\r\n         * @param {string} by - sum by 'row' or 'column'.\r\n         * @return {Matrix|number}\r\n         */\r\n    sum(by) {\r\n      switch (by) {\r\n        case 'row':\r\n          return sumByRow(this);\r\n        case 'column':\r\n          return sumByColumn(this);\r\n        default:\r\n          return sumAll(this);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns the mean of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    mean() {\r\n      return this.sum() / this.size;\r\n    }\r\n\r\n    /**\r\n         * Returns the product of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    prod() {\r\n      var prod = 1;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          prod *= this.get(i, j);\r\n        }\r\n      }\r\n      return prod;\r\n    }\r\n\r\n    /**\r\n         * Returns the norm of a matrix.\r\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\r\n         * @return {number}\r\n         */\r\n    norm(type = 'frobenius') {\r\n      var result = 0;\r\n      if (type === 'max') {\r\n        return this.max();\r\n      } else if (type === 'frobenius') {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j < this.columns; j++) {\r\n            result = result + this.get(i, j) * this.get(i, j);\r\n          }\r\n        }\r\n        return Math.sqrt(result);\r\n      } else {\r\n        throw new RangeError(`unknown norm type: ${type}`);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\r\n         * @return {Matrix} this\r\n         */\r\n    cumulativeSum() {\r\n      var sum = 0;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          sum += this.get(i, j);\r\n          this.set(i, j, sum);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Computes the dot (scalar) product between the matrix and another\r\n         * @param {Matrix} vector2 vector\r\n         * @return {number}\r\n         */\r\n    dot(vector2) {\r\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\r\n      var vector1 = this.to1DArray();\r\n      if (vector1.length !== vector2.length) {\r\n        throw new RangeError('vectors do not have the same size');\r\n      }\r\n      var dot = 0;\r\n      for (var i = 0; i < vector1.length; i++) {\r\n        dot += vector1[i] * vector2[i];\r\n      }\r\n      return dot;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between this and other\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    mmul(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n      if (this.columns !== other.rows) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\r\n      }\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m, p);\r\n\r\n      var Bcolj = new Array(n);\r\n      for (var j = 0; j < p; j++) {\r\n        for (var k = 0; k < n; k++) {\r\n          Bcolj[k] = other.get(k, j);\r\n        }\r\n\r\n        for (var i = 0; i < m; i++) {\r\n          var s = 0;\r\n          for (k = 0; k < n; k++) {\r\n            s += this.get(i, k) * Bcolj[k];\r\n          }\r\n\r\n          result.set(i, j, s);\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    strassen2x2(other) {\r\n      var result = new this.constructor[Symbol.species](2, 2);\r\n      const a11 = this.get(0, 0);\r\n      const b11 = other.get(0, 0);\r\n      const a12 = this.get(0, 1);\r\n      const b12 = other.get(0, 1);\r\n      const a21 = this.get(1, 0);\r\n      const b21 = other.get(1, 0);\r\n      const a22 = this.get(1, 1);\r\n      const b22 = other.get(1, 1);\r\n\r\n      // Compute intermediate values.\r\n      const m1 = (a11 + a22) * (b11 + b22);\r\n      const m2 = (a21 + a22) * b11;\r\n      const m3 = a11 * (b12 - b22);\r\n      const m4 = a22 * (b21 - b11);\r\n      const m5 = (a11 + a12) * b22;\r\n      const m6 = (a21 - a11) * (b11 + b12);\r\n      const m7 = (a12 - a22) * (b21 + b22);\r\n\r\n      // Combine intermediate values into the output.\r\n      const c00 = m1 + m4 - m5 + m7;\r\n      const c01 = m3 + m5;\r\n      const c10 = m2 + m4;\r\n      const c11 = m1 - m2 + m3 + m6;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      return result;\r\n    }\r\n\r\n    strassen3x3(other) {\r\n      var result = new this.constructor[Symbol.species](3, 3);\r\n\r\n      const a00 = this.get(0, 0);\r\n      const a01 = this.get(0, 1);\r\n      const a02 = this.get(0, 2);\r\n      const a10 = this.get(1, 0);\r\n      const a11 = this.get(1, 1);\r\n      const a12 = this.get(1, 2);\r\n      const a20 = this.get(2, 0);\r\n      const a21 = this.get(2, 1);\r\n      const a22 = this.get(2, 2);\r\n\r\n      const b00 = other.get(0, 0);\r\n      const b01 = other.get(0, 1);\r\n      const b02 = other.get(0, 2);\r\n      const b10 = other.get(1, 0);\r\n      const b11 = other.get(1, 1);\r\n      const b12 = other.get(1, 2);\r\n      const b20 = other.get(2, 0);\r\n      const b21 = other.get(2, 1);\r\n      const b22 = other.get(2, 2);\r\n\r\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\r\n      const m2 = (a00 - a10) * (-b01 + b11);\r\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\r\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\r\n      const m5 = (a10 + a11) * (-b00 + b01);\r\n      const m6 = a00 * b00;\r\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\r\n      const m8 = (-a00 + a20) * (b02 - b12);\r\n      const m9 = (a20 + a21) * (-b00 + b02);\r\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\r\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\r\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\r\n      const m13 = (a02 - a22) * (b11 - b21);\r\n      const m14 = a02 * b20;\r\n      const m15 = (a21 + a22) * (-b20 + b21);\r\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\r\n      const m17 = (a02 - a12) * (b12 - b22);\r\n      const m18 = (a11 + a12) * (-b20 + b22);\r\n      const m19 = a01 * b10;\r\n      const m20 = a12 * b21;\r\n      const m21 = a10 * b02;\r\n      const m22 = a20 * b01;\r\n      const m23 = a22 * b22;\r\n\r\n      const c00 = m6 + m14 + m19;\r\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\r\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\r\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\r\n      const c11 = m2 + m4 + m5 + m6 + m20;\r\n      const c12 = m14 + m16 + m17 + m18 + m21;\r\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\r\n      const c21 = m12 + m13 + m14 + m15 + m22;\r\n      const c22 = m6 + m7 + m8 + m9 + m23;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(0, 2, c02);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      result.set(1, 2, c12);\r\n      result.set(2, 0, c20);\r\n      result.set(2, 1, c21);\r\n      result.set(2, 2, c22);\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\r\n         * @param {Matrix} y\r\n         * @return {Matrix}\r\n         */\r\n    mmulStrassen(y) {\r\n      var x = this.clone();\r\n      var r1 = x.rows;\r\n      var c1 = x.columns;\r\n      var r2 = y.rows;\r\n      var c2 = y.columns;\r\n      if (c1 !== r2) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\r\n      }\r\n\r\n      // Put a matrix into the top left of a matrix of zeros.\r\n      // `rows` and `cols` are the dimensions of the output matrix.\r\n      function embed(mat, rows, cols) {\r\n        var r = mat.rows;\r\n        var c = mat.columns;\r\n        if ((r === rows) && (c === cols)) {\r\n          return mat;\r\n        } else {\r\n          var resultat = Matrix.zeros(rows, cols);\r\n          resultat = resultat.setSubMatrix(mat, 0, 0);\r\n          return resultat;\r\n        }\r\n      }\r\n\r\n\r\n      // Make sure both matrices are the same size.\r\n      // This is exclusively for simplicity:\r\n      // this algorithm can be implemented with matrices of different sizes.\r\n\r\n      var r = Math.max(r1, r2);\r\n      var c = Math.max(c1, c2);\r\n      x = embed(x, r, c);\r\n      y = embed(y, r, c);\r\n\r\n      // Our recursive multiplication function.\r\n      function blockMult(a, b, rows, cols) {\r\n        // For small matrices, resort to naive multiplication.\r\n        if (rows <= 512 || cols <= 512) {\r\n          return a.mmul(b); // a is equivalent to this\r\n        }\r\n\r\n        // Apply dynamic padding.\r\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\r\n          a = embed(a, rows + 1, cols + 1);\r\n          b = embed(b, rows + 1, cols + 1);\r\n        } else if (rows % 2 === 1) {\r\n          a = embed(a, rows + 1, cols);\r\n          b = embed(b, rows + 1, cols);\r\n        } else if (cols % 2 === 1) {\r\n          a = embed(a, rows, cols + 1);\r\n          b = embed(b, rows, cols + 1);\r\n        }\r\n\r\n        var halfRows = parseInt(a.rows / 2, 10);\r\n        var halfCols = parseInt(a.columns / 2, 10);\r\n        // Subdivide input matrices.\r\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n\r\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\r\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\r\n\r\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\r\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\r\n\r\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\r\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\r\n\r\n        // Compute intermediate values.\r\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\r\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\r\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\r\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\r\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\r\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\r\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\r\n\r\n        // Combine intermediate values into the output.\r\n        var c11 = Matrix.add(m1, m4);\r\n        c11.sub(m5);\r\n        c11.add(m7);\r\n        var c12 = Matrix.add(m3, m5);\r\n        var c21 = Matrix.add(m2, m4);\r\n        var c22 = Matrix.sub(m1, m2);\r\n        c22.add(m3);\r\n        c22.add(m6);\r\n\r\n        // Crop output to the desired size (undo dynamic padding).\r\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\r\n        resultat = resultat.setSubMatrix(c11, 0, 0);\r\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\r\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\r\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\r\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\r\n      }\r\n      return blockMult(x, y, r, c);\r\n    }\r\n\r\n    /**\r\n         * Returns a row-by-row scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The scaled matrix\r\n         */\r\n    scaleRows(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var scaled = rescale(this.getRow(i), { min, max });\r\n        newMatrix.setRow(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column-by-column scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The new scaled matrix\r\n         * @example\r\n         * var matrix = new Matrix([[1,2],[-1,0]]);\r\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\r\n         */\r\n    scaleColumns(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var scaled = rescale(this.getColumn(i), {\r\n          min: min,\r\n          max: max\r\n        });\r\n        newMatrix.setColumn(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n\r\n    /**\r\n         * Returns the Kronecker product (also known as tensor product) between this and other\r\n         * See https://en.wikipedia.org/wiki/Kronecker_product\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    kroneckerProduct(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.rows;\r\n      var q = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m * p, n * q);\r\n      for (var i = 0; i < m; i++) {\r\n        for (var j = 0; j < n; j++) {\r\n          for (var k = 0; k < p; k++) {\r\n            for (var l = 0; l < q; l++) {\r\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Transposes the matrix and returns a new one containing the result\r\n         * @return {Matrix}\r\n         */\r\n    transpose() {\r\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          result.set(j, i, this.get(i, j));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Sorts the rows (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortRows(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.setRow(i, this.getRow(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Sorts the columns (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortColumns(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix\r\n         * @param {number} startRow - First row index\r\n         * @param {number} endRow - Last row index\r\n         * @param {number} startColumn - First column index\r\n         * @param {number} endColumn - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrix(startRow, endRow, startColumn, endColumn) {\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\r\n      for (var i = startRow; i <= endRow; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of row indices\r\n         * @param {Array} indices - Array containing the row indices\r\n         * @param {number} [startColumn = 0] - First column index\r\n         * @param {number} [endColumn = this.columns-1] - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixRow(indices, startColumn, endColumn) {\r\n      if (startColumn === undefined) startColumn = 0;\r\n      if (endColumn === undefined) endColumn = this.columns - 1;\r\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.rows) {\r\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of column indices\r\n         * @param {Array} indices - Array containing the column indices\r\n         * @param {number} [startRow = 0] - First row index\r\n         * @param {number} [endRow = this.rows-1] - Last row index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixColumn(indices, startRow, endRow) {\r\n      if (startRow === undefined) startRow = 0;\r\n      if (endRow === undefined) endRow = this.rows - 1;\r\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startRow; j <= endRow; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.columns) {\r\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Set a part of the matrix to the given sub-matrix\r\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\r\n         * @param {number} startRow - The index of the first row to set\r\n         * @param {number} startColumn - The index of the first column to set\r\n         * @return {Matrix}\r\n         */\r\n    setSubMatrix(matrix, startRow, startColumn) {\r\n      matrix = this.constructor.checkMatrix(matrix);\r\n      var endRow = startRow + matrix.rows - 1;\r\n      var endColumn = startColumn + matrix.columns - 1;\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      for (var i = 0; i < matrix.rows; i++) {\r\n        for (var j = 0; j < matrix.columns; j++) {\r\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Return a new matrix based on a selection of rows and columns\r\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\r\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    selection(rowIndices, columnIndices) {\r\n      var indices = checkIndices(this, rowIndices, columnIndices);\r\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\r\n      for (var i = 0; i < indices.row.length; i++) {\r\n        var rowIndex = indices.row[i];\r\n        for (var j = 0; j < indices.column.length; j++) {\r\n          var columnIndex = indices.column[j];\r\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns the trace of the matrix (sum of the diagonal elements)\r\n         * @return {number}\r\n         */\r\n    trace() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var trace = 0;\r\n      for (var i = 0; i < min; i++) {\r\n        trace += this.get(i, i);\r\n      }\r\n      return trace;\r\n    }\r\n\r\n    /*\r\n         Matrix views\r\n         */\r\n\r\n    /**\r\n         * Returns a view of the transposition of the matrix\r\n         * @return {MatrixTransposeView}\r\n         */\r\n    transposeView() {\r\n      return new MatrixTransposeView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row vector with the given index\r\n         * @param {number} row - row index of the vector\r\n         * @return {MatrixRowView}\r\n         */\r\n    rowView(row) {\r\n      checkRowIndex(this, row);\r\n      return new MatrixRowView(this, row);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column vector with the given index\r\n         * @param {number} column - column index of the vector\r\n         * @return {MatrixColumnView}\r\n         */\r\n    columnView(column) {\r\n      checkColumnIndex(this, column);\r\n      return new MatrixColumnView(this, column);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the row axis\r\n         * @return {MatrixFlipRowView}\r\n         */\r\n    flipRowView() {\r\n      return new MatrixFlipRowView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the column axis\r\n         * @return {MatrixFlipColumnView}\r\n         */\r\n    flipColumnView() {\r\n      return new MatrixFlipColumnView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of a submatrix giving the index boundaries\r\n         * @param {number} startRow - first row index of the submatrix\r\n         * @param {number} endRow - last row index of the submatrix\r\n         * @param {number} startColumn - first column index of the submatrix\r\n         * @param {number} endColumn - last column index of the submatrix\r\n         * @return {MatrixSubView}\r\n         */\r\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\r\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the cross of the row indices and the column indices\r\n         * @example\r\n         * // resulting vector is [[2], [2]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\r\n         * @param {Array<number>} rowIndices\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixSelectionView}\r\n         */\r\n    selectionView(rowIndices, columnIndices) {\r\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row indices\r\n         * @example\r\n         * // resulting vector is [[1,2,3], [1,2,3]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\r\n         * @param {Array<number>} rowIndices\r\n         * @return {MatrixRowSelectionView}\r\n         */\r\n    rowSelectionView(rowIndices) {\r\n      return new MatrixRowSelectionView(this, rowIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column indices\r\n         * @example\r\n         * // resulting vector is [[2, 2], [5, 5]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixColumnSelectionView}\r\n         */\r\n    columnSelectionView(columnIndices) {\r\n      return new MatrixColumnSelectionView(this, columnIndices);\r\n    }\r\n\r\n\r\n    /**\r\n        * Calculates and returns the determinant of a matrix as a Number\r\n        * @example\r\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\r\n        * @return {number}\r\n        */\r\n    det() {\r\n      if (this.isSquare()) {\r\n        var a, b, c, d;\r\n        if (this.columns === 2) {\r\n          // 2 x 2 matrix\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(1, 0);\r\n          d = this.get(1, 1);\r\n\r\n          return a * d - (b * c);\r\n        } else if (this.columns === 3) {\r\n          // 3 x 3 matrix\r\n          var subMatrix0, subMatrix1, subMatrix2;\r\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\r\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\r\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(0, 2);\r\n\r\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\r\n        } else {\r\n          // general purpose determinant using the LU decomposition\r\n          return new LuDecomposition(this).determinant;\r\n        }\r\n      } else {\r\n        throw Error('Determinant can only be calculated for a square matrix.');\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns inverse of a matrix if it exists or the pseudoinverse\r\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\r\n         * @return {Matrix} the (pseudo)inverted matrix.\r\n         */\r\n    pseudoInverse(threshold) {\r\n      if (threshold === undefined) threshold = Number.EPSILON;\r\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\r\n\r\n      var U = svdSolution.leftSingularVectors;\r\n      var V = svdSolution.rightSingularVectors;\r\n      var s = svdSolution.diagonal;\r\n\r\n      for (var i = 0; i < s.length; i++) {\r\n        if (Math.abs(s[i]) > threshold) {\r\n          s[i] = 1.0 / s[i];\r\n        } else {\r\n          s[i] = 0.0;\r\n        }\r\n      }\r\n\r\n      // convert list to diagonal\r\n      s = this.constructor[Symbol.species].diag(s);\r\n      return V.mmul(s.mmul(U.transposeView()));\r\n    }\r\n\r\n    /**\r\n         * Creates an exact and independent copy of the matrix\r\n         * @return {Matrix}\r\n         */\r\n    clone() {\r\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\r\n      for (var row = 0; row < this.rows; row++) {\r\n        for (var column = 0; column < this.columns; column++) {\r\n          newMatrix.set(row, column, this.get(row, column));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n  }\r\n\r\n  Matrix.prototype.klass = 'Matrix';\r\n\r\n  function compareNumbers(a, b) {\r\n    return a - b;\r\n  }\r\n\r\n  /*\r\n     Synonyms\r\n     */\r\n\r\n  Matrix.random = Matrix.rand;\r\n  Matrix.diagonal = Matrix.diag;\r\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\r\n  Matrix.identity = Matrix.eye;\r\n  Matrix.prototype.negate = Matrix.prototype.neg;\r\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\r\n  Matrix.prototype.determinant = Matrix.prototype.det;\r\n\r\n  /*\r\n     Add dynamically instance and static methods for mathematical operations\r\n     */\r\n\r\n  var inplaceOperator = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var inplaceOperatorScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% value);\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceOperatorMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticOperator = `\r\n(function %name%(matrix, value) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(value);\r\n})\r\n`;\r\n\r\n  var inplaceMethod = `\r\n(function %name%() {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethod = `\r\n(function %name%(matrix) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%();\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithArgs = `\r\n(function %name%(%args%) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), %args%));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethodWithArgs = `\r\n(function %name%(matrix, %args%) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(%args%);\r\n})\r\n`;\r\n\r\n\r\n  var inplaceMethodWithOneArgScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), value));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n  var inplaceMethodWithOneArgMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithOneArg = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var staticMethodWithOneArg = staticMethodWithArgs;\r\n\r\n  var operators = [\r\n    // Arithmetic operators\r\n    ['+', 'add'],\r\n    ['-', 'sub', 'subtract'],\r\n    ['*', 'mul', 'multiply'],\r\n    ['/', 'div', 'divide'],\r\n    ['%', 'mod', 'modulus'],\r\n    // Bitwise operators\r\n    ['&', 'and'],\r\n    ['|', 'or'],\r\n    ['^', 'xor'],\r\n    ['<<', 'leftShift'],\r\n    ['>>', 'signPropagatingRightShift'],\r\n    ['>>>', 'rightShift', 'zeroFillRightShift']\r\n  ];\r\n\r\n  var i;\r\n  var eval2 = eval; // eslint-disable-line no-eval\r\n  for (var operator of operators) {\r\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\r\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\r\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\r\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\r\n    for (i = 1; i < operator.length; i++) {\r\n      Matrix.prototype[operator[i]] = inplaceOp;\r\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\r\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\r\n      Matrix[operator[i]] = staticOp;\r\n    }\r\n  }\r\n\r\n  var methods = [['~', 'not']];\r\n\r\n  [\r\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\r\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\r\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n  ].forEach(function (mathMethod) {\r\n    methods.push([`Math.${mathMethod}`, mathMethod]);\r\n  });\r\n\r\n  for (var method of methods) {\r\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\r\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\r\n    for (i = 1; i < method.length; i++) {\r\n      Matrix.prototype[method[i]] = inplaceMeth;\r\n      Matrix[method[i]] = staticMeth;\r\n    }\r\n  }\r\n\r\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\r\n\r\n  for (var methodWithArg of methodsWithArgs) {\r\n    var args = 'arg0';\r\n    for (i = 1; i < methodWithArg[1]; i++) {\r\n      args += `, arg${i}`;\r\n    }\r\n    if (methodWithArg[1] !== 1) {\r\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\r\n        name: methodWithArg[2],\r\n        method: methodWithArg[0],\r\n        args: args\r\n      }));\r\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\r\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\r\n      }\r\n    } else {\r\n      var tmplVar = {\r\n        name: methodWithArg[2],\r\n        args: args,\r\n        method: methodWithArg[0]\r\n      };\r\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\r\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\r\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\r\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\r\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\r\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\r\n        Matrix[methodWithArg[i]] = staticMethod2;\r\n      }\r\n    }\r\n  }\r\n\r\n  function fillTemplateFunction(template, values) {\r\n    for (var value in values) {\r\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\r\n    }\r\n    return template;\r\n  }\r\n\r\n  return Matrix;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class CholeskyDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\r\n * @param {Matrix} value\r\n */\r\nexport default class CholeskyDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n    if (!value.isSymmetric()) {\r\n      throw new Error('Matrix is not symmetric');\r\n    }\r\n\r\n    var a = value;\r\n    var dimension = a.rows;\r\n    var l = new Matrix(dimension, dimension);\r\n    var positiveDefinite = true;\r\n    var i, j, k;\r\n\r\n    for (j = 0; j < dimension; j++) {\r\n      var Lrowj = l[j];\r\n      var d = 0;\r\n      for (k = 0; k < j; k++) {\r\n        var Lrowk = l[k];\r\n        var s = 0;\r\n        for (i = 0; i < k; i++) {\r\n          s += Lrowk[i] * Lrowj[i];\r\n        }\r\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\r\n        d = d + s * s;\r\n      }\r\n\r\n      d = a.get(j, j) - d;\r\n\r\n      positiveDefinite &= d > 0;\r\n      l[j][j] = Math.sqrt(Math.max(d, 0));\r\n      for (k = j + 1; k < dimension; k++) {\r\n        l[j][k] = 0;\r\n      }\r\n    }\r\n\r\n    if (!positiveDefinite) {\r\n      throw new Error('Matrix is not positive definite');\r\n    }\r\n\r\n    this.L = l;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var l = this.L;\r\n    var dimension = l.rows;\r\n\r\n    if (value.rows !== dimension) {\r\n      throw new Error('Matrix dimensions do not match');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var B = value.clone();\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < dimension; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = 0; i < k; i++) {\r\n          B[k][j] -= B[i][j] * l[k][i];\r\n        }\r\n        B[k][j] /= l[k][k];\r\n      }\r\n    }\r\n\r\n    for (k = dimension - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = k + 1; i < dimension; i++) {\r\n          B[k][j] -= B[i][j] * l[i][k];\r\n        }\r\n        B[k][j] /= l[k][k];\r\n      }\r\n    }\r\n\r\n    return B;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    return this.L;\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class EigenvalueDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\r\n * @param {Matrix} matrix\r\n * @param {object} [options]\r\n * @param {boolean} [options.assumeSymmetric=false]\r\n */\r\nexport default class EigenvalueDecomposition {\r\n  constructor(matrix, options = {}) {\r\n    const { assumeSymmetric = false } = options;\r\n\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n    if (!matrix.isSquare()) {\r\n      throw new Error('Matrix is not a square matrix');\r\n    }\r\n\r\n    var n = matrix.columns;\r\n    var V = getFilled2DArray(n, n, 0);\r\n    var d = new Array(n);\r\n    var e = new Array(n);\r\n    var value = matrix;\r\n    var i, j;\r\n\r\n    var isSymmetric = false;\r\n    if (assumeSymmetric) {\r\n      isSymmetric = true;\r\n    } else {\r\n      isSymmetric = matrix.isSymmetric();\r\n    }\r\n\r\n    if (isSymmetric) {\r\n      for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n          V[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      tred2(n, e, d, V);\r\n      tql2(n, e, d, V);\r\n    } else {\r\n      var H = getFilled2DArray(n, n, 0);\r\n      var ort = new Array(n);\r\n      for (j = 0; j < n; j++) {\r\n        for (i = 0; i < n; i++) {\r\n          H[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      orthes(n, H, ort, V);\r\n      hqr2(n, e, d, V, H);\r\n    }\r\n\r\n    this.n = n;\r\n    this.e = e;\r\n    this.d = d;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get realEigenvalues() {\r\n    return this.d;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get imaginaryEigenvalues() {\r\n    return this.e;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get eigenvectorMatrix() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    var n = this.n;\r\n    var e = this.e;\r\n    var d = this.d;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        X[i][j] = 0;\r\n      }\r\n      X[i][i] = d[i];\r\n      if (e[i] > 0) {\r\n        X[i][i + 1] = e[i];\r\n      } else if (e[i] < 0) {\r\n        X[i][i - 1] = e[i];\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n\r\nfunction tred2(n, e, d, V) {\r\n  var f, g, h, i, j, k, hh, scale;\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n  }\r\n\r\n  for (i = n - 1; i > 0; i--) {\r\n    scale = 0;\r\n    h = 0;\r\n    for (k = 0; k < i; k++) {\r\n      scale = scale + Math.abs(d[k]);\r\n    }\r\n\r\n    if (scale === 0) {\r\n      e[i] = d[i - 1];\r\n      for (j = 0; j < i; j++) {\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n        V[j][i] = 0;\r\n      }\r\n    } else {\r\n      for (k = 0; k < i; k++) {\r\n        d[k] /= scale;\r\n        h += d[k] * d[k];\r\n      }\r\n\r\n      f = d[i - 1];\r\n      g = Math.sqrt(h);\r\n      if (f > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      e[i] = scale * g;\r\n      h = h - f * g;\r\n      d[i - 1] = f - g;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] = 0;\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        V[j][i] = f;\r\n        g = e[j] + V[j][j] * f;\r\n        for (k = j + 1; k <= i - 1; k++) {\r\n          g += V[k][j] * d[k];\r\n          e[k] += V[k][j] * f;\r\n        }\r\n        e[j] = g;\r\n      }\r\n\r\n      f = 0;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] /= h;\r\n        f += e[j] * d[j];\r\n      }\r\n\r\n      hh = f / (h + h);\r\n      for (j = 0; j < i; j++) {\r\n        e[j] -= hh * d[j];\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        g = e[j];\r\n        for (k = j; k <= i - 1; k++) {\r\n          V[k][j] -= f * e[k] + g * d[k];\r\n        }\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n      }\r\n    }\r\n    d[i] = h;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    V[n - 1][i] = V[i][i];\r\n    V[i][i] = 1;\r\n    h = d[i + 1];\r\n    if (h !== 0) {\r\n      for (k = 0; k <= i; k++) {\r\n        d[k] = V[k][i + 1] / h;\r\n      }\r\n\r\n      for (j = 0; j <= i; j++) {\r\n        g = 0;\r\n        for (k = 0; k <= i; k++) {\r\n          g += V[k][i + 1] * V[k][j];\r\n        }\r\n        for (k = 0; k <= i; k++) {\r\n          V[k][j] -= g * d[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (k = 0; k <= i; k++) {\r\n      V[k][i + 1] = 0;\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n    V[n - 1][j] = 0;\r\n  }\r\n\r\n  V[n - 1][n - 1] = 1;\r\n  e[0] = 0;\r\n}\r\n\r\nfunction tql2(n, e, d, V) {\r\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\r\n\r\n  for (i = 1; i < n; i++) {\r\n    e[i - 1] = e[i];\r\n  }\r\n\r\n  e[n - 1] = 0;\r\n\r\n  var f = 0;\r\n  var tst1 = 0;\r\n  var eps = Number.EPSILON;\r\n\r\n  for (l = 0; l < n; l++) {\r\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\r\n    m = l;\r\n    while (m < n) {\r\n      if (Math.abs(e[m]) <= eps * tst1) {\r\n        break;\r\n      }\r\n      m++;\r\n    }\r\n\r\n    if (m > l) {\r\n      iter = 0;\r\n      do {\r\n        iter = iter + 1;\r\n\r\n        g = d[l];\r\n        p = (d[l + 1] - g) / (2 * e[l]);\r\n        r = hypotenuse(p, 1);\r\n        if (p < 0) {\r\n          r = -r;\r\n        }\r\n\r\n        d[l] = e[l] / (p + r);\r\n        d[l + 1] = e[l] * (p + r);\r\n        dl1 = d[l + 1];\r\n        h = g - d[l];\r\n        for (i = l + 2; i < n; i++) {\r\n          d[i] -= h;\r\n        }\r\n\r\n        f = f + h;\r\n\r\n        p = d[m];\r\n        c = 1;\r\n        c2 = c;\r\n        c3 = c;\r\n        el1 = e[l + 1];\r\n        s = 0;\r\n        s2 = 0;\r\n        for (i = m - 1; i >= l; i--) {\r\n          c3 = c2;\r\n          c2 = c;\r\n          s2 = s;\r\n          g = c * e[i];\r\n          h = c * p;\r\n          r = hypotenuse(p, e[i]);\r\n          e[i + 1] = s * r;\r\n          s = e[i] / r;\r\n          c = p / r;\r\n          p = c * d[i] - s * g;\r\n          d[i + 1] = h + s * (c * g + s * d[i]);\r\n\r\n          for (k = 0; k < n; k++) {\r\n            h = V[k][i + 1];\r\n            V[k][i + 1] = s * V[k][i] + c * h;\r\n            V[k][i] = c * V[k][i] - s * h;\r\n          }\r\n        }\r\n\r\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\r\n        e[l] = s * p;\r\n        d[l] = c * p;\r\n      } while (Math.abs(e[l]) > eps * tst1);\r\n    }\r\n    d[l] = d[l] + f;\r\n    e[l] = 0;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    k = i;\r\n    p = d[i];\r\n    for (j = i + 1; j < n; j++) {\r\n      if (d[j] < p) {\r\n        k = j;\r\n        p = d[j];\r\n      }\r\n    }\r\n\r\n    if (k !== i) {\r\n      d[k] = d[i];\r\n      d[i] = p;\r\n      for (j = 0; j < n; j++) {\r\n        p = V[j][i];\r\n        V[j][i] = V[j][k];\r\n        V[j][k] = p;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction orthes(n, H, ort, V) {\r\n  var low = 0;\r\n  var high = n - 1;\r\n  var f, g, h, i, j, m;\r\n  var scale;\r\n\r\n  for (m = low + 1; m <= high - 1; m++) {\r\n    scale = 0;\r\n    for (i = m; i <= high; i++) {\r\n      scale = scale + Math.abs(H[i][m - 1]);\r\n    }\r\n\r\n    if (scale !== 0) {\r\n      h = 0;\r\n      for (i = high; i >= m; i--) {\r\n        ort[i] = H[i][m - 1] / scale;\r\n        h += ort[i] * ort[i];\r\n      }\r\n\r\n      g = Math.sqrt(h);\r\n      if (ort[m] > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      h = h - ort[m] * g;\r\n      ort[m] = ort[m] - g;\r\n\r\n      for (j = m; j < n; j++) {\r\n        f = 0;\r\n        for (i = high; i >= m; i--) {\r\n          f += ort[i] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (i = m; i <= high; i++) {\r\n          H[i][j] -= f * ort[i];\r\n        }\r\n      }\r\n\r\n      for (i = 0; i <= high; i++) {\r\n        f = 0;\r\n        for (j = high; j >= m; j--) {\r\n          f += ort[j] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (j = m; j <= high; j++) {\r\n          H[i][j] -= f * ort[j];\r\n        }\r\n      }\r\n\r\n      ort[m] = scale * ort[m];\r\n      H[m][m - 1] = scale * g;\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (j = 0; j < n; j++) {\r\n      V[i][j] = i === j ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  for (m = high - 1; m >= low + 1; m--) {\r\n    if (H[m][m - 1] !== 0) {\r\n      for (i = m + 1; i <= high; i++) {\r\n        ort[i] = H[i][m - 1];\r\n      }\r\n\r\n      for (j = m; j <= high; j++) {\r\n        g = 0;\r\n        for (i = m; i <= high; i++) {\r\n          g += ort[i] * V[i][j];\r\n        }\r\n\r\n        g = g / ort[m] / H[m][m - 1];\r\n        for (i = m; i <= high; i++) {\r\n          V[i][j] += g * ort[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hqr2(nn, e, d, V, H) {\r\n  var n = nn - 1;\r\n  var low = 0;\r\n  var high = nn - 1;\r\n  var eps = Number.EPSILON;\r\n  var exshift = 0;\r\n  var norm = 0;\r\n  var p = 0;\r\n  var q = 0;\r\n  var r = 0;\r\n  var s = 0;\r\n  var z = 0;\r\n  var iter = 0;\r\n  var i, j, k, l, m, t, w, x, y;\r\n  var ra, sa, vr, vi;\r\n  var notlast, cdivres;\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      d[i] = H[i][i];\r\n      e[i] = 0;\r\n    }\r\n\r\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\r\n      norm = norm + Math.abs(H[i][j]);\r\n    }\r\n  }\r\n\r\n  while (n >= low) {\r\n    l = n;\r\n    while (l > low) {\r\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\r\n      if (s === 0) {\r\n        s = norm;\r\n      }\r\n      if (Math.abs(H[l][l - 1]) < eps * s) {\r\n        break;\r\n      }\r\n      l--;\r\n    }\r\n\r\n    if (l === n) {\r\n      H[n][n] = H[n][n] + exshift;\r\n      d[n] = H[n][n];\r\n      e[n] = 0;\r\n      n--;\r\n      iter = 0;\r\n    } else if (l === n - 1) {\r\n      w = H[n][n - 1] * H[n - 1][n];\r\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\r\n      q = p * p + w;\r\n      z = Math.sqrt(Math.abs(q));\r\n      H[n][n] = H[n][n] + exshift;\r\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\r\n      x = H[n][n];\r\n\r\n      if (q >= 0) {\r\n        z = p >= 0 ? p + z : p - z;\r\n        d[n - 1] = x + z;\r\n        d[n] = d[n - 1];\r\n        if (z !== 0) {\r\n          d[n] = x - w / z;\r\n        }\r\n        e[n - 1] = 0;\r\n        e[n] = 0;\r\n        x = H[n][n - 1];\r\n        s = Math.abs(x) + Math.abs(z);\r\n        p = x / s;\r\n        q = z / s;\r\n        r = Math.sqrt(p * p + q * q);\r\n        p = p / r;\r\n        q = q / r;\r\n\r\n        for (j = n - 1; j < nn; j++) {\r\n          z = H[n - 1][j];\r\n          H[n - 1][j] = q * z + p * H[n][j];\r\n          H[n][j] = q * H[n][j] - p * z;\r\n        }\r\n\r\n        for (i = 0; i <= n; i++) {\r\n          z = H[i][n - 1];\r\n          H[i][n - 1] = q * z + p * H[i][n];\r\n          H[i][n] = q * H[i][n] - p * z;\r\n        }\r\n\r\n        for (i = low; i <= high; i++) {\r\n          z = V[i][n - 1];\r\n          V[i][n - 1] = q * z + p * V[i][n];\r\n          V[i][n] = q * V[i][n] - p * z;\r\n        }\r\n      } else {\r\n        d[n - 1] = x + p;\r\n        d[n] = x + p;\r\n        e[n - 1] = z;\r\n        e[n] = -z;\r\n      }\r\n\r\n      n = n - 2;\r\n      iter = 0;\r\n    } else {\r\n      x = H[n][n];\r\n      y = 0;\r\n      w = 0;\r\n      if (l < n) {\r\n        y = H[n - 1][n - 1];\r\n        w = H[n][n - 1] * H[n - 1][n];\r\n      }\r\n\r\n      if (iter === 10) {\r\n        exshift += x;\r\n        for (i = low; i <= n; i++) {\r\n          H[i][i] -= x;\r\n        }\r\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\r\n        x = y = 0.75 * s;\r\n        w = -0.4375 * s * s;\r\n      }\r\n\r\n      if (iter === 30) {\r\n        s = (y - x) / 2;\r\n        s = s * s + w;\r\n        if (s > 0) {\r\n          s = Math.sqrt(s);\r\n          if (y < x) {\r\n            s = -s;\r\n          }\r\n          s = x - w / ((y - x) / 2 + s);\r\n          for (i = low; i <= n; i++) {\r\n            H[i][i] -= s;\r\n          }\r\n          exshift += s;\r\n          x = y = w = 0.964;\r\n        }\r\n      }\r\n\r\n      iter = iter + 1;\r\n\r\n      m = n - 2;\r\n      while (m >= l) {\r\n        z = H[m][m];\r\n        r = x - z;\r\n        s = y - z;\r\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\r\n        q = H[m + 1][m + 1] - z - r - s;\r\n        r = H[m + 2][m + 1];\r\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n        p = p / s;\r\n        q = q / s;\r\n        r = r / s;\r\n        if (m === l) {\r\n          break;\r\n        }\r\n        if (\r\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\r\n          eps *\r\n            (Math.abs(p) *\r\n              (Math.abs(H[m - 1][m - 1]) +\r\n                Math.abs(z) +\r\n                Math.abs(H[m + 1][m + 1])))\r\n        ) {\r\n          break;\r\n        }\r\n        m--;\r\n      }\r\n\r\n      for (i = m + 2; i <= n; i++) {\r\n        H[i][i - 2] = 0;\r\n        if (i > m + 2) {\r\n          H[i][i - 3] = 0;\r\n        }\r\n      }\r\n\r\n      for (k = m; k <= n - 1; k++) {\r\n        notlast = k !== n - 1;\r\n        if (k !== m) {\r\n          p = H[k][k - 1];\r\n          q = H[k + 1][k - 1];\r\n          r = notlast ? H[k + 2][k - 1] : 0;\r\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n          if (x !== 0) {\r\n            p = p / x;\r\n            q = q / x;\r\n            r = r / x;\r\n          }\r\n        }\r\n\r\n        if (x === 0) {\r\n          break;\r\n        }\r\n\r\n        s = Math.sqrt(p * p + q * q + r * r);\r\n        if (p < 0) {\r\n          s = -s;\r\n        }\r\n\r\n        if (s !== 0) {\r\n          if (k !== m) {\r\n            H[k][k - 1] = -s * x;\r\n          } else if (l !== m) {\r\n            H[k][k - 1] = -H[k][k - 1];\r\n          }\r\n\r\n          p = p + s;\r\n          x = p / s;\r\n          y = q / s;\r\n          z = r / s;\r\n          q = q / p;\r\n          r = r / p;\r\n\r\n          for (j = k; j < nn; j++) {\r\n            p = H[k][j] + q * H[k + 1][j];\r\n            if (notlast) {\r\n              p = p + r * H[k + 2][j];\r\n              H[k + 2][j] = H[k + 2][j] - p * z;\r\n            }\r\n\r\n            H[k][j] = H[k][j] - p * x;\r\n            H[k + 1][j] = H[k + 1][j] - p * y;\r\n          }\r\n\r\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\r\n            p = x * H[i][k] + y * H[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * H[i][k + 2];\r\n              H[i][k + 2] = H[i][k + 2] - p * r;\r\n            }\r\n\r\n            H[i][k] = H[i][k] - p;\r\n            H[i][k + 1] = H[i][k + 1] - p * q;\r\n          }\r\n\r\n          for (i = low; i <= high; i++) {\r\n            p = x * V[i][k] + y * V[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * V[i][k + 2];\r\n              V[i][k + 2] = V[i][k + 2] - p * r;\r\n            }\r\n\r\n            V[i][k] = V[i][k] - p;\r\n            V[i][k + 1] = V[i][k + 1] - p * q;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (norm === 0) {\r\n    return;\r\n  }\r\n\r\n  for (n = nn - 1; n >= 0; n--) {\r\n    p = d[n];\r\n    q = e[n];\r\n\r\n    if (q === 0) {\r\n      l = n;\r\n      H[n][n] = 1;\r\n      for (i = n - 1; i >= 0; i--) {\r\n        w = H[i][i] - p;\r\n        r = 0;\r\n        for (j = l; j <= n; j++) {\r\n          r = r + H[i][j] * H[j][n];\r\n        }\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          s = r;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\r\n            t = (x * s - z * r) / q;\r\n            H[i][n] = t;\r\n            H[i + 1][n] =\r\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\r\n          }\r\n\r\n          t = Math.abs(H[i][n]);\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (q < 0) {\r\n      l = n - 1;\r\n\r\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\r\n        H[n - 1][n - 1] = q / H[n][n - 1];\r\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\r\n      } else {\r\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\r\n        H[n - 1][n - 1] = cdivres[0];\r\n        H[n - 1][n] = cdivres[1];\r\n      }\r\n\r\n      H[n][n - 1] = 0;\r\n      H[n][n] = 1;\r\n      for (i = n - 2; i >= 0; i--) {\r\n        ra = 0;\r\n        sa = 0;\r\n        for (j = l; j <= n; j++) {\r\n          ra = ra + H[i][j] * H[j][n - 1];\r\n          sa = sa + H[i][j] * H[j][n];\r\n        }\r\n\r\n        w = H[i][i] - p;\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          r = ra;\r\n          s = sa;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            cdivres = cdiv(-ra, -sa, w, q);\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\r\n            vi = (d[i] - p) * 2 * q;\r\n            if (vr === 0 && vi === 0) {\r\n              vr =\r\n                eps *\r\n                norm *\r\n                (Math.abs(w) +\r\n                  Math.abs(q) +\r\n                  Math.abs(x) +\r\n                  Math.abs(y) +\r\n                  Math.abs(z));\r\n            }\r\n            cdivres = cdiv(\r\n              x * r - z * ra + q * sa,\r\n              x * s - z * sa - q * ra,\r\n              vr,\r\n              vi\r\n            );\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\r\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\r\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\r\n            } else {\r\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\r\n              H[i + 1][n - 1] = cdivres[0];\r\n              H[i + 1][n] = cdivres[1];\r\n            }\r\n          }\r\n\r\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n - 1] = H[j][n - 1] / t;\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      for (j = i; j < nn; j++) {\r\n        V[i][j] = H[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (j = nn - 1; j >= low; j--) {\r\n    for (i = low; i <= high; i++) {\r\n      z = 0;\r\n      for (k = low; k <= Math.min(j, high); k++) {\r\n        z = z + V[i][k] * H[k][j];\r\n      }\r\n      V[i][j] = z;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cdiv(xr, xi, yr, yi) {\r\n  var r, d;\r\n  if (Math.abs(yr) > Math.abs(yi)) {\r\n    r = yi / yr;\r\n    d = yr + r * yi;\r\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\r\n  } else {\r\n    r = yr / yi;\r\n    d = yi + r * yr;\r\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class LuDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\r\n * @param {Matrix} matrix\r\n */\r\nexport default class LuDecomposition {\r\n  constructor(matrix) {\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n\r\n    var lu = matrix.clone();\r\n    var rows = lu.rows;\r\n    var columns = lu.columns;\r\n    var pivotVector = new Array(rows);\r\n    var pivotSign = 1;\r\n    var i, j, k, p, s, t, v;\r\n    var LUcolj, kmax;\r\n\r\n    for (i = 0; i < rows; i++) {\r\n      pivotVector[i] = i;\r\n    }\r\n\r\n    LUcolj = new Array(rows);\r\n\r\n    for (j = 0; j < columns; j++) {\r\n      for (i = 0; i < rows; i++) {\r\n        LUcolj[i] = lu.get(i, j);\r\n      }\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        kmax = Math.min(i, j);\r\n        s = 0;\r\n        for (k = 0; k < kmax; k++) {\r\n          s += lu.get(i, k) * LUcolj[k];\r\n        }\r\n        LUcolj[i] -= s;\r\n        lu.set(i, j, LUcolj[i]);\r\n      }\r\n\r\n      p = j;\r\n      for (i = j + 1; i < rows; i++) {\r\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\r\n          p = i;\r\n        }\r\n      }\r\n\r\n      if (p !== j) {\r\n        for (k = 0; k < columns; k++) {\r\n          t = lu.get(p, k);\r\n          lu.set(p, k, lu.get(j, k));\r\n          lu.set(j, k, t);\r\n        }\r\n\r\n        v = pivotVector[p];\r\n        pivotVector[p] = pivotVector[j];\r\n        pivotVector[j] = v;\r\n\r\n        pivotSign = -pivotSign;\r\n      }\r\n\r\n      if (j < rows && lu.get(j, j) !== 0) {\r\n        for (i = j + 1; i < rows; i++) {\r\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.LU = lu;\r\n    this.pivotVector = pivotVector;\r\n    this.pivotSign = pivotSign;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isSingular() {\r\n    var data = this.LU;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      if (data[j][j] === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var lu = this.LU;\r\n    var rows = lu.rows;\r\n\r\n    if (rows !== value.rows) {\r\n      throw new Error('Invalid matrix dimensions');\r\n    }\r\n    if (this.isSingular()) {\r\n      throw new Error('LU matrix is singular');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\r\n    var columns = lu.columns;\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < columns; k++) {\r\n      for (i = k + 1; i < columns; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= lu[k][k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get determinant() {\r\n    var data = this.LU;\r\n    if (!data.isSquare()) {\r\n      throw new Error('Matrix must be square');\r\n    }\r\n    var determinant = this.pivotSign;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      determinant *= data[j][j];\r\n    }\r\n    return determinant;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i > j) {\r\n          X[i][j] = data[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = 1;\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i <= j) {\r\n          X[i][j] = data[i][j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get pivotPermutationVector() {\r\n    return this.pivotVector.slice();\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse } from './util';\r\n\r\n/**\r\n * @class QrDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\r\n * @param {Matrix} value\r\n */\r\nexport default class QrDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var qr = value.clone();\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n    var rdiag = new Array(n);\r\n    var i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      var nrm = 0;\r\n      for (i = k; i < m; i++) {\r\n        nrm = hypotenuse(nrm, qr.get(i, k));\r\n      }\r\n      if (nrm !== 0) {\r\n        if (qr.get(k, k) < 0) {\r\n          nrm = -nrm;\r\n        }\r\n        for (i = k; i < m; i++) {\r\n          qr.set(i, k, qr.get(i, k) / nrm);\r\n        }\r\n        qr.set(k, k, qr.get(k, k) + 1);\r\n        for (j = k + 1; j < n; j++) {\r\n          s = 0;\r\n          for (i = k; i < m; i++) {\r\n            s += qr.get(i, k) * qr.get(i, j);\r\n          }\r\n          s = -s / qr.get(k, k);\r\n          for (i = k; i < m; i++) {\r\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\r\n          }\r\n        }\r\n      }\r\n      rdiag[k] = -nrm;\r\n    }\r\n\r\n    this.QR = qr;\r\n    this.Rdiag = rdiag;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var qr = QrDecomposition(A);\r\n   * var x = qr.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var qr = this.QR;\r\n    var m = qr.rows;\r\n\r\n    if (value.rows !== m) {\r\n      throw new Error('Matrix row dimensions must agree');\r\n    }\r\n    if (!this.isFullRank()) {\r\n      throw new Error('Matrix is rank deficient');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.clone();\r\n    var n = qr.columns;\r\n    var i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        s = 0;\r\n        for (i = k; i < m; i++) {\r\n          s += qr[i][k] * X[i][j];\r\n        }\r\n        s = -s / qr[k][k];\r\n        for (i = k; i < m; i++) {\r\n          X[i][j] += s * qr[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = n - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= this.Rdiag[k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * qr[i][k];\r\n        }\r\n      }\r\n    }\r\n\r\n    return X.subMatrix(0, n - 1, 0, count - 1);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isFullRank() {\r\n    var columns = this.QR.columns;\r\n    for (var i = 0; i < columns; i++) {\r\n      if (this.Rdiag[i] === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var qr = this.QR;\r\n    var n = qr.columns;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        if (i < j) {\r\n          X[i][j] = qr[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = this.Rdiag[i];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get orthogonalMatrix() {\r\n    var qr = this.QR;\r\n    var rows = qr.rows;\r\n    var columns = qr.columns;\r\n    var X = new Matrix(rows, columns);\r\n    var i, j, k, s;\r\n\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (i = 0; i < rows; i++) {\r\n        X[i][k] = 0;\r\n      }\r\n      X[k][k] = 1;\r\n      for (j = k; j < columns; j++) {\r\n        if (qr[k][k] !== 0) {\r\n          s = 0;\r\n          for (i = k; i < rows; i++) {\r\n            s += qr[i][k] * X[i][j];\r\n          }\r\n\r\n          s = -s / qr[k][k];\r\n\r\n          for (i = k; i < rows; i++) {\r\n            X[i][j] += s * qr[i][k];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class SingularValueDecomposition\r\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\r\n * @param {Matrix} value\r\n * @param {object} [options]\r\n * @param {boolean} [options.computeLeftSingularVectors=true]\r\n * @param {boolean} [options.computeRightSingularVectors=true]\r\n * @param {boolean} [options.autoTranspose=false]\r\n */\r\nexport default class SingularValueDecomposition {\r\n  constructor(value, options = {}) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n\r\n    const {\r\n      computeLeftSingularVectors = true,\r\n      computeRightSingularVectors = true,\r\n      autoTranspose = false\r\n    } = options;\r\n\r\n    var wantu = Boolean(computeLeftSingularVectors);\r\n    var wantv = Boolean(computeRightSingularVectors);\r\n\r\n    var swapped = false;\r\n    var a;\r\n    if (m < n) {\r\n      if (!autoTranspose) {\r\n        a = value.clone();\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\r\n        );\r\n      } else {\r\n        a = value.transpose();\r\n        m = a.rows;\r\n        n = a.columns;\r\n        swapped = true;\r\n        var aux = wantu;\r\n        wantu = wantv;\r\n        wantv = aux;\r\n      }\r\n    } else {\r\n      a = value.clone();\r\n    }\r\n\r\n    var nu = Math.min(m, n);\r\n    var ni = Math.min(m + 1, n);\r\n    var s = new Array(ni);\r\n    var U = getFilled2DArray(m, nu, 0);\r\n    var V = getFilled2DArray(n, n, 0);\r\n\r\n    var e = new Array(n);\r\n    var work = new Array(m);\r\n\r\n    var si = new Array(ni);\r\n    for (let i = 0; i < ni; i++) si[i] = i;\r\n\r\n    var nct = Math.min(m - 1, n);\r\n    var nrt = Math.max(0, Math.min(n - 2, m));\r\n    var mrc = Math.max(nct, nrt);\r\n\r\n    for (let k = 0; k < mrc; k++) {\r\n      if (k < nct) {\r\n        s[k] = 0;\r\n        for (let i = k; i < m; i++) {\r\n          s[k] = hypotenuse(s[k], a[i][k]);\r\n        }\r\n        if (s[k] !== 0) {\r\n          if (a[k][k] < 0) {\r\n            s[k] = -s[k];\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            a[i][k] /= s[k];\r\n          }\r\n          a[k][k] += 1;\r\n        }\r\n        s[k] = -s[k];\r\n      }\r\n\r\n      for (let j = k + 1; j < n; j++) {\r\n        if (k < nct && s[k] !== 0) {\r\n          let t = 0;\r\n          for (let i = k; i < m; i++) {\r\n            t += a[i][k] * a[i][j];\r\n          }\r\n          t = -t / a[k][k];\r\n          for (let i = k; i < m; i++) {\r\n            a[i][j] += t * a[i][k];\r\n          }\r\n        }\r\n        e[j] = a[k][j];\r\n      }\r\n\r\n      if (wantu && k < nct) {\r\n        for (let i = k; i < m; i++) {\r\n          U[i][k] = a[i][k];\r\n        }\r\n      }\r\n\r\n      if (k < nrt) {\r\n        e[k] = 0;\r\n        for (let i = k + 1; i < n; i++) {\r\n          e[k] = hypotenuse(e[k], e[i]);\r\n        }\r\n        if (e[k] !== 0) {\r\n          if (e[k + 1] < 0) {\r\n            e[k] = 0 - e[k];\r\n          }\r\n          for (let i = k + 1; i < n; i++) {\r\n            e[i] /= e[k];\r\n          }\r\n          e[k + 1] += 1;\r\n        }\r\n        e[k] = -e[k];\r\n        if (k + 1 < m && e[k] !== 0) {\r\n          for (let i = k + 1; i < m; i++) {\r\n            work[i] = 0;\r\n          }\r\n          for (let i = k + 1; i < m; i++) {\r\n            for (let j = k + 1; j < n; j++) {\r\n              work[i] += e[j] * a[i][j];\r\n            }\r\n          }\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = -e[j] / e[k + 1];\r\n            for (let i = k + 1; i < m; i++) {\r\n              a[i][j] += t * work[i];\r\n            }\r\n          }\r\n        }\r\n        if (wantv) {\r\n          for (let i = k + 1; i < n; i++) {\r\n            V[i][k] = e[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let p = Math.min(n, m + 1);\r\n    if (nct < n) {\r\n      s[nct] = a[nct][nct];\r\n    }\r\n    if (m < p) {\r\n      s[p - 1] = 0;\r\n    }\r\n    if (nrt + 1 < p) {\r\n      e[nrt] = a[nrt][p - 1];\r\n    }\r\n    e[p - 1] = 0;\r\n\r\n    if (wantu) {\r\n      for (let j = nct; j < nu; j++) {\r\n        for (let i = 0; i < m; i++) {\r\n          U[i][j] = 0;\r\n        }\r\n        U[j][j] = 1;\r\n      }\r\n      for (let k = nct - 1; k >= 0; k--) {\r\n        if (s[k] !== 0) {\r\n          for (let j = k + 1; j < nu; j++) {\r\n            let t = 0;\r\n            for (let i = k; i < m; i++) {\r\n              t += U[i][k] * U[i][j];\r\n            }\r\n            t = -t / U[k][k];\r\n            for (let i = k; i < m; i++) {\r\n              U[i][j] += t * U[i][k];\r\n            }\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            U[i][k] = -U[i][k];\r\n          }\r\n          U[k][k] = 1 + U[k][k];\r\n          for (let i = 0; i < k - 1; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n        } else {\r\n          for (let i = 0; i < m; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n          U[k][k] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wantv) {\r\n      for (let k = n - 1; k >= 0; k--) {\r\n        if (k < nrt && e[k] !== 0) {\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = 0;\r\n            for (let i = k + 1; i < n; i++) {\r\n              t += V[i][k] * V[i][j];\r\n            }\r\n            t = -t / V[k + 1][k];\r\n            for (let i = k + 1; i < n; i++) {\r\n              V[i][j] += t * V[i][k];\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < n; i++) {\r\n          V[i][k] = 0;\r\n        }\r\n        V[k][k] = 1;\r\n      }\r\n    }\r\n\r\n    var pp = p - 1;\r\n    var iter = 0;\r\n    var eps = Number.EPSILON;\r\n    while (p > 0) {\r\n      let k, kase;\r\n      for (k = p - 2; k >= -1; k--) {\r\n        if (k === -1) {\r\n          break;\r\n        }\r\n        const alpha =\r\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\r\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\r\n          e[k] = 0;\r\n          break;\r\n        }\r\n      }\r\n      if (k === p - 2) {\r\n        kase = 4;\r\n      } else {\r\n        let ks;\r\n        for (ks = p - 1; ks >= k; ks--) {\r\n          if (ks === k) {\r\n            break;\r\n          }\r\n          let t =\r\n            (ks !== p ? Math.abs(e[ks]) : 0) +\r\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\r\n          if (Math.abs(s[ks]) <= eps * t) {\r\n            s[ks] = 0;\r\n            break;\r\n          }\r\n        }\r\n        if (ks === k) {\r\n          kase = 3;\r\n        } else if (ks === p - 1) {\r\n          kase = 1;\r\n        } else {\r\n          kase = 2;\r\n          k = ks;\r\n        }\r\n      }\r\n\r\n      k++;\r\n\r\n      switch (kase) {\r\n        case 1: {\r\n          let f = e[p - 2];\r\n          e[p - 2] = 0;\r\n          for (let j = p - 2; j >= k; j--) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            if (j !== k) {\r\n              f = -sn * e[j - 1];\r\n              e[j - 1] = cs * e[j - 1];\r\n            }\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][p - 1];\r\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 2: {\r\n          let f = e[k - 1];\r\n          e[k - 1] = 0;\r\n          for (let j = k; j < p; j++) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            f = -sn * e[j];\r\n            e[j] = cs * e[j];\r\n            if (wantu) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][k - 1];\r\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 3: {\r\n          const scale = Math.max(\r\n            Math.abs(s[p - 1]),\r\n            Math.abs(s[p - 2]),\r\n            Math.abs(e[p - 2]),\r\n            Math.abs(s[k]),\r\n            Math.abs(e[k])\r\n          );\r\n          const sp = s[p - 1] / scale;\r\n          const spm1 = s[p - 2] / scale;\r\n          const epm1 = e[p - 2] / scale;\r\n          const sk = s[k] / scale;\r\n          const ek = e[k] / scale;\r\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\r\n          const c = sp * epm1 * (sp * epm1);\r\n          let shift = 0;\r\n          if (b !== 0 || c !== 0) {\r\n            if (b < 0) {\r\n              shift = 0 - Math.sqrt(b * b + c);\r\n            } else {\r\n              shift = Math.sqrt(b * b + c);\r\n            }\r\n            shift = c / (b + shift);\r\n          }\r\n          let f = (sk + sp) * (sk - sp) + shift;\r\n          let g = sk * ek;\r\n          for (let j = k; j < p - 1; j++) {\r\n            let t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            let cs = f / t;\r\n            let sn = g / t;\r\n            if (j !== k) {\r\n              e[j - 1] = t;\r\n            }\r\n            f = cs * s[j] + sn * e[j];\r\n            e[j] = cs * e[j] - sn * s[j];\r\n            g = sn * s[j + 1];\r\n            s[j + 1] = cs * s[j + 1];\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][j + 1];\r\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n            t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            cs = f / t;\r\n            sn = g / t;\r\n            s[j] = t;\r\n            f = cs * e[j] + sn * s[j + 1];\r\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\r\n            g = sn * e[j + 1];\r\n            e[j + 1] = cs * e[j + 1];\r\n            if (wantu && j < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][j + 1];\r\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          e[p - 2] = f;\r\n          iter = iter + 1;\r\n          break;\r\n        }\r\n        case 4: {\r\n          if (s[k] <= 0) {\r\n            s[k] = s[k] < 0 ? -s[k] : 0;\r\n            if (wantv) {\r\n              for (let i = 0; i <= pp; i++) {\r\n                V[i][k] = -V[i][k];\r\n              }\r\n            }\r\n          }\r\n          while (k < pp) {\r\n            if (s[k] >= s[k + 1]) {\r\n              break;\r\n            }\r\n            let t = s[k];\r\n            s[k] = s[k + 1];\r\n            s[k + 1] = t;\r\n            if (wantv && k < n - 1) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = V[i][k + 1];\r\n                V[i][k + 1] = V[i][k];\r\n                V[i][k] = t;\r\n              }\r\n            }\r\n            if (wantu && k < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = U[i][k + 1];\r\n                U[i][k + 1] = U[i][k];\r\n                U[i][k] = t;\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          iter = 0;\r\n          p--;\r\n          break;\r\n        }\r\n        // no default\r\n      }\r\n    }\r\n\r\n    if (swapped) {\r\n      var tmp = V;\r\n      V = U;\r\n      U = tmp;\r\n    }\r\n\r\n    this.m = m;\r\n    this.n = n;\r\n    this.s = s;\r\n    this.U = U;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var x = svd.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    var Y = value;\r\n    var e = this.threshold;\r\n    var scols = this.s.length;\r\n    var Ls = Matrix.zeros(scols, scols);\r\n\r\n    for (let i = 0; i < scols; i++) {\r\n      if (Math.abs(this.s[i]) <= e) {\r\n        Ls[i][i] = 0;\r\n      } else {\r\n        Ls[i][i] = 1 / this.s[i];\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n    var V = this.rightSingularVectors;\r\n\r\n    var VL = V.mmul(Ls);\r\n    var vrows = V.rows;\r\n    var urows = U.length;\r\n    var VLU = Matrix.zeros(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < scols; k++) {\r\n          sum += VL[i][k] * U[j][k];\r\n        }\r\n        VLU[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return VLU.mmul(Y);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array<number>} value\r\n   * @return {Matrix}\r\n   */\r\n  solveForDiagonal(value) {\r\n    return this.solve(Matrix.diag(value));\r\n  }\r\n\r\n  /**\r\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var inverseA = svd.inverse();\r\n   * @return {Matrix} - The approximation of the inverse of the matrix\r\n   */\r\n  inverse() {\r\n    var V = this.V;\r\n    var e = this.threshold;\r\n    var vrows = V.length;\r\n    var vcols = V[0].length;\r\n    var X = new Matrix(vrows, this.s.length);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < vcols; j++) {\r\n        if (Math.abs(this.s[j]) > e) {\r\n          X[i][j] = V[i][j] / this.s[j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n\r\n    var urows = U.length;\r\n    var ucols = U[0].length;\r\n    var Y = new Matrix(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < ucols; k++) {\r\n          sum += X[i][k] * U[j][k];\r\n        }\r\n        Y[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return Y;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get condition() {\r\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get norm2() {\r\n    return this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get rank() {\r\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\r\n    var r = 0;\r\n    var s = this.s;\r\n    for (var i = 0, ii = s.length; i < ii; i++) {\r\n      if (s[i] > tol) {\r\n        r++;\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get diagonal() {\r\n    return this.s;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get threshold() {\r\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get leftSingularVectors() {\r\n    if (!Matrix.isMatrix(this.U)) {\r\n      this.U = new Matrix(this.U);\r\n    }\r\n    return this.U;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get rightSingularVectors() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    return Matrix.diag(this.s);\r\n  }\r\n}\r\n","export function hypotenuse(a, b) {\r\n  var r = 0;\r\n  if (Math.abs(a) > Math.abs(b)) {\r\n    r = b / a;\r\n    return Math.abs(a) * Math.sqrt(1 + r * r);\r\n  }\r\n  if (b !== 0) {\r\n    r = a / b;\r\n    return Math.abs(b) * Math.sqrt(1 + r * r);\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getFilled2DArray(rows, columns, value) {\r\n  var array = new Array(rows);\r\n  for (var i = 0; i < rows; i++) {\r\n    array[i] = new Array(columns);\r\n    for (var j = 0; j < columns; j++) {\r\n      array[i][j] = value;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","import LuDecomposition from './dc/lu';\r\nimport QrDecomposition from './dc/qr';\r\nimport SingularValueDecomposition from './dc/svd';\r\n\r\nimport { Matrix, WrapperMatrix2D } from './index';\r\n\r\n/**\r\n * Computes the inverse of a Matrix\r\n * @param {Matrix} matrix\r\n * @param {boolean} [useSVD=false]\r\n * @return {Matrix}\r\n */\r\nexport function inverse(matrix, useSVD = false) {\r\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(matrix).inverse();\r\n  } else {\r\n    return solve(matrix, Matrix.eye(matrix.rows));\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Matrix} leftHandSide\r\n * @param {Matrix} rightHandSide\r\n * @param {boolean} [useSVD = false]\r\n * @return {Matrix}\r\n */\r\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\r\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\r\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\r\n  } else {\r\n    return leftHandSide.isSquare()\r\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\r\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\r\n  }\r\n}\r\n","export { default, default as Matrix } from './matrix';\r\nexport { default as abstractMatrix } from './abstractMatrix';\r\n\r\nexport { wrap } from './wrap/wrap';\r\nexport { default as WrapperMatrix2D } from './wrap/WrapperMatrix2D';\r\nexport { default as WrapperMatrix1D } from './wrap/WrapperMatrix1D';\r\n\r\nexport { solve, inverse } from './decompositions';\r\nexport { linearDependencies } from './linearDependencies';\r\nexport {\r\n  default as SingularValueDecomposition,\r\n  default as SVD\r\n} from './dc/svd.js';\r\nexport {\r\n  default as EigenvalueDecomposition,\r\n  default as EVD\r\n} from './dc/evd.js';\r\nexport {\r\n  default as CholeskyDecomposition,\r\n  default as CHO\r\n} from './dc/cholesky.js';\r\nexport { default as LuDecomposition, default as LU } from './dc/lu.js';\r\nexport { default as QrDecomposition, default as QR } from './dc/qr.js';\r\n","import max from 'ml-array-max';\r\n\r\nimport Matrix from './matrix';\r\nimport SingularValueDecomposition from './dc/svd';\r\n\r\n// function used by rowsDependencies\r\nfunction xrange(n, exception) {\r\n  var range = [];\r\n  for (var i = 0; i < n; i++) {\r\n    if (i !== exception) {\r\n      range.push(i);\r\n    }\r\n  }\r\n  return range;\r\n}\r\n\r\n// function used by rowsDependencies\r\nfunction dependenciesOneRow(\r\n  error,\r\n  matrix,\r\n  index,\r\n  thresholdValue = 10e-10,\r\n  thresholdError = 10e-10\r\n) {\r\n  if (error > thresholdError) {\r\n    return new Array(matrix.rows + 1).fill(0);\r\n  } else {\r\n    var returnArray = matrix.addRow(index, [0]);\r\n    for (var i = 0; i < returnArray.rows; i++) {\r\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\r\n        returnArray.set(i, 0, 0);\r\n      }\r\n    }\r\n    return returnArray.to1DArray();\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a matrix which represents the dependencies between rows.\r\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\r\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\r\n * @param {Matrix} matrix\r\n * @param {Object} [options] includes thresholdValue and thresholdError.\r\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\r\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\r\n * @return {Matrix} the matrix which represents the dependencies between rows.\r\n */\r\n\r\nexport function linearDependencies(matrix, options = {}) {\r\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\r\n\r\n  var n = matrix.rows;\r\n  var results = new Matrix(n, n);\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    var b = Matrix.columnVector(matrix.getRow(i));\r\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\r\n    var svd = new SingularValueDecomposition(Abis);\r\n    var x = svd.solve(b);\r\n    var error = max(\r\n      Matrix.sub(b, Abis.mmul(x))\r\n        .abs()\r\n        .to1DArray()\r\n    );\r\n    results.setRow(\r\n      i,\r\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\r\n    );\r\n  }\r\n  return results;\r\n}\r\n","import AbstractMatrix from './abstractMatrix';\r\nimport {\r\n  checkColumnIndex,\r\n  checkColumnVector,\r\n  checkRowIndex,\r\n  checkRowVector\r\n} from './util';\r\n\r\nexport default class Matrix extends AbstractMatrix(Array) {\r\n  constructor(nRows, nColumns) {\r\n    var i;\r\n    if (arguments.length === 1 && typeof nRows === 'number') {\r\n      return new Array(nRows);\r\n    }\r\n    if (Matrix.isMatrix(nRows)) {\r\n      return nRows.clone();\r\n    } else if (Number.isInteger(nRows) && nRows > 0) {\r\n      // Create an empty matrix\r\n      super(nRows);\r\n      if (Number.isInteger(nColumns) && nColumns > 0) {\r\n        for (i = 0; i < nRows; i++) {\r\n          this[i] = new Array(nColumns);\r\n        }\r\n      } else {\r\n        throw new TypeError('nColumns must be a positive integer');\r\n      }\r\n    } else if (Array.isArray(nRows)) {\r\n      // Copy the values from the 2D array\r\n      const matrix = nRows;\r\n      nRows = matrix.length;\r\n      nColumns = matrix[0].length;\r\n      if (typeof nColumns !== 'number' || nColumns === 0) {\r\n        throw new TypeError(\r\n          'Data must be a 2D array with at least one element'\r\n        );\r\n      }\r\n      super(nRows);\r\n      for (i = 0; i < nRows; i++) {\r\n        if (matrix[i].length !== nColumns) {\r\n          throw new RangeError('Inconsistent array dimensions');\r\n        }\r\n        this[i] = [].concat(matrix[i]);\r\n      }\r\n    } else {\r\n      throw new TypeError(\r\n        'First argument must be a positive number or an array'\r\n      );\r\n    }\r\n    this.rows = nRows;\r\n    this.columns = nColumns;\r\n    return this;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this[rowIndex][columnIndex];\r\n  }\r\n\r\n  /**\r\n   * Removes a row from the given index\r\n   * @param {number} index - Row index\r\n   * @return {Matrix} this\r\n   */\r\n  removeRow(index) {\r\n    checkRowIndex(this, index);\r\n    if (this.rows === 1) {\r\n      throw new RangeError('A matrix cannot have less than one row');\r\n    }\r\n    this.splice(index, 1);\r\n    this.rows -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a row at the given index\r\n   * @param {number} [index = this.rows] - Row index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addRow(index, array) {\r\n    if (array === undefined) {\r\n      array = index;\r\n      index = this.rows;\r\n    }\r\n    checkRowIndex(this, index, true);\r\n    array = checkRowVector(this, array, true);\r\n    this.splice(index, 0, array);\r\n    this.rows += 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a column from the given index\r\n   * @param {number} index - Column index\r\n   * @return {Matrix} this\r\n   */\r\n  removeColumn(index) {\r\n    checkColumnIndex(this, index);\r\n    if (this.columns === 1) {\r\n      throw new RangeError('A matrix cannot have less than one column');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 1);\r\n    }\r\n    this.columns -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a column at the given index\r\n   * @param {number} [index = this.columns] - Column index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addColumn(index, array) {\r\n    if (typeof array === 'undefined') {\r\n      array = index;\r\n      index = this.columns;\r\n    }\r\n    checkColumnIndex(this, index, true);\r\n    array = checkColumnVector(this, array);\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 0, array[i]);\r\n    }\r\n    this.columns += 1;\r\n    return this;\r\n  }\r\n}\r\n","import Matrix from './matrix';\r\n\r\n/**\r\n * @private\r\n * Check that a row index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkRowIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.rows : matrix.rows - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Row index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that a column index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkColumnIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.columns : matrix.columns - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Column index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkRowVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.columns) {\r\n    throw new RangeError(\r\n      'vector size must be the same as the number of columns'\r\n    );\r\n  }\r\n  return vector;\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkColumnVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.rows) {\r\n    throw new RangeError('vector size must be the same as the number of rows');\r\n  }\r\n  return vector;\r\n}\r\n\r\nexport function checkIndices(matrix, rowIndices, columnIndices) {\r\n  return {\r\n    row: checkRowIndices(matrix, rowIndices),\r\n    column: checkColumnIndices(matrix, columnIndices)\r\n  };\r\n}\r\n\r\nexport function checkRowIndices(matrix, rowIndices) {\r\n  if (typeof rowIndices !== 'object') {\r\n    throw new TypeError('unexpected type for row indices');\r\n  }\r\n\r\n  var rowOut = rowIndices.some((r) => {\r\n    return r < 0 || r >= matrix.rows;\r\n  });\r\n\r\n  if (rowOut) {\r\n    throw new RangeError('row indices are out of range');\r\n  }\r\n\r\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\r\n\r\n  return rowIndices;\r\n}\r\n\r\nexport function checkColumnIndices(matrix, columnIndices) {\r\n  if (typeof columnIndices !== 'object') {\r\n    throw new TypeError('unexpected type for column indices');\r\n  }\r\n\r\n  var columnOut = columnIndices.some((c) => {\r\n    return c < 0 || c >= matrix.columns;\r\n  });\r\n\r\n  if (columnOut) {\r\n    throw new RangeError('column indices are out of range');\r\n  }\r\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\r\n\r\n  return columnIndices;\r\n}\r\n\r\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\r\n  if (arguments.length !== 5) {\r\n    throw new RangeError('expected 4 arguments');\r\n  }\r\n  checkNumber('startRow', startRow);\r\n  checkNumber('endRow', endRow);\r\n  checkNumber('startColumn', startColumn);\r\n  checkNumber('endColumn', endColumn);\r\n  if (\r\n    startRow > endRow ||\r\n    startColumn > endColumn ||\r\n    startRow < 0 ||\r\n    startRow >= matrix.rows ||\r\n    endRow < 0 ||\r\n    endRow >= matrix.rows ||\r\n    startColumn < 0 ||\r\n    startColumn >= matrix.columns ||\r\n    endColumn < 0 ||\r\n    endColumn >= matrix.columns\r\n  ) {\r\n    throw new RangeError('Submatrix indices are out of range');\r\n  }\r\n}\r\n\r\nexport function getRange(from, to) {\r\n  var arr = new Array(to - from + 1);\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] = from + i;\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function sumByRow(matrix) {\r\n  var sum = Matrix.zeros(matrix.rows, 1);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumByColumn(matrix) {\r\n  var sum = Matrix.zeros(1, matrix.columns);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumAll(matrix) {\r\n  var v = 0;\r\n  for (var i = 0; i < matrix.rows; i++) {\r\n    for (var j = 0; j < matrix.columns; j++) {\r\n      v += matrix.get(i, j);\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction checkNumber(name, value) {\r\n  if (typeof value !== 'number') {\r\n    throw new TypeError(`${name} must be a number`);\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class BaseView extends AbstractMatrix() {\r\n  constructor(matrix, rows, columns) {\r\n    super();\r\n    this.matrix = matrix;\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixColumnView extends BaseView {\r\n  constructor(matrix, column) {\r\n    super(matrix, matrix.rows, 1);\r\n    this.column = column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.column, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex) {\r\n    return this.matrix.get(rowIndex, this.column);\r\n  }\r\n}\r\n","import { checkColumnIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixColumnSelectionView extends BaseView {\r\n  constructor(matrix, columnIndices) {\r\n    columnIndices = checkColumnIndices(matrix, columnIndices);\r\n    super(matrix, matrix.rows, columnIndices.length);\r\n    this.columnIndices = columnIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipColumnView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipRowView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixRowView extends BaseView {\r\n  constructor(matrix, row) {\r\n    super(matrix, 1, matrix.columns);\r\n    this.row = row;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.row, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.row, columnIndex);\r\n  }\r\n}\r\n","import { checkRowIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixRowSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices) {\r\n    rowIndices = checkRowIndices(matrix, rowIndices);\r\n    super(matrix, rowIndices.length, matrix.columns);\r\n    this.rowIndices = rowIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\r\n  }\r\n}\r\n","import { checkIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices, columnIndices) {\r\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\r\n    super(matrix, indices.row.length, indices.column.length);\r\n    this.rowIndices = indices.row;\r\n    this.columnIndices = indices.column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex],\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex]\r\n    );\r\n  }\r\n}\r\n","import { checkRange } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSubView extends BaseView {\r\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\r\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\r\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\r\n    this.startRow = startRow;\r\n    this.startColumn = startColumn;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex,\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex\r\n    );\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix1D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix1D\r\n   * @param {Array<number>} data\r\n   * @param {object} [options]\r\n   * @param {object} [options.rows = 1]\r\n   */\r\n  constructor(data, options = {}) {\r\n    const { rows = 1 } = options;\r\n\r\n    if (data.length % rows !== 0) {\r\n      throw new Error('the data length is not divisible by the number of rows');\r\n    }\r\n    super();\r\n    this.rows = rows;\r\n    this.columns = data.length / rows;\r\n    this.data = data;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    var index = this._calculateIndex(rowIndex, columnIndex);\r\n    this.data[index] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    var index = this._calculateIndex(rowIndex, columnIndex);\r\n    return this.data[index];\r\n  }\r\n\r\n  _calculateIndex(row, column) {\r\n    return row * this.columns + column;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix2D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix2D\r\n   * @param {Array<Array<number>>} data\r\n   */\r\n  constructor(data) {\r\n    super();\r\n    this.data = data;\r\n    this.rows = data.length;\r\n    this.columns = data[0].length;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.data[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.data[rowIndex][columnIndex];\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import WrapperMatrix1D from './WrapperMatrix1D';\r\nimport WrapperMatrix2D from './WrapperMatrix2D';\r\n\r\n/**\r\n * @param {Array<Array<number>>|Array<number>} array\r\n * @param {object} [options]\r\n * @param {object} [options.rows = 1]\r\n * @return {WrapperMatrix1D|WrapperMatrix2D}\r\n */\r\nexport function wrap(array, options) {\r\n  if (Array.isArray(array)) {\r\n    if (array[0] && Array.isArray(array[0])) {\r\n      return new WrapperMatrix2D(array);\r\n    } else {\r\n      return new WrapperMatrix1D(array, options);\r\n    }\r\n  } else {\r\n    throw new Error('the argument is not an array');\r\n  }\r\n}\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\"use strict\";\n/**\n * @license\n *\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ==============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.smallestFlagged = exports.deheapSort = exports.buildCandidates = exports.uncheckedHeapPush = exports.heapPush = exports.rejectionSample = exports.makeHeap = void 0;\nconst utils = require(\"./utils\");\n/**\n *  Constructor for the heap objects. The heaps are used\n * for approximate nearest neighbor search, maintaining a list of potential\n * neighbors sorted by their distance. We also flag if potential neighbors\n * are newly added to the list or not. Internally this is stored as\n * a single array; the first axis determines whether we are looking at the\n * array of candidate indices, the array of distances, or the flag array for\n * whether elements are new or not. Each of these arrays are of shape\n * (``nPoints``, ``size``)\n */\nfunction makeHeap(nPoints, size) {\n    const makeArrays = (fillValue) => {\n        return utils.empty(nPoints).map(() => {\n            return utils.filled(size, fillValue);\n        });\n    };\n    const heap = [];\n    heap.push(makeArrays(-1));\n    heap.push(makeArrays(Infinity));\n    heap.push(makeArrays(0));\n    return heap;\n}\nexports.makeHeap = makeHeap;\n/**\n * Generate n_samples many integers from 0 to pool_size such that no\n * integer is selected twice. The duplication constraint is achieved via\n * rejection sampling.\n */\nfunction rejectionSample(nSamples, poolSize, random) {\n    const result = utils.zeros(nSamples);\n    for (let i = 0; i < nSamples; i++) {\n        let rejectSample = true;\n        let j = 0;\n        while (rejectSample) {\n            j = utils.tauRandInt(poolSize, random);\n            let broken = false;\n            for (let k = 0; k < i; k++) {\n                if (j === result[k]) {\n                    broken = true;\n                    break;\n                }\n            }\n            if (!broken)\n                rejectSample = false;\n        }\n        result[i] = j;\n    }\n    return result;\n}\nexports.rejectionSample = rejectionSample;\n/**\n * Push a new element onto the heap. The heap stores potential neighbors\n * for each data point. The ``row`` parameter determines which data point we\n * are addressing, the ``weight`` determines the distance (for heap sorting),\n * the ``index`` is the element to add, and the flag determines whether this\n * is to be considered a new addition.\n */\nfunction heapPush(heap, row, weight, index, flag) {\n    row = Math.floor(row);\n    const indices = heap[0][row];\n    const weights = heap[1][row];\n    const isNew = heap[2][row];\n    if (weight >= weights[0]) {\n        return 0;\n    }\n    // Break if we already have this element.\n    for (let i = 0; i < indices.length; i++) {\n        if (index === indices[i]) {\n            return 0;\n        }\n    }\n    return uncheckedHeapPush(heap, row, weight, index, flag);\n}\nexports.heapPush = heapPush;\n/**\n * Push a new element onto the heap. The heap stores potential neighbors\n * for each data point. The ``row`` parameter determines which data point we\n * are addressing, the ``weight`` determines the distance (for heap sorting),\n * the ``index`` is the element to add, and the flag determines whether this\n * is to be considered a new addition.\n */\nfunction uncheckedHeapPush(heap, row, weight, index, flag) {\n    const indices = heap[0][row];\n    const weights = heap[1][row];\n    const isNew = heap[2][row];\n    if (weight >= weights[0]) {\n        return 0;\n    }\n    // Insert val at position zero\n    weights[0] = weight;\n    indices[0] = index;\n    isNew[0] = flag;\n    // Descend the heap, swapping values until the max heap criterion is met\n    let i = 0;\n    let iSwap = 0;\n    while (true) {\n        const ic1 = 2 * i + 1;\n        const ic2 = ic1 + 1;\n        const heapShape2 = heap[0][0].length;\n        if (ic1 >= heapShape2) {\n            break;\n        }\n        else if (ic2 >= heapShape2) {\n            if (weights[ic1] > weight) {\n                iSwap = ic1;\n            }\n            else {\n                break;\n            }\n        }\n        else if (weights[ic1] >= weights[ic2]) {\n            if (weight < weights[ic1]) {\n                iSwap = ic1;\n            }\n            else {\n                break;\n            }\n        }\n        else {\n            if (weight < weights[ic2]) {\n                iSwap = ic2;\n            }\n            else {\n                break;\n            }\n        }\n        weights[i] = weights[iSwap];\n        indices[i] = indices[iSwap];\n        isNew[i] = isNew[iSwap];\n        i = iSwap;\n    }\n    weights[i] = weight;\n    indices[i] = index;\n    isNew[i] = flag;\n    return 1;\n}\nexports.uncheckedHeapPush = uncheckedHeapPush;\n/**\n * Build a heap of candidate neighbors for nearest neighbor descent. For\n * each vertex the candidate neighbors are any current neighbors, and any\n * vertices that have the vertex as one of their nearest neighbors.\n */\nfunction buildCandidates(currentGraph, nVertices, nNeighbors, maxCandidates, random) {\n    const candidateNeighbors = makeHeap(nVertices, maxCandidates);\n    for (let i = 0; i < nVertices; i++) {\n        for (let j = 0; j < nNeighbors; j++) {\n            if (currentGraph[0][i][j] < 0) {\n                continue;\n            }\n            const idx = currentGraph[0][i][j];\n            const isn = currentGraph[2][i][j];\n            const d = utils.tauRand(random);\n            heapPush(candidateNeighbors, i, d, idx, isn);\n            heapPush(candidateNeighbors, idx, d, i, isn);\n            currentGraph[2][i][j] = 0;\n        }\n    }\n    return candidateNeighbors;\n}\nexports.buildCandidates = buildCandidates;\n/**\n * Given an array of heaps (of indices and weights), unpack the heap\n * out to give and array of sorted lists of indices and weights by increasing\n * weight. This is effectively just the second half of heap sort (the first\n * half not being required since we already have the data in a heap).\n */\nfunction deheapSort(heap) {\n    const indices = heap[0];\n    const weights = heap[1];\n    for (let i = 0; i < indices.length; i++) {\n        const indHeap = indices[i];\n        const distHeap = weights[i];\n        for (let j = 0; j < indHeap.length - 1; j++) {\n            const indHeapIndex = indHeap.length - j - 1;\n            const distHeapIndex = distHeap.length - j - 1;\n            const temp1 = indHeap[0];\n            indHeap[0] = indHeap[indHeapIndex];\n            indHeap[indHeapIndex] = temp1;\n            const temp2 = distHeap[0];\n            distHeap[0] = distHeap[distHeapIndex];\n            distHeap[distHeapIndex] = temp2;\n            siftDown(distHeap, indHeap, distHeapIndex, 0);\n        }\n    }\n    return { indices, weights };\n}\nexports.deheapSort = deheapSort;\n/**\n * Restore the heap property for a heap with an out of place element\n * at position ``elt``. This works with a heap pair where heap1 carries\n * the weights and heap2 holds the corresponding elements.\n */\nfunction siftDown(heap1, heap2, ceiling, elt) {\n    while (elt * 2 + 1 < ceiling) {\n        const leftChild = elt * 2 + 1;\n        const rightChild = leftChild + 1;\n        let swap = elt;\n        if (heap1[swap] < heap1[leftChild]) {\n            swap = leftChild;\n        }\n        if (rightChild < ceiling && heap1[swap] < heap1[rightChild]) {\n            swap = rightChild;\n        }\n        if (swap === elt) {\n            break;\n        }\n        else {\n            const temp1 = heap1[elt];\n            heap1[elt] = heap1[swap];\n            heap1[swap] = temp1;\n            const temp2 = heap2[elt];\n            heap2[elt] = heap2[swap];\n            heap2[swap] = temp2;\n            elt = swap;\n        }\n    }\n}\n/**\n * Search the heap for the smallest element that is still flagged.\n */\nfunction smallestFlagged(heap, row) {\n    const ind = heap[0][row];\n    const dist = heap[1][row];\n    const flag = heap[2][row];\n    let minDist = Infinity;\n    let resultIndex = -1;\n    for (let i = 0; i > ind.length; i++) {\n        if (flag[i] === 1 && dist[i] < minDist) {\n            minDist = dist[i];\n            resultIndex = i;\n        }\n    }\n    if (resultIndex >= 0) {\n        flag[resultIndex] = 0;\n        return Math.floor(ind[resultIndex]);\n    }\n    else {\n        return -1;\n    }\n}\nexports.smallestFlagged = smallestFlagged;\n","\"use strict\";\n/**\n * @license\n *\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ==============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCSR = exports.normalize = exports.eliminateZeros = exports.multiplyScalar = exports.maximum = exports.subtract = exports.add = exports.pairwiseMultiply = exports.identity = exports.transpose = exports.SparseMatrix = void 0;\nconst utils = require(\"./utils\");\n/**\n * Internal 2-dimensional sparse matrix class\n */\nclass SparseMatrix {\n    constructor(rows, cols, values, dims) {\n        this.entries = new Map();\n        this.nRows = 0;\n        this.nCols = 0;\n        if (rows.length !== cols.length || rows.length !== values.length) {\n            throw new Error('rows, cols and values arrays must all have the same length');\n        }\n        // TODO: Assert that dims are legit.\n        this.nRows = dims[0];\n        this.nCols = dims[1];\n        for (let i = 0; i < values.length; i++) {\n            const row = rows[i];\n            const col = cols[i];\n            this.checkDims(row, col);\n            const key = this.makeKey(row, col);\n            this.entries.set(key, { value: values[i], row, col });\n        }\n    }\n    makeKey(row, col) {\n        return `${row}:${col}`;\n    }\n    checkDims(row, col) {\n        const withinBounds = row < this.nRows && col < this.nCols;\n        if (!withinBounds) {\n            throw new Error('row and/or col specified outside of matrix dimensions');\n        }\n    }\n    set(row, col, value) {\n        this.checkDims(row, col);\n        const key = this.makeKey(row, col);\n        if (!this.entries.has(key)) {\n            this.entries.set(key, { value, row, col });\n        }\n        else {\n            this.entries.get(key).value = value;\n        }\n    }\n    get(row, col, defaultValue = 0) {\n        this.checkDims(row, col);\n        const key = this.makeKey(row, col);\n        if (this.entries.has(key)) {\n            return this.entries.get(key).value;\n        }\n        else {\n            return defaultValue;\n        }\n    }\n    getAll(ordered = true) {\n        const rowColValues = [];\n        this.entries.forEach(value => {\n            rowColValues.push(value);\n        });\n        if (ordered) {\n            // Ordering the result isn't required for processing but it does make it easier to write tests\n            rowColValues.sort((a, b) => {\n                if (a.row === b.row) {\n                    return a.col - b.col;\n                }\n                else {\n                    return a.row - b.row;\n                }\n            });\n        }\n        return rowColValues;\n    }\n    getDims() {\n        return [this.nRows, this.nCols];\n    }\n    getRows() {\n        return Array.from(this.entries, ([key, value]) => value.row);\n    }\n    getCols() {\n        return Array.from(this.entries, ([key, value]) => value.col);\n    }\n    getValues() {\n        return Array.from(this.entries, ([key, value]) => value.value);\n    }\n    forEach(fn) {\n        this.entries.forEach(value => fn(value.value, value.row, value.col));\n    }\n    map(fn) {\n        let vals = [];\n        this.entries.forEach(value => {\n            vals.push(fn(value.value, value.row, value.col));\n        });\n        const dims = [this.nRows, this.nCols];\n        return new SparseMatrix(this.getRows(), this.getCols(), vals, dims);\n    }\n    toArray() {\n        const rows = utils.empty(this.nRows);\n        const output = rows.map(() => {\n            return utils.zeros(this.nCols);\n        });\n        this.entries.forEach(value => {\n            output[value.row][value.col] = value.value;\n        });\n        return output;\n    }\n}\nexports.SparseMatrix = SparseMatrix;\n/**\n * Transpose a sparse matrix\n */\nfunction transpose(matrix) {\n    const cols = [];\n    const rows = [];\n    const vals = [];\n    matrix.forEach((value, row, col) => {\n        cols.push(row);\n        rows.push(col);\n        vals.push(value);\n    });\n    const dims = [matrix.nCols, matrix.nRows];\n    return new SparseMatrix(rows, cols, vals, dims);\n}\nexports.transpose = transpose;\n/**\n * Construct a sparse identity matrix\n */\nfunction identity(size) {\n    const [rows] = size;\n    const matrix = new SparseMatrix([], [], [], size);\n    for (let i = 0; i < rows; i++) {\n        matrix.set(i, i, 1);\n    }\n    return matrix;\n}\nexports.identity = identity;\n/**\n * Element-wise multiplication of two matrices\n */\nfunction pairwiseMultiply(a, b) {\n    return elementWise(a, b, (x, y) => x * y);\n}\nexports.pairwiseMultiply = pairwiseMultiply;\n/**\n * Element-wise addition of two matrices\n */\nfunction add(a, b) {\n    return elementWise(a, b, (x, y) => x + y);\n}\nexports.add = add;\n/**\n * Element-wise subtraction of two matrices\n */\nfunction subtract(a, b) {\n    return elementWise(a, b, (x, y) => x - y);\n}\nexports.subtract = subtract;\n/**\n * Element-wise maximum of two matrices\n */\nfunction maximum(a, b) {\n    return elementWise(a, b, (x, y) => (x > y ? x : y));\n}\nexports.maximum = maximum;\n/**\n * Scalar multiplication of two matrices\n */\nfunction multiplyScalar(a, scalar) {\n    return a.map((value) => {\n        return value * scalar;\n    });\n}\nexports.multiplyScalar = multiplyScalar;\n/**\n * Returns a new matrix with zero entries removed.\n */\nfunction eliminateZeros(m) {\n    const zeroIndices = new Set();\n    const values = m.getValues();\n    const rows = m.getRows();\n    const cols = m.getCols();\n    for (let i = 0; i < values.length; i++) {\n        if (values[i] === 0) {\n            zeroIndices.add(i);\n        }\n    }\n    const removeByZeroIndex = (_, index) => !zeroIndices.has(index);\n    const nextValues = values.filter(removeByZeroIndex);\n    const nextRows = rows.filter(removeByZeroIndex);\n    const nextCols = cols.filter(removeByZeroIndex);\n    return new SparseMatrix(nextRows, nextCols, nextValues, m.getDims());\n}\nexports.eliminateZeros = eliminateZeros;\n/**\n * Normalization of a sparse matrix.\n */\nfunction normalize(m, normType = \"l2\" /* l2 */) {\n    const normFn = normFns[normType];\n    const colsByRow = new Map();\n    m.forEach((_, row, col) => {\n        const cols = colsByRow.get(row) || [];\n        cols.push(col);\n        colsByRow.set(row, cols);\n    });\n    const nextMatrix = new SparseMatrix([], [], [], m.getDims());\n    for (let row of colsByRow.keys()) {\n        const cols = colsByRow.get(row).sort();\n        const vals = cols.map(col => m.get(row, col));\n        const norm = normFn(vals);\n        for (let i = 0; i < norm.length; i++) {\n            nextMatrix.set(row, cols[i], norm[i]);\n        }\n    }\n    return nextMatrix;\n}\nexports.normalize = normalize;\nconst normFns = {\n    [\"max\" /* max */]: (xs) => {\n        let max = -Infinity;\n        for (let i = 0; i < xs.length; i++) {\n            max = xs[i] > max ? xs[i] : max;\n        }\n        return xs.map(x => x / max);\n    },\n    [\"l1\" /* l1 */]: (xs) => {\n        let sum = 0;\n        for (let i = 0; i < xs.length; i++) {\n            sum += xs[i];\n        }\n        return xs.map(x => x / sum);\n    },\n    [\"l2\" /* l2 */]: (xs) => {\n        let sum = 0;\n        for (let i = 0; i < xs.length; i++) {\n            sum += xs[i] ** 2;\n        }\n        return xs.map(x => Math.sqrt(x ** 2 / sum));\n    },\n};\n/**\n * Helper function for element-wise operations.\n */\nfunction elementWise(a, b, op) {\n    const visited = new Set();\n    const rows = [];\n    const cols = [];\n    const vals = [];\n    const operate = (row, col) => {\n        rows.push(row);\n        cols.push(col);\n        const nextValue = op(a.get(row, col), b.get(row, col));\n        vals.push(nextValue);\n    };\n    const valuesA = a.getValues();\n    const rowsA = a.getRows();\n    const colsA = a.getCols();\n    for (let i = 0; i < valuesA.length; i++) {\n        const row = rowsA[i];\n        const col = colsA[i];\n        const key = `${row}:${col}`;\n        visited.add(key);\n        operate(row, col);\n    }\n    const valuesB = b.getValues();\n    const rowsB = b.getRows();\n    const colsB = b.getCols();\n    for (let i = 0; i < valuesB.length; i++) {\n        const row = rowsB[i];\n        const col = colsB[i];\n        const key = `${row}:${col}`;\n        if (visited.has(key))\n            continue;\n        operate(row, col);\n    }\n    const dims = [a.nRows, a.nCols];\n    return new SparseMatrix(rows, cols, vals, dims);\n}\n/**\n * Helper function for getting data, indices, and inptr arrays from a sparse\n * matrix to follow csr matrix conventions. Super inefficient (and kind of\n * defeats the purpose of this convention) but a lot of the ported python tree\n * search logic depends on this data format.\n */\nfunction getCSR(x) {\n    const entries = [];\n    x.forEach((value, row, col) => {\n        entries.push({ value, row, col });\n    });\n    entries.sort((a, b) => {\n        if (a.row === b.row) {\n            return a.col - b.col;\n        }\n        else {\n            return a.row - b.row;\n        }\n    });\n    const indices = [];\n    const values = [];\n    const indptr = [];\n    let currentRow = -1;\n    for (let i = 0; i < entries.length; i++) {\n        const { row, col, value } = entries[i];\n        if (row !== currentRow) {\n            currentRow = row;\n            indptr.push(i);\n        }\n        indices.push(col);\n        values.push(value);\n    }\n    return { indices, values, indptr };\n}\nexports.getCSR = getCSR;\n","\"use strict\";\n/**\n * @license\n *\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ==============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initializeSearch = exports.makeInitializedNNSearch = exports.makeInitializations = exports.makeNNDescent = void 0;\n/**\n * This is a JavaScript reimplementation of UMAP (original license below), from\n * the python implementation found at https://github.com/lmcinnes/umap.\n *\n * @author andycoenen@google.com (Andy Coenen)\n */\n/**\n * @license\n * BSD 3-Clause License\n *\n * Copyright (c) 2017, Leland McInnes\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst heap = require(\"./heap\");\nconst matrix = require(\"./matrix\");\nconst tree = require(\"./tree\");\nconst utils = require(\"./utils\");\n/**\n * Create a version of nearest neighbor descent.\n */\nfunction makeNNDescent(distanceFn, random) {\n    return function nNDescent(data, leafArray, nNeighbors, nIters = 10, maxCandidates = 50, delta = 0.001, rho = 0.5, rpTreeInit = true) {\n        const nVertices = data.length;\n        const currentGraph = heap.makeHeap(data.length, nNeighbors);\n        for (let i = 0; i < data.length; i++) {\n            const indices = heap.rejectionSample(nNeighbors, data.length, random);\n            for (let j = 0; j < indices.length; j++) {\n                const d = distanceFn(data[i], data[indices[j]]);\n                heap.heapPush(currentGraph, i, d, indices[j], 1);\n                heap.heapPush(currentGraph, indices[j], d, i, 1);\n            }\n        }\n        if (rpTreeInit) {\n            for (let n = 0; n < leafArray.length; n++) {\n                for (let i = 0; i < leafArray[n].length; i++) {\n                    if (leafArray[n][i] < 0) {\n                        break;\n                    }\n                    for (let j = i + 1; j < leafArray[n].length; j++) {\n                        if (leafArray[n][j] < 0) {\n                            break;\n                        }\n                        const d = distanceFn(data[leafArray[n][i]], data[leafArray[n][j]]);\n                        heap.heapPush(currentGraph, leafArray[n][i], d, leafArray[n][j], 1);\n                        heap.heapPush(currentGraph, leafArray[n][j], d, leafArray[n][i], 1);\n                    }\n                }\n            }\n        }\n        for (let n = 0; n < nIters; n++) {\n            const candidateNeighbors = heap.buildCandidates(currentGraph, nVertices, nNeighbors, maxCandidates, random);\n            let c = 0;\n            for (let i = 0; i < nVertices; i++) {\n                for (let j = 0; j < maxCandidates; j++) {\n                    let p = Math.floor(candidateNeighbors[0][i][j]);\n                    if (p < 0 || utils.tauRand(random) < rho) {\n                        continue;\n                    }\n                    for (let k = 0; k < maxCandidates; k++) {\n                        const q = Math.floor(candidateNeighbors[0][i][k]);\n                        const cj = candidateNeighbors[2][i][j];\n                        const ck = candidateNeighbors[2][i][k];\n                        if (q < 0 || (!cj && !ck)) {\n                            continue;\n                        }\n                        const d = distanceFn(data[p], data[q]);\n                        c += heap.heapPush(currentGraph, p, d, q, 1);\n                        c += heap.heapPush(currentGraph, q, d, p, 1);\n                    }\n                }\n            }\n            if (c <= delta * nNeighbors * data.length) {\n                break;\n            }\n        }\n        const sorted = heap.deheapSort(currentGraph);\n        return sorted;\n    };\n}\nexports.makeNNDescent = makeNNDescent;\nfunction makeInitializations(distanceFn) {\n    function initFromRandom(nNeighbors, data, queryPoints, _heap, random) {\n        for (let i = 0; i < queryPoints.length; i++) {\n            const indices = utils.rejectionSample(nNeighbors, data.length, random);\n            for (let j = 0; j < indices.length; j++) {\n                if (indices[j] < 0) {\n                    continue;\n                }\n                const d = distanceFn(data[indices[j]], queryPoints[i]);\n                heap.heapPush(_heap, i, d, indices[j], 1);\n            }\n        }\n    }\n    function initFromTree(_tree, data, queryPoints, _heap, random) {\n        for (let i = 0; i < queryPoints.length; i++) {\n            const indices = tree.searchFlatTree(queryPoints[i], _tree, random);\n            for (let j = 0; j < indices.length; j++) {\n                if (indices[j] < 0) {\n                    return;\n                }\n                const d = distanceFn(data[indices[j]], queryPoints[i]);\n                heap.heapPush(_heap, i, d, indices[j], 1);\n            }\n        }\n        return;\n    }\n    return { initFromRandom, initFromTree };\n}\nexports.makeInitializations = makeInitializations;\nfunction makeInitializedNNSearch(distanceFn) {\n    return function nnSearchFn(data, graph, initialization, queryPoints) {\n        const { indices, indptr } = matrix.getCSR(graph);\n        for (let i = 0; i < queryPoints.length; i++) {\n            const tried = new Set(initialization[0][i]);\n            while (true) {\n                // Find smallest flagged vertex\n                const vertex = heap.smallestFlagged(initialization, i);\n                if (vertex === -1) {\n                    break;\n                }\n                const candidates = indices.slice(indptr[vertex], indptr[vertex + 1]);\n                for (const candidate of candidates) {\n                    if (candidate === vertex ||\n                        candidate === -1 ||\n                        tried.has(candidate)) {\n                        continue;\n                    }\n                    const d = distanceFn(data[candidate], queryPoints[i]);\n                    heap.uncheckedHeapPush(initialization, i, d, candidate, 1);\n                    tried.add(candidate);\n                }\n            }\n        }\n        return initialization;\n    };\n}\nexports.makeInitializedNNSearch = makeInitializedNNSearch;\nfunction initializeSearch(forest, data, queryPoints, nNeighbors, initFromRandom, initFromTree, random) {\n    const results = heap.makeHeap(queryPoints.length, nNeighbors);\n    initFromRandom(nNeighbors, data, queryPoints, results, random);\n    if (forest) {\n        for (let tree of forest) {\n            initFromTree(tree, data, queryPoints, results, random);\n        }\n    }\n    return results;\n}\nexports.initializeSearch = initializeSearch;\n","\"use strict\";\n/**\n * @license\n *\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ==============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.searchFlatTree = exports.makeLeafArray = exports.makeForest = exports.FlatTree = void 0;\n/**\n * This is a JavaScript reimplementation of UMAP (original license below), from\n * the python implementation found at https://github.com/lmcinnes/umap.\n *\n * @author andycoenen@google.com (Andy Coenen)\n */\n/**\n * @license\n * BSD 3-Clause License\n *\n * Copyright (c) 2017, Leland McInnes\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst utils = require(\"./utils\");\nclass FlatTree {\n    constructor(hyperplanes, offsets, children, indices) {\n        this.hyperplanes = hyperplanes;\n        this.offsets = offsets;\n        this.children = children;\n        this.indices = indices;\n    }\n}\nexports.FlatTree = FlatTree;\n/**\n * Build a random projection forest with ``nTrees``.\n */\nfunction makeForest(data, nNeighbors, nTrees, random) {\n    const leafSize = Math.max(10, nNeighbors);\n    const trees = utils\n        .range(nTrees)\n        .map((_, i) => makeTree(data, leafSize, i, random));\n    const forest = trees.map(tree => flattenTree(tree, leafSize));\n    return forest;\n}\nexports.makeForest = makeForest;\n/**\n * Construct a random projection tree based on ``data`` with leaves\n * of size at most ``leafSize``\n */\nfunction makeTree(data, leafSize = 30, n, random) {\n    const indices = utils.range(data.length);\n    const tree = makeEuclideanTree(data, indices, leafSize, n, random);\n    return tree;\n}\nfunction makeEuclideanTree(data, indices, leafSize = 30, q, random) {\n    if (indices.length > leafSize) {\n        const splitResults = euclideanRandomProjectionSplit(data, indices, random);\n        const { indicesLeft, indicesRight, hyperplane, offset } = splitResults;\n        const leftChild = makeEuclideanTree(data, indicesLeft, leafSize, q + 1, random);\n        const rightChild = makeEuclideanTree(data, indicesRight, leafSize, q + 1, random);\n        const node = { leftChild, rightChild, isLeaf: false, hyperplane, offset };\n        return node;\n    }\n    else {\n        const node = { indices, isLeaf: true };\n        return node;\n    }\n}\n/**\n * Given a set of ``indices`` for data points from ``data``, create\n * a random hyperplane to split the data, returning two arrays indices\n * that fall on either side of the hyperplane. This is the basis for a\n * random projection tree, which simply uses this splitting recursively.\n * This particular split uses euclidean distance to determine the hyperplane\n * and which side each data sample falls on.\n */\nfunction euclideanRandomProjectionSplit(data, indices, random) {\n    const dim = data[0].length;\n    // Select two random points, set the hyperplane between them\n    let leftIndex = utils.tauRandInt(indices.length, random);\n    let rightIndex = utils.tauRandInt(indices.length, random);\n    rightIndex += leftIndex === rightIndex ? 1 : 0;\n    rightIndex = rightIndex % indices.length;\n    const left = indices[leftIndex];\n    const right = indices[rightIndex];\n    // Compute the normal vector to the hyperplane (the vector between the two\n    // points) and the offset from the origin\n    let hyperplaneOffset = 0;\n    const hyperplaneVector = utils.zeros(dim);\n    for (let i = 0; i < hyperplaneVector.length; i++) {\n        hyperplaneVector[i] = data[left][i] - data[right][i];\n        hyperplaneOffset -=\n            (hyperplaneVector[i] * (data[left][i] + data[right][i])) / 2.0;\n    }\n    // For each point compute the margin (project into normal vector)\n    // If we are on lower side of the hyperplane put in one pile, otherwise\n    // put it in the other pile (if we hit hyperplane on the nose, flip a coin)\n    let nLeft = 0;\n    let nRight = 0;\n    const side = utils.zeros(indices.length);\n    for (let i = 0; i < indices.length; i++) {\n        let margin = hyperplaneOffset;\n        for (let d = 0; d < dim; d++) {\n            margin += hyperplaneVector[d] * data[indices[i]][d];\n        }\n        if (margin === 0) {\n            side[i] = utils.tauRandInt(2, random);\n            if (side[i] === 0) {\n                nLeft += 1;\n            }\n            else {\n                nRight += 1;\n            }\n        }\n        else if (margin > 0) {\n            side[i] = 0;\n            nLeft += 1;\n        }\n        else {\n            side[i] = 1;\n            nRight += 1;\n        }\n    }\n    // Now that we have the counts, allocate arrays\n    const indicesLeft = utils.zeros(nLeft);\n    const indicesRight = utils.zeros(nRight);\n    // Populate the arrays with indices according to which side they fell on\n    nLeft = 0;\n    nRight = 0;\n    for (let i in utils.range(side.length)) {\n        if (side[i] === 0) {\n            indicesLeft[nLeft] = indices[i];\n            nLeft += 1;\n        }\n        else {\n            indicesRight[nRight] = indices[i];\n            nRight += 1;\n        }\n    }\n    return {\n        indicesLeft,\n        indicesRight,\n        hyperplane: hyperplaneVector,\n        offset: hyperplaneOffset,\n    };\n}\nfunction flattenTree(tree, leafSize) {\n    const nNodes = numNodes(tree);\n    const nLeaves = numLeaves(tree);\n    // TODO: Verify that sparse code is not relevant...\n    const hyperplanes = utils\n        .range(nNodes)\n        .map(() => utils.zeros(tree.hyperplane ? tree.hyperplane.length : 0));\n    const offsets = utils.zeros(nNodes);\n    const children = utils.range(nNodes).map(() => [-1, -1]);\n    const indices = utils\n        .range(nLeaves)\n        .map(() => utils.range(leafSize).map(() => -1));\n    recursiveFlatten(tree, hyperplanes, offsets, children, indices, 0, 0);\n    return new FlatTree(hyperplanes, offsets, children, indices);\n}\nfunction recursiveFlatten(tree, hyperplanes, offsets, children, indices, nodeNum, leafNum) {\n    if (tree.isLeaf) {\n        children[nodeNum][0] = -leafNum;\n        // TODO: Triple check this operation corresponds to\n        // indices[leafNum : tree.indices.shape[0]] = tree.indices\n        indices[leafNum].splice(0, tree.indices.length, ...tree.indices);\n        leafNum += 1;\n        return { nodeNum, leafNum };\n    }\n    else {\n        hyperplanes[nodeNum] = tree.hyperplane;\n        offsets[nodeNum] = tree.offset;\n        children[nodeNum][0] = nodeNum + 1;\n        const oldNodeNum = nodeNum;\n        let res = recursiveFlatten(tree.leftChild, hyperplanes, offsets, children, indices, nodeNum + 1, leafNum);\n        nodeNum = res.nodeNum;\n        leafNum = res.leafNum;\n        children[oldNodeNum][1] = nodeNum + 1;\n        res = recursiveFlatten(tree.rightChild, hyperplanes, offsets, children, indices, nodeNum + 1, leafNum);\n        return { nodeNum: res.nodeNum, leafNum: res.leafNum };\n    }\n}\nfunction numNodes(tree) {\n    if (tree.isLeaf) {\n        return 1;\n    }\n    else {\n        return 1 + numNodes(tree.leftChild) + numNodes(tree.rightChild);\n    }\n}\nfunction numLeaves(tree) {\n    if (tree.isLeaf) {\n        return 1;\n    }\n    else {\n        return numLeaves(tree.leftChild) + numLeaves(tree.rightChild);\n    }\n}\n/**\n * Generate an array of sets of candidate nearest neighbors by\n * constructing a random projection forest and taking the leaves of all the\n * trees. Any given tree has leaves that are a set of potential nearest\n * neighbors. Given enough trees the set of all such leaves gives a good\n * likelihood of getting a good set of nearest neighbors in composite. Since\n * such a random projection forest is inexpensive to compute, this can be a\n * useful means of seeding other nearest neighbor algorithms.\n */\nfunction makeLeafArray(rpForest) {\n    if (rpForest.length > 0) {\n        const output = [];\n        for (let tree of rpForest) {\n            output.push(...tree.indices);\n        }\n        return output;\n    }\n    else {\n        return [[-1]];\n    }\n}\nexports.makeLeafArray = makeLeafArray;\n/**\n * Selects the side of the tree to search during flat tree search.\n */\nfunction selectSide(hyperplane, offset, point, random) {\n    let margin = offset;\n    for (let d = 0; d < point.length; d++) {\n        margin += hyperplane[d] * point[d];\n    }\n    if (margin === 0) {\n        const side = utils.tauRandInt(2, random);\n        return side;\n    }\n    else if (margin > 0) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n/**\n * Searches a flattened rp-tree for a point.\n */\nfunction searchFlatTree(point, tree, random) {\n    let node = 0;\n    while (tree.children[node][0] > 0) {\n        const side = selectSide(tree.hyperplanes[node], tree.offsets[node], point, random);\n        if (side === 0) {\n            node = tree.children[node][0];\n        }\n        else {\n            node = tree.children[node][1];\n        }\n    }\n    const index = -1 * tree.children[node][0];\n    return tree.indices[index];\n}\nexports.searchFlatTree = searchFlatTree;\n","\"use strict\";\n/**\n * @license\n *\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ==============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initTransform = exports.resetLocalConnectivity = exports.fastIntersection = exports.findABParams = exports.cosine = exports.euclidean = exports.jaccard = exports.UMAP = void 0;\n/**\n * This is a JavaScript reimplementation of UMAP (original license below), from\n * the python implementation found at https://github.com/lmcinnes/umap.\n *\n * @author andycoenen@google.com (Andy Coenen)\n */\n/**\n * @license\n * BSD 3-Clause License\n *\n * Copyright (c) 2017, Leland McInnes\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst heap = require(\"./heap\");\nconst matrix = require(\"./matrix\");\nconst nnDescent = require(\"./nn_descent\");\nconst tree = require(\"./tree\");\nconst utils = require(\"./utils\");\nconst ml_levenberg_marquardt_1 = require(\"ml-levenberg-marquardt\");\nconst SMOOTH_K_TOLERANCE = 1e-5;\nconst MIN_K_DIST_SCALE = 1e-3;\n/**\n * UMAP projection system, based on the python implementation from McInnes, L,\n * Healy, J, UMAP: Uniform Manifold Approximation and Projection for Dimension\n * Reduction (https://github.com/lmcinnes/umap).\n *\n * This implementation differs in a few regards:\n * a) The initialization of the embedding for optimization is not computed using\n *    a spectral method, rather it is initialized randomly. This avoids some\n *    computationally intensive matrix eigen computations that aren't easily\n *    ported to JavaScript.\n * b) A lot of \"extra\" functionality has been omitted from this implementation,\n *    most notably a great deal of alternate distance functions.\n *\n * This implementation provides three methods of reducing dimensionality:\n * 1) fit: fit the data synchronously\n * 2) fitAsync: fit the data asynchronously, with a callback function provided\n *      that is invoked on each optimization step.\n * 3) initializeFit / step: manually initialize the algorithm then explictly\n *      step through each epoch of the SGD optimization\n */\nclass UMAP {\n    constructor(params = {}) {\n        this.learningRate = 1.0;\n        this.localConnectivity = 1.0;\n        this.minDist = 0.1;\n        this.nComponents = 2;\n        this.nEpochs = 0;\n        this.nNeighbors = 15;\n        this.negativeSampleRate = 5;\n        this.random = Math.random;\n        this.repulsionStrength = 1.0;\n        this.setOpMixRatio = 1.0;\n        this.spread = 1.0;\n        this.transformQueueSize = 4.0;\n        // Supervised projection params\n        this.targetMetric = \"categorical\" /* categorical */;\n        this.targetWeight = 0.5;\n        this.targetNNeighbors = this.nNeighbors;\n        this.distanceFn = euclidean;\n        this.isInitialized = false;\n        this.rpForest = [];\n        // Projected embedding\n        this.embedding = [];\n        this.optimizationState = new OptimizationState();\n        const setParam = (key) => {\n            if (params[key] !== undefined)\n                this[key] = params[key];\n        };\n        setParam('distanceFn');\n        setParam('learningRate');\n        setParam('localConnectivity');\n        setParam('minDist');\n        setParam('nComponents');\n        setParam('nEpochs');\n        setParam('nNeighbors');\n        setParam('negativeSampleRate');\n        setParam('random');\n        setParam('repulsionStrength');\n        setParam('setOpMixRatio');\n        setParam('spread');\n        setParam('transformQueueSize');\n    }\n    /**\n     * Fit the data to a projected embedding space synchronously.\n     */\n    fit(X, initialEmbedding) {\n        this.initializeFit(X, initialEmbedding);\n        this.optimizeLayout();\n        return this.embedding;\n    }\n    /**\n     * Fit the data to a projected embedding space asynchronously, with a callback\n     * function invoked on every epoch of optimization.\n     */\n    fitAsync(X, initialEmbedding, callback = () => true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.initializeFit(X, initialEmbedding);\n            yield this.optimizeLayoutAsync(callback);\n            return this.embedding;\n        });\n    }\n    /**\n     * Initializes parameters needed for supervised projection.\n     */\n    setSupervisedProjection(Y, params = {}) {\n        this.Y = Y;\n        this.targetMetric = params.targetMetric || this.targetMetric;\n        this.targetWeight = params.targetWeight || this.targetWeight;\n        this.targetNNeighbors = params.targetNNeighbors || this.targetNNeighbors;\n    }\n    /**\n     * Initializes umap with precomputed KNN indices and distances.\n     */\n    setPrecomputedKNN(knnIndices, knnDistances) {\n        this.knnIndices = knnIndices;\n        this.knnDistances = knnDistances;\n    }\n    /**\n     * Initializes fit by computing KNN and a fuzzy simplicial set, as well as\n     * initializing the projected embeddings. Sets the optimization state ahead\n     * of optimization steps. Returns the number of epochs to be used for the\n     * SGD optimization.\n     */\n    initializeFit(X, initialEmbedding) {\n        if (X.length <= this.nNeighbors) {\n            throw new Error(`Not enough data points (${X.length}) to create nNeighbors: ${this.nNeighbors}.  Add more data points or adjust the configuration.`);\n        }\n        // We don't need to reinitialize if we've already initialized for this data.\n        if (this.X === X && this.isInitialized) {\n            return this.getNEpochs();\n        }\n        this.X = X;\n        if (!this.knnIndices && !this.knnDistances) {\n            const knnResults = this.nearestNeighbors(X);\n            this.knnIndices = knnResults.knnIndices;\n            this.knnDistances = knnResults.knnDistances;\n        }\n        this.graph = this.fuzzySimplicialSet(X, this.nNeighbors, this.setOpMixRatio);\n        // Set up the search graph for subsequent transformation.\n        this.makeSearchFns();\n        this.searchGraph = this.makeSearchGraph(X);\n        // Check if supervised projection, then adjust the graph.\n        this.processGraphForSupervisedProjection();\n        const { head, tail, epochsPerSample, } = this.initializeSimplicialSetEmbedding(initialEmbedding);\n        // Set the optimization routine state\n        this.optimizationState.head = head;\n        this.optimizationState.tail = tail;\n        this.optimizationState.epochsPerSample = epochsPerSample;\n        // Now, initialize the optimization steps\n        this.initializeOptimization();\n        this.prepareForOptimizationLoop();\n        this.isInitialized = true;\n        return this.getNEpochs();\n    }\n    makeSearchFns() {\n        const { initFromTree, initFromRandom } = nnDescent.makeInitializations(this.distanceFn);\n        this.initFromTree = initFromTree;\n        this.initFromRandom = initFromRandom;\n        this.search = nnDescent.makeInitializedNNSearch(this.distanceFn);\n    }\n    makeSearchGraph(X) {\n        const knnIndices = this.knnIndices;\n        const knnDistances = this.knnDistances;\n        const dims = [X.length, X.length];\n        const searchGraph = new matrix.SparseMatrix([], [], [], dims);\n        for (let i = 0; i < knnIndices.length; i++) {\n            const knn = knnIndices[i];\n            const distances = knnDistances[i];\n            for (let j = 0; j < knn.length; j++) {\n                const neighbor = knn[j];\n                const distance = distances[j];\n                if (distance > 0) {\n                    searchGraph.set(i, neighbor, distance);\n                }\n            }\n        }\n        const transpose = matrix.transpose(searchGraph);\n        return matrix.maximum(searchGraph, transpose);\n    }\n    /**\n     * Transforms data to the existing embedding space.\n     */\n    transform(toTransform) {\n        // Use the previous rawData\n        const rawData = this.X;\n        if (rawData === undefined || rawData.length === 0) {\n            throw new Error('No data has been fit.');\n        }\n        let nNeighbors = Math.floor(this.nNeighbors * this.transformQueueSize);\n        nNeighbors = Math.min(rawData.length, nNeighbors);\n        const init = nnDescent.initializeSearch(this.rpForest, rawData, toTransform, nNeighbors, this.initFromRandom, this.initFromTree, this.random);\n        const result = this.search(rawData, this.searchGraph, init, toTransform);\n        let { indices, weights: distances } = heap.deheapSort(result);\n        indices = indices.map(x => x.slice(0, this.nNeighbors));\n        distances = distances.map(x => x.slice(0, this.nNeighbors));\n        const adjustedLocalConnectivity = Math.max(0, this.localConnectivity - 1);\n        const { sigmas, rhos } = this.smoothKNNDistance(distances, this.nNeighbors, adjustedLocalConnectivity);\n        const { rows, cols, vals } = this.computeMembershipStrengths(indices, distances, sigmas, rhos);\n        const size = [toTransform.length, rawData.length];\n        let graph = new matrix.SparseMatrix(rows, cols, vals, size);\n        // This was a very specially constructed graph with constant degree.\n        // That lets us do fancy unpacking by reshaping the csr matrix indices\n        // and data. Doing so relies on the constant degree assumption!\n        const normed = matrix.normalize(graph, \"l1\" /* l1 */);\n        const csrMatrix = matrix.getCSR(normed);\n        const nPoints = toTransform.length;\n        const eIndices = utils.reshape2d(csrMatrix.indices, nPoints, this.nNeighbors);\n        const eWeights = utils.reshape2d(csrMatrix.values, nPoints, this.nNeighbors);\n        const embedding = initTransform(eIndices, eWeights, this.embedding);\n        const nEpochs = this.nEpochs\n            ? this.nEpochs / 3\n            : graph.nRows <= 10000\n                ? 100\n                : 30;\n        const graphMax = graph\n            .getValues()\n            .reduce((max, val) => (val > max ? val : max), 0);\n        graph = graph.map(value => (value < graphMax / nEpochs ? 0 : value));\n        graph = matrix.eliminateZeros(graph);\n        const epochsPerSample = this.makeEpochsPerSample(graph.getValues(), nEpochs);\n        const head = graph.getRows();\n        const tail = graph.getCols();\n        // Initialize optimization slightly differently than the fit method.\n        this.assignOptimizationStateParameters({\n            headEmbedding: embedding,\n            tailEmbedding: this.embedding,\n            head,\n            tail,\n            currentEpoch: 0,\n            nEpochs,\n            nVertices: graph.getDims()[1],\n            epochsPerSample,\n        });\n        this.prepareForOptimizationLoop();\n        return this.optimizeLayout();\n    }\n    /**\n     * Checks if we're using supervised projection, then process the graph\n     * accordingly.\n     */\n    processGraphForSupervisedProjection() {\n        const { Y, X } = this;\n        if (Y) {\n            if (Y.length !== X.length) {\n                throw new Error('Length of X and y must be equal');\n            }\n            if (this.targetMetric === \"categorical\" /* categorical */) {\n                const lt = this.targetWeight < 1.0;\n                const farDist = lt ? 2.5 * (1.0 / (1.0 - this.targetWeight)) : 1.0e12;\n                this.graph = this.categoricalSimplicialSetIntersection(this.graph, Y, farDist);\n            }\n            // TODO (andycoenen@): add non-categorical supervised embeddings.\n        }\n    }\n    /**\n     * Manually step through the optimization process one epoch at a time.\n     */\n    step() {\n        const { currentEpoch } = this.optimizationState;\n        if (currentEpoch < this.getNEpochs()) {\n            this.optimizeLayoutStep(currentEpoch);\n        }\n        return this.optimizationState.currentEpoch;\n    }\n    /**\n     * Returns the computed projected embedding.\n     */\n    getEmbedding() {\n        return this.embedding;\n    }\n    /**\n     * Compute the ``nNeighbors`` nearest points for each data point in ``X``\n     * This may be exact, but more likely is approximated via nearest neighbor\n     * descent.\n     */\n    nearestNeighbors(X) {\n        const { distanceFn, nNeighbors } = this;\n        const log2 = (n) => Math.log(n) / Math.log(2);\n        const metricNNDescent = nnDescent.makeNNDescent(distanceFn, this.random);\n        // Handle python3 rounding down from 0.5 discrpancy\n        const round = (n) => {\n            return n === 0.5 ? 0 : Math.round(n);\n        };\n        const nTrees = 5 + Math.floor(round(X.length ** 0.5 / 20.0));\n        const nIters = Math.max(5, Math.floor(Math.round(log2(X.length))));\n        this.rpForest = tree.makeForest(X, nNeighbors, nTrees, this.random);\n        const leafArray = tree.makeLeafArray(this.rpForest);\n        const { indices, weights } = metricNNDescent(X, leafArray, nNeighbors, nIters);\n        return { knnIndices: indices, knnDistances: weights };\n    }\n    /**\n     * Given a set of data X, a neighborhood size, and a measure of distance\n     * compute the fuzzy simplicial set (here represented as a fuzzy graph in\n     * the form of a sparse matrix) associated to the data. This is done by\n     * locally approximating geodesic distance at each point, creating a fuzzy\n     * simplicial set for each such point, and then combining all the local\n     * fuzzy simplicial sets into a global one via a fuzzy union.\n     */\n    fuzzySimplicialSet(X, nNeighbors, setOpMixRatio = 1.0) {\n        const { knnIndices = [], knnDistances = [], localConnectivity } = this;\n        const { sigmas, rhos } = this.smoothKNNDistance(knnDistances, nNeighbors, localConnectivity);\n        const { rows, cols, vals } = this.computeMembershipStrengths(knnIndices, knnDistances, sigmas, rhos);\n        const size = [X.length, X.length];\n        const sparseMatrix = new matrix.SparseMatrix(rows, cols, vals, size);\n        const transpose = matrix.transpose(sparseMatrix);\n        const prodMatrix = matrix.pairwiseMultiply(sparseMatrix, transpose);\n        const a = matrix.subtract(matrix.add(sparseMatrix, transpose), prodMatrix);\n        const b = matrix.multiplyScalar(a, setOpMixRatio);\n        const c = matrix.multiplyScalar(prodMatrix, 1.0 - setOpMixRatio);\n        const result = matrix.add(b, c);\n        return result;\n    }\n    /**\n     * Combine a fuzzy simplicial set with another fuzzy simplicial set\n     * generated from categorical data using categorical distances. The target\n     * data is assumed to be categorical label data (a vector of labels),\n     * and this will update the fuzzy simplicial set to respect that label data.\n     */\n    categoricalSimplicialSetIntersection(simplicialSet, target, farDist, unknownDist = 1.0) {\n        let intersection = fastIntersection(simplicialSet, target, unknownDist, farDist);\n        intersection = matrix.eliminateZeros(intersection);\n        return resetLocalConnectivity(intersection);\n    }\n    /**\n     * Compute a continuous version of the distance to the kth nearest\n     * neighbor. That is, this is similar to knn-distance but allows continuous\n     * k values rather than requiring an integral k. In esscence we are simply\n     * computing the distance such that the cardinality of fuzzy set we generate\n     * is k.\n     */\n    smoothKNNDistance(distances, k, localConnectivity = 1.0, nIter = 64, bandwidth = 1.0) {\n        const target = (Math.log(k) / Math.log(2)) * bandwidth;\n        const rho = utils.zeros(distances.length);\n        const result = utils.zeros(distances.length);\n        for (let i = 0; i < distances.length; i++) {\n            let lo = 0.0;\n            let hi = Infinity;\n            let mid = 1.0;\n            // TODO: This is very inefficient, but will do for now. FIXME\n            const ithDistances = distances[i];\n            const nonZeroDists = ithDistances.filter(d => d > 0.0);\n            if (nonZeroDists.length >= localConnectivity) {\n                let index = Math.floor(localConnectivity);\n                let interpolation = localConnectivity - index;\n                if (index > 0) {\n                    rho[i] = nonZeroDists[index - 1];\n                    if (interpolation > SMOOTH_K_TOLERANCE) {\n                        rho[i] +=\n                            interpolation * (nonZeroDists[index] - nonZeroDists[index - 1]);\n                    }\n                }\n                else {\n                    rho[i] = interpolation * nonZeroDists[0];\n                }\n            }\n            else if (nonZeroDists.length > 0) {\n                rho[i] = utils.max(nonZeroDists);\n            }\n            for (let n = 0; n < nIter; n++) {\n                let psum = 0.0;\n                for (let j = 1; j < distances[i].length; j++) {\n                    const d = distances[i][j] - rho[i];\n                    if (d > 0) {\n                        psum += Math.exp(-(d / mid));\n                    }\n                    else {\n                        psum += 1.0;\n                    }\n                }\n                if (Math.abs(psum - target) < SMOOTH_K_TOLERANCE) {\n                    break;\n                }\n                if (psum > target) {\n                    hi = mid;\n                    mid = (lo + hi) / 2.0;\n                }\n                else {\n                    lo = mid;\n                    if (hi === Infinity) {\n                        mid *= 2;\n                    }\n                    else {\n                        mid = (lo + hi) / 2.0;\n                    }\n                }\n            }\n            result[i] = mid;\n            // TODO: This is very inefficient, but will do for now. FIXME\n            if (rho[i] > 0.0) {\n                const meanIthDistances = utils.mean(ithDistances);\n                if (result[i] < MIN_K_DIST_SCALE * meanIthDistances) {\n                    result[i] = MIN_K_DIST_SCALE * meanIthDistances;\n                }\n            }\n            else {\n                const meanDistances = utils.mean(distances.map(utils.mean));\n                if (result[i] < MIN_K_DIST_SCALE * meanDistances) {\n                    result[i] = MIN_K_DIST_SCALE * meanDistances;\n                }\n            }\n        }\n        return { sigmas: result, rhos: rho };\n    }\n    /**\n     * Construct the membership strength data for the 1-skeleton of each local\n     * fuzzy simplicial set -- this is formed as a sparse matrix where each row is\n     * a local fuzzy simplicial set, with a membership strength for the\n     * 1-simplex to each other data point.\n     */\n    computeMembershipStrengths(knnIndices, knnDistances, sigmas, rhos) {\n        const nSamples = knnIndices.length;\n        const nNeighbors = knnIndices[0].length;\n        const rows = utils.zeros(nSamples * nNeighbors);\n        const cols = utils.zeros(nSamples * nNeighbors);\n        const vals = utils.zeros(nSamples * nNeighbors);\n        for (let i = 0; i < nSamples; i++) {\n            for (let j = 0; j < nNeighbors; j++) {\n                let val = 0;\n                if (knnIndices[i][j] === -1) {\n                    continue; // We didn't get the full knn for i\n                }\n                if (knnIndices[i][j] === i) {\n                    val = 0.0;\n                }\n                else if (knnDistances[i][j] - rhos[i] <= 0.0) {\n                    val = 1.0;\n                }\n                else {\n                    val = Math.exp(-((knnDistances[i][j] - rhos[i]) / sigmas[i]));\n                }\n                rows[i * nNeighbors + j] = i;\n                cols[i * nNeighbors + j] = knnIndices[i][j];\n                vals[i * nNeighbors + j] = val;\n            }\n        }\n        return { rows, cols, vals };\n    }\n    /**\n     * Initialize a fuzzy simplicial set embedding, using a specified\n     * initialisation method and then minimizing the fuzzy set cross entropy\n     * between the 1-skeletons of the high and low dimensional fuzzy simplicial\n     * sets.\n     */\n    initializeSimplicialSetEmbedding(initialEmbedding) {\n        const nEpochs = this.getNEpochs();\n        const { nComponents } = this;\n        const graphValues = this.graph.getValues();\n        let graphMax = 0;\n        for (let i = 0; i < graphValues.length; i++) {\n            const value = graphValues[i];\n            if (graphMax < graphValues[i]) {\n                graphMax = value;\n            }\n        }\n        const graph = this.graph.map(value => {\n            if (value < graphMax / nEpochs) {\n                return 0;\n            }\n            else {\n                return value;\n            }\n        });\n        // We're not computing the spectral initialization in this implementation\n        // until we determine a better eigenvalue/eigenvector computation\n        // approach\n        if (initialEmbedding) {\n            this.embedding = initialEmbedding;\n        }\n        else {\n            this.embedding = utils.zeros(graph.nRows).map(() => {\n                return utils.zeros(nComponents).map(() => {\n                    return utils.tauRand(this.random) * 20 + -10; // Random from -10 to 10\n                });\n            });\n        }\n        // Get graph data in ordered way...\n        const weights = [];\n        const head = [];\n        const tail = [];\n        const rowColValues = graph.getAll();\n        for (let i = 0; i < rowColValues.length; i++) {\n            const entry = rowColValues[i];\n            if (entry.value) {\n                weights.push(entry.value);\n                tail.push(entry.row);\n                head.push(entry.col);\n            }\n        }\n        const epochsPerSample = this.makeEpochsPerSample(weights, nEpochs);\n        return { head, tail, epochsPerSample };\n    }\n    /**\n     * Given a set of weights and number of epochs generate the number of\n     * epochs per sample for each weight.\n     */\n    makeEpochsPerSample(weights, nEpochs) {\n        const result = utils.filled(weights.length, -1.0);\n        const max = utils.max(weights);\n        const nSamples = weights.map(w => (w / max) * nEpochs);\n        nSamples.forEach((n, i) => {\n            if (n > 0)\n                result[i] = nEpochs / nSamples[i];\n        });\n        return result;\n    }\n    /**\n     * Assigns optimization state parameters from a partial optimization state.\n     */\n    assignOptimizationStateParameters(state) {\n        Object.assign(this.optimizationState, state);\n    }\n    /**\n     * Sets a few optimization state parameters that are necessary before entering\n     * the optimization step loop.\n     */\n    prepareForOptimizationLoop() {\n        // Hyperparameters\n        const { repulsionStrength, learningRate, negativeSampleRate } = this;\n        const { epochsPerSample, headEmbedding, tailEmbedding, } = this.optimizationState;\n        const dim = headEmbedding[0].length;\n        const moveOther = headEmbedding.length === tailEmbedding.length;\n        const epochsPerNegativeSample = epochsPerSample.map(e => e / negativeSampleRate);\n        const epochOfNextNegativeSample = [...epochsPerNegativeSample];\n        const epochOfNextSample = [...epochsPerSample];\n        this.assignOptimizationStateParameters({\n            epochOfNextSample,\n            epochOfNextNegativeSample,\n            epochsPerNegativeSample,\n            moveOther,\n            initialAlpha: learningRate,\n            alpha: learningRate,\n            gamma: repulsionStrength,\n            dim,\n        });\n    }\n    /**\n     * Initializes optimization state for stepwise optimization.\n     */\n    initializeOptimization() {\n        // Algorithm state\n        const headEmbedding = this.embedding;\n        const tailEmbedding = this.embedding;\n        // Initialized in initializeSimplicialSetEmbedding()\n        const { head, tail, epochsPerSample } = this.optimizationState;\n        const nEpochs = this.getNEpochs();\n        const nVertices = this.graph.nCols;\n        const { a, b } = findABParams(this.spread, this.minDist);\n        this.assignOptimizationStateParameters({\n            headEmbedding,\n            tailEmbedding,\n            head,\n            tail,\n            epochsPerSample,\n            a,\n            b,\n            nEpochs,\n            nVertices,\n        });\n    }\n    /**\n     * Improve an embedding using stochastic gradient descent to minimize the\n     * fuzzy set cross entropy between the 1-skeletons of the high dimensional\n     * and low dimensional fuzzy simplicial sets. In practice this is done by\n     * sampling edges based on their membership strength (with the (1-p) terms\n     * coming from negative sampling similar to word2vec).\n     */\n    optimizeLayoutStep(n) {\n        const { optimizationState } = this;\n        const { head, tail, headEmbedding, tailEmbedding, epochsPerSample, epochOfNextSample, epochOfNextNegativeSample, epochsPerNegativeSample, moveOther, initialAlpha, alpha, gamma, a, b, dim, nEpochs, nVertices, } = optimizationState;\n        const clipValue = 4.0;\n        for (let i = 0; i < epochsPerSample.length; i++) {\n            if (epochOfNextSample[i] > n) {\n                continue;\n            }\n            const j = head[i];\n            const k = tail[i];\n            const current = headEmbedding[j];\n            const other = tailEmbedding[k];\n            const distSquared = rDist(current, other);\n            let gradCoeff = 0;\n            if (distSquared > 0) {\n                gradCoeff = -2.0 * a * b * Math.pow(distSquared, b - 1.0);\n                gradCoeff /= a * Math.pow(distSquared, b) + 1.0;\n            }\n            for (let d = 0; d < dim; d++) {\n                const gradD = clip(gradCoeff * (current[d] - other[d]), clipValue);\n                current[d] += gradD * alpha;\n                if (moveOther) {\n                    other[d] += -gradD * alpha;\n                }\n            }\n            epochOfNextSample[i] += epochsPerSample[i];\n            const nNegSamples = Math.floor((n - epochOfNextNegativeSample[i]) / epochsPerNegativeSample[i]);\n            for (let p = 0; p < nNegSamples; p++) {\n                const k = utils.tauRandInt(nVertices, this.random);\n                const other = tailEmbedding[k];\n                const distSquared = rDist(current, other);\n                let gradCoeff = 0.0;\n                if (distSquared > 0.0) {\n                    gradCoeff = 2.0 * gamma * b;\n                    gradCoeff /=\n                        (0.001 + distSquared) * (a * Math.pow(distSquared, b) + 1);\n                }\n                else if (j === k) {\n                    continue;\n                }\n                for (let d = 0; d < dim; d++) {\n                    let gradD = 4.0;\n                    if (gradCoeff > 0.0) {\n                        gradD = clip(gradCoeff * (current[d] - other[d]), clipValue);\n                    }\n                    current[d] += gradD * alpha;\n                }\n            }\n            epochOfNextNegativeSample[i] += nNegSamples * epochsPerNegativeSample[i];\n        }\n        optimizationState.alpha = initialAlpha * (1.0 - n / nEpochs);\n        optimizationState.currentEpoch += 1;\n        return headEmbedding;\n    }\n    /**\n     * Improve an embedding using stochastic gradient descent to minimize the\n     * fuzzy set cross entropy between the 1-skeletons of the high dimensional\n     * and low dimensional fuzzy simplicial sets. In practice this is done by\n     * sampling edges based on their membership strength (with the (1-p) terms\n     * coming from negative sampling similar to word2vec).\n     */\n    optimizeLayoutAsync(epochCallback = () => true) {\n        return new Promise((resolve, reject) => {\n            const step = () => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const { nEpochs, currentEpoch } = this.optimizationState;\n                    this.embedding = this.optimizeLayoutStep(currentEpoch);\n                    const epochCompleted = this.optimizationState.currentEpoch;\n                    const shouldStop = epochCallback(epochCompleted) === false;\n                    const isFinished = epochCompleted === nEpochs;\n                    if (!shouldStop && !isFinished) {\n                        setTimeout(() => step(), 0);\n                    }\n                    else {\n                        return resolve(isFinished);\n                    }\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n            setTimeout(() => step(), 0);\n        });\n    }\n    /**\n     * Improve an embedding using stochastic gradient descent to minimize the\n     * fuzzy set cross entropy between the 1-skeletons of the high dimensional\n     * and low dimensional fuzzy simplicial sets. In practice this is done by\n     * sampling edges based on their membership strength (with the (1-p) terms\n     * coming from negative sampling similar to word2vec).\n     */\n    optimizeLayout(epochCallback = () => true) {\n        let isFinished = false;\n        let embedding = [];\n        while (!isFinished) {\n            const { nEpochs, currentEpoch } = this.optimizationState;\n            embedding = this.optimizeLayoutStep(currentEpoch);\n            const epochCompleted = this.optimizationState.currentEpoch;\n            const shouldStop = epochCallback(epochCompleted) === false;\n            isFinished = epochCompleted === nEpochs || shouldStop;\n        }\n        return embedding;\n    }\n    /**\n     * Gets the number of epochs for optimizing the projection.\n     * NOTE: This heuristic differs from the python version\n     */\n    getNEpochs() {\n        const graph = this.graph;\n        if (this.nEpochs > 0) {\n            return this.nEpochs;\n        }\n        const length = graph.nRows;\n        if (length <= 2500) {\n            return 500;\n        }\n        else if (length <= 5000) {\n            return 400;\n        }\n        else if (length <= 7500) {\n            return 300;\n        }\n        else {\n            return 200;\n        }\n    }\n}\nexports.UMAP = UMAP;\n// https://github.com/ecto/jaccard TODO: also for tsne and other projection methods\nfunction jaccard(x, y) {\n    var jaccard_dist = require('jaccard');\n    return jaccard_dist.index(x, y);\n}\nexports.jaccard = jaccard;\nfunction euclidean(x, y) {\n    let result = 0;\n    for (let i = 0; i < x.length; i++) {\n        result += (x[i] - y[i]) ** 2;\n    }\n    return Math.sqrt(result);\n}\nexports.euclidean = euclidean;\nfunction cosine(x, y) {\n    let result = 0.0;\n    let normX = 0.0;\n    let normY = 0.0;\n    for (let i = 0; i < x.length; i++) {\n        result += x[i] * y[i];\n        normX += x[i] ** 2;\n        normY += y[i] ** 2;\n    }\n    if (normX === 0 && normY === 0) {\n        return 0;\n    }\n    else if (normX === 0 || normY === 0) {\n        return 1.0;\n    }\n    else {\n        return 1.0 - result / Math.sqrt(normX * normY);\n    }\n}\nexports.cosine = cosine;\n/**\n * An interface representing the optimization state tracked between steps of\n * the SGD optimization\n */\nclass OptimizationState {\n    constructor() {\n        this.currentEpoch = 0;\n        // Data tracked during optimization steps.\n        this.headEmbedding = [];\n        this.tailEmbedding = [];\n        this.head = [];\n        this.tail = [];\n        this.epochsPerSample = [];\n        this.epochOfNextSample = [];\n        this.epochOfNextNegativeSample = [];\n        this.epochsPerNegativeSample = [];\n        this.moveOther = true;\n        this.initialAlpha = 1.0;\n        this.alpha = 1.0;\n        this.gamma = 1.0;\n        this.a = 1.5769434603113077;\n        this.b = 0.8950608779109733;\n        this.dim = 2;\n        this.nEpochs = 500;\n        this.nVertices = 0;\n    }\n}\n/**\n * Standard clamping of a value into a fixed range\n */\nfunction clip(x, clipValue) {\n    if (x > clipValue)\n        return clipValue;\n    else if (x < -clipValue)\n        return -clipValue;\n    else\n        return x;\n}\n/**\n * Reduced Euclidean distance.\n */\nfunction rDist(x, y) {\n    let result = 0.0;\n    for (let i = 0; i < x.length; i++) {\n        result += Math.pow(x[i] - y[i], 2);\n    }\n    return result;\n}\n/**\n * Fit a, b params for the differentiable curve used in lower\n * dimensional fuzzy simplicial complex construction. We want the\n * smooth curve (from a pre-defined family with simple gradient) that\n * best matches an offset exponential decay.\n */\nfunction findABParams(spread, minDist) {\n    const curve = ([a, b]) => (x) => {\n        return 1.0 / (1.0 + a * x ** (2 * b));\n    };\n    const xv = utils\n        .linear(0, spread * 3, 300)\n        .map(val => (val < minDist ? 1.0 : val));\n    const yv = utils.zeros(xv.length).map((val, index) => {\n        const gte = xv[index] >= minDist;\n        return gte ? Math.exp(-(xv[index] - minDist) / spread) : val;\n    });\n    const initialValues = [0.5, 0.5];\n    const data = { x: xv, y: yv };\n    // Default options for the algorithm (from github example)\n    const options = {\n        damping: 1.5,\n        initialValues,\n        gradientDifference: 10e-2,\n        maxIterations: 100,\n        errorTolerance: 10e-3,\n    };\n    const { parameterValues } = ml_levenberg_marquardt_1.default(data, curve, options);\n    const [a, b] = parameterValues;\n    return { a, b };\n}\nexports.findABParams = findABParams;\n/**\n * Under the assumption of categorical distance for the intersecting\n * simplicial set perform a fast intersection.\n */\nfunction fastIntersection(graph, target, unknownDist = 1.0, farDist = 5.0) {\n    return graph.map((value, row, col) => {\n        if (target[row] === -1 || target[col] === -1) {\n            return value * Math.exp(-unknownDist);\n        }\n        else if (target[row] !== target[col]) {\n            return value * Math.exp(-farDist);\n        }\n        else {\n            return value;\n        }\n    });\n}\nexports.fastIntersection = fastIntersection;\n/**\n * Reset the local connectivity requirement -- each data sample should\n * have complete confidence in at least one 1-simplex in the simplicial set.\n * We can enforce this by locally rescaling confidences, and then remerging the\n * different local simplicial sets together.\n */\nfunction resetLocalConnectivity(simplicialSet) {\n    simplicialSet = matrix.normalize(simplicialSet, \"max\" /* max */);\n    const transpose = matrix.transpose(simplicialSet);\n    const prodMatrix = matrix.pairwiseMultiply(transpose, simplicialSet);\n    simplicialSet = matrix.add(simplicialSet, matrix.subtract(transpose, prodMatrix));\n    return matrix.eliminateZeros(simplicialSet);\n}\nexports.resetLocalConnectivity = resetLocalConnectivity;\n/**\n * Given indices and weights and an original embeddings\n * initialize the positions of new points relative to the\n * indices and weights (of their neighbors in the source data).\n */\nfunction initTransform(indices, weights, embedding) {\n    const result = utils\n        .zeros(indices.length)\n        .map(z => utils.zeros(embedding[0].length));\n    for (let i = 0; i < indices.length; i++) {\n        for (let j = 0; j < indices[0].length; j++) {\n            for (let d = 0; d < embedding[0].length; d++) {\n                const a = indices[i][j];\n                result[i][d] += weights[i][j] * embedding[a][d];\n            }\n        }\n    }\n    return result;\n}\nexports.initTransform = initTransform;\n","\"use strict\";\n/**\n * @license\n *\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ==============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reshape2d = exports.rejectionSample = exports.max2d = exports.max = exports.mean = exports.sum = exports.linear = exports.ones = exports.zeros = exports.filled = exports.range = exports.empty = exports.norm = exports.tauRand = exports.tauRandInt = void 0;\n/**\n * Simple random integer function\n */\nfunction tauRandInt(n, random) {\n    return Math.floor(random() * n);\n}\nexports.tauRandInt = tauRandInt;\n/**\n * Simple random float function\n */\nfunction tauRand(random) {\n    return random();\n}\nexports.tauRand = tauRand;\n/**\n * Compute the (standard l2) norm of a vector.\n */\nfunction norm(vec) {\n    let result = 0;\n    for (let item of vec) {\n        result += item ** 2;\n    }\n    return Math.sqrt(result);\n}\nexports.norm = norm;\n/**\n * Creates an empty array (filled with undefined)\n */\nfunction empty(n) {\n    const output = [];\n    for (let i = 0; i < n; i++) {\n        output.push(undefined);\n    }\n    return output;\n}\nexports.empty = empty;\n/**\n * Creates an array filled with index values\n */\nfunction range(n) {\n    return empty(n).map((_, i) => i);\n}\nexports.range = range;\n/**\n * Creates an array filled with a specific value\n */\nfunction filled(n, v) {\n    return empty(n).map(() => v);\n}\nexports.filled = filled;\n/**\n * Creates an array filled with zeros\n */\nfunction zeros(n) {\n    return filled(n, 0);\n}\nexports.zeros = zeros;\n/**\n * Creates an array filled with ones\n */\nfunction ones(n) {\n    return filled(n, 1);\n}\nexports.ones = ones;\n/**\n * Creates an array from a to b, of length len, inclusive\n */\nfunction linear(a, b, len) {\n    return empty(len).map((_, i) => {\n        return a + i * ((b - a) / (len - 1));\n    });\n}\nexports.linear = linear;\n/**\n * Returns the sum of an array\n */\nfunction sum(input) {\n    return input.reduce((sum, val) => sum + val);\n}\nexports.sum = sum;\n/**\n * Returns the mean of an array\n */\nfunction mean(input) {\n    return sum(input) / input.length;\n}\nexports.mean = mean;\n/**\n * Returns the maximum value of an array\n */\nfunction max(input) {\n    let max = 0;\n    for (let i = 0; i < input.length; i++) {\n        max = input[i] > max ? input[i] : max;\n    }\n    return max;\n}\nexports.max = max;\n/**\n * Returns the maximum value of a 2d array\n */\nfunction max2d(input) {\n    let max = 0;\n    for (let i = 0; i < input.length; i++) {\n        for (let j = 0; j < input[i].length; j++) {\n            max = input[i][j] > max ? input[i][j] : max;\n        }\n    }\n    return max;\n}\nexports.max2d = max2d;\n/**\n * Generate nSamples many integers from 0 to poolSize such that no\n * integer is selected twice. The duplication constraint is achieved via\n * rejection sampling.\n */\nfunction rejectionSample(nSamples, poolSize, random) {\n    const result = zeros(nSamples);\n    for (let i = 0; i < nSamples; i++) {\n        let rejectSample = true;\n        while (rejectSample) {\n            const j = tauRandInt(poolSize, random);\n            let broken = false;\n            for (let k = 0; k < i; k++) {\n                if (j === result[k]) {\n                    broken = true;\n                    break;\n                }\n            }\n            if (!broken) {\n                rejectSample = false;\n            }\n            result[i] = j;\n        }\n    }\n    return result;\n}\nexports.rejectionSample = rejectionSample;\n/**\n * Reshapes a 1d array into a 2D of given dimensions.\n */\nfunction reshape2d(x, a, b) {\n    const rows = [];\n    let count = 0;\n    let index = 0;\n    if (x.length !== a * b) {\n        throw new Error('Array dimensions must match input length.');\n    }\n    for (let i = 0; i < a; i++) {\n        const col = [];\n        for (let j = 0; j < b; j++) {\n            col.push(x[index]);\n            index += 1;\n        }\n        rows.push(col);\n        count += 1;\n    }\n    return rows;\n}\nexports.reshape2d = reshape2d;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"regenerator-runtime/runtime\");\nconst umap_1 = require(\"../../Utility/UMAP/umap\");\n// create main global object\nvar tsnejs = tsnejs || { REVISION: 'ALPHA' };\n(function (global) {\n    \"use strict\";\n    // utility function\n    var assert = function (condition, message) {\n        if (!condition) {\n            throw message || \"Assertion failed\";\n        }\n    };\n    // syntax sugar\n    var getopt = function (opt, field, defaultval) {\n        if (opt.hasOwnProperty(field)) {\n            return opt[field];\n        }\n        else {\n            return defaultval;\n        }\n    };\n    // return 0 mean unit standard deviation random number\n    var return_v = false;\n    var v_val = 0.0;\n    var gaussRandom = function () {\n        if (return_v) {\n            return_v = false;\n            return v_val;\n        }\n        var u = 2 * Math.random() - 1;\n        var v = 2 * Math.random() - 1;\n        var r = u * u + v * v;\n        if (r == 0 || r > 1)\n            return gaussRandom();\n        var c = Math.sqrt(-2 * Math.log(r) / r);\n        v_val = v * c; // cache this for next function call for efficiency\n        return_v = true;\n        return u * c;\n    };\n    // return random normal number\n    var randn = function (mu, std) { return mu + gaussRandom() * std; };\n    // utilitity that creates contiguous vector of zeros of size n\n    var zeros = function (n) {\n        if (typeof (n) === 'undefined' || isNaN(n)) {\n            return [];\n        }\n        if (typeof ArrayBuffer === 'undefined') {\n            // lacking browser support\n            var arr = new Array(n);\n            for (var i = 0; i < n; i++) {\n                arr[i] = 0;\n            }\n            return arr;\n        }\n        else {\n            return new Float64Array(n); // typed arrays are faster\n        }\n    };\n    // utility that returns 2d array filled with random numbers\n    // or with value s, if provided\n    var randn2d = function (n, d, s) {\n        var uses = typeof s !== 'undefined';\n        var x = [];\n        for (var i = 0; i < n; i++) {\n            var xhere = [];\n            for (var j = 0; j < d; j++) {\n                if (uses) {\n                    xhere.push(s);\n                }\n                else {\n                    xhere.push(randn(0.0, 1e-4));\n                }\n            }\n            x.push(xhere);\n        }\n        return x;\n    };\n    // compute L2 distance between two vectors\n    var L2 = function (x1, x2) {\n        var D = x1.length;\n        var d = 0;\n        for (var i = 0; i < D; i++) {\n            var x1i = x1[i];\n            var x2i = x2[i];\n            d += (x1i - x2i) * (x1i - x2i);\n        }\n        return d;\n    };\n    // compute pairwise distance in all vectors in X\n    var xtod = function (X, distanceFn) {\n        var N = X.length;\n        var dist = zeros(N * N); // allocate contiguous array\n        for (var i = 0; i < N; i++) {\n            for (var j = i + 1; j < N; j++) {\n                var d = distanceFn(X[i], X[j]);\n                dist[i * N + j] = d;\n                dist[j * N + i] = d;\n            }\n        }\n        return dist;\n    };\n    // compute (p_{i|j} + p_{j|i})/(2n)\n    var d2p = function (D, perplexity, tol) {\n        var Nf = Math.sqrt(D.length); // this better be an integer\n        var N = Math.floor(Nf);\n        assert(N === Nf, \"D should have square number of elements.\");\n        var Htarget = Math.log(perplexity); // target entropy of distribution\n        var P = zeros(N * N); // temporary probability matrix\n        var prow = zeros(N); // a temporary storage compartment\n        for (var i = 0; i < N; i++) {\n            var betamin = -Infinity;\n            var betamax = Infinity;\n            var beta = 1; // initial value of precision\n            var done = false;\n            var maxtries = 50;\n            // perform binary search to find a suitable precision beta\n            // so that the entropy of the distribution is appropriate\n            var num = 0;\n            while (!done) {\n                //debugger;\n                // compute entropy and kernel row with beta precision\n                var psum = 0.0;\n                for (var j = 0; j < N; j++) {\n                    var pj = Math.exp(-D[i * N + j] * beta);\n                    if (i === j) {\n                        pj = 0;\n                    } // we dont care about diagonals\n                    prow[j] = pj;\n                    psum += pj;\n                }\n                // normalize p and compute entropy\n                var Hhere = 0.0;\n                for (var j = 0; j < N; j++) {\n                    if (psum == 0) {\n                        var pj = 0;\n                    }\n                    else {\n                        var pj = prow[j] / psum;\n                    }\n                    prow[j] = pj;\n                    if (pj > 1e-7)\n                        Hhere -= pj * Math.log(pj);\n                }\n                // adjust beta based on result\n                if (Hhere > Htarget) {\n                    // entropy was too high (distribution too diffuse)\n                    // so we need to increase the precision for more peaky distribution\n                    betamin = beta; // move up the bounds\n                    if (betamax === Infinity) {\n                        beta = beta * 2;\n                    }\n                    else {\n                        beta = (beta + betamax) / 2;\n                    }\n                }\n                else {\n                    // converse case. make distrubtion less peaky\n                    betamax = beta;\n                    if (betamin === -Infinity) {\n                        beta = beta / 2;\n                    }\n                    else {\n                        beta = (beta + betamin) / 2;\n                    }\n                }\n                // stopping conditions: too many tries or got a good precision\n                num++;\n                if (Math.abs(Hhere - Htarget) < tol) {\n                    done = true;\n                }\n                if (num >= maxtries) {\n                    done = true;\n                }\n            }\n            // console.log('data point ' + i + ' gets precision ' + beta + ' after ' + num + ' binary search steps.');\n            // copy over the final prow to P at row i\n            for (var j = 0; j < N; j++) {\n                P[i * N + j] = prow[j];\n            }\n        } // end loop over examples i\n        // symmetrize P and normalize it to sum to 1 over all ij\n        var Pout = zeros(N * N);\n        var N2 = N * 2;\n        for (var i = 0; i < N; i++) {\n            for (var j = 0; j < N; j++) {\n                Pout[i * N + j] = Math.max((P[i * N + j] + P[j * N + i]) / N2, 1e-100);\n            }\n        }\n        return Pout;\n    };\n    // helper function\n    function sign(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; }\n    var tSNE = function (opt) {\n        var opt = opt || {};\n        this.perplexity = getopt(opt, \"perplexity\", 30); // effective number of nearest neighbors\n        this.dim = getopt(opt, \"dim\", 2); // by default 2-D tSNE\n        this.epsilon = getopt(opt, \"epsilon\", 10); // learning rate\n        this.distanceFn = getopt(opt, \"distanceFn\", umap_1.euclidean);\n        this.iter = 0;\n    };\n    tSNE.prototype = {\n        // this function takes a set of high-dimensional points\n        // and creates matrix P from them using gaussian kernel\n        initDataRaw: function (X) {\n            var N = X.length;\n            var D = X[0].length;\n            assert(N > 0, \" X is empty? You must have some data!\");\n            assert(D > 0, \" X[0] is empty? Where is the data?\");\n            var dists = xtod(X, this.distanceFn); // convert X to distances using gaussian kernel\n            this.P = d2p(dists, this.perplexity, 1e-4); // attach to object\n            this.N = N; // back up the size of the dataset\n            this.initSolution(); // refresh this\n        },\n        initDataSeeded: function (X, seed) {\n            var N = X.length;\n            var D = X[0].length;\n            assert(N > 0, \" X is empty? You must have some data!\");\n            assert(D > 0, \" X[0] is empty? Where is the data?\");\n            var dists = xtod(X, this.distanceFn); // convert X to distances using gaussian kernel\n            this.P = d2p(dists, this.perplexity, 1e-4); // attach to object\n            this.N = N; // back up the size of the dataset\n            // generate random solution to t-SNE\n            if (seed) {\n                const maxX = Math.max(...seed.map(s => s[0]));\n                const minX = Math.min(...seed.map(s => s[0]));\n                const maxY = Math.max(...seed.map(s => s[1]));\n                const minY = Math.min(...seed.map(s => s[1]));\n                const abs = Math.max(Math.abs(minX), Math.abs(maxX), Math.abs(minY), Math.abs(maxY));\n                let result = [];\n                for (let i = 0; i < this.N; i++) {\n                    result.push([(seed[i][0] / abs) / 1000, (seed[i][1] / abs) / 1000]);\n                }\n                this.Y = result;\n            }\n            else {\n                this.Y = randn2d(this.N, this.dim, undefined); // the solution\n            }\n            this.gains = randn2d(this.N, this.dim, 1.0); // step gains to accelerate progress in unchanging directions\n            this.ystep = randn2d(this.N, this.dim, 0.0); // momentum accumulator\n            this.iter = 0;\n        },\n        // this function takes a given distance matrix and creates\n        // matrix P from them.\n        // D is assumed to be provided as a list of lists, and should be symmetric\n        initDataDist: function (D) {\n            var N = D.length;\n            assert(N > 0, \" X is empty? You must have some data!\");\n            // convert D to a (fast) typed array version\n            var dists = zeros(N * N); // allocate contiguous array\n            for (var i = 0; i < N; i++) {\n                for (var j = i + 1; j < N; j++) {\n                    var d = D[i][j];\n                    dists[i * N + j] = d;\n                    dists[j * N + i] = d;\n                }\n            }\n            this.P = d2p(dists, this.perplexity, 1e-4);\n            this.N = N;\n            this.initSolution(); // refresh this\n        },\n        // (re)initializes the solution to random\n        initSolution: function () {\n            // generate random solution to t-SNE\n            this.Y = randn2d(this.N, this.dim, undefined); // the solution\n            this.gains = randn2d(this.N, this.dim, 1.0); // step gains to accelerate progress in unchanging directions\n            this.ystep = randn2d(this.N, this.dim, 0.0); // momentum accumulator\n            this.iter = 0;\n        },\n        // return pointer to current solution\n        getSolution: function () {\n            return this.Y;\n        },\n        // perform a single step of optimization to improve the embedding\n        step: function () {\n            this.iter += 1;\n            var N = this.N;\n            var cg = this.costGrad(this.Y); // evaluate gradient\n            var cost = cg.cost;\n            var grad = cg.grad;\n            // perform gradient step\n            var ymean = zeros(this.dim);\n            for (var i = 0; i < N; i++) {\n                for (var d = 0; d < this.dim; d++) {\n                    var gid = grad[i][d];\n                    var sid = this.ystep[i][d];\n                    var gainid = this.gains[i][d];\n                    // compute gain update\n                    var newgain = sign(gid) === sign(sid) ? gainid * 0.8 : gainid + 0.2;\n                    if (newgain < 0.01)\n                        newgain = 0.01; // clamp\n                    this.gains[i][d] = newgain; // store for next turn\n                    // compute momentum step direction\n                    var momval = this.iter < 250 ? 0.5 : 0.8;\n                    var newsid = momval * sid - this.epsilon * newgain * grad[i][d];\n                    this.ystep[i][d] = newsid; // remember the step we took\n                    // step!\n                    this.Y[i][d] += newsid;\n                    ymean[d] += this.Y[i][d]; // accumulate mean so that we can center later\n                }\n            }\n            // reproject Y to be zero mean\n            for (var i = 0; i < N; i++) {\n                for (var d = 0; d < this.dim; d++) {\n                    this.Y[i][d] -= ymean[d] / N;\n                }\n            }\n            //if(this.iter%100===0) console.log('iter ' + this.iter + ', cost: ' + cost);\n            return cost; // return current cost\n        },\n        // for debugging: gradient check\n        debugGrad: function () {\n            var N = this.N;\n            var cg = this.costGrad(this.Y); // evaluate gradient\n            var cost = cg.cost;\n            var grad = cg.grad;\n            var e = 1e-5;\n            for (var i = 0; i < N; i++) {\n                for (var d = 0; d < this.dim; d++) {\n                    var yold = this.Y[i][d];\n                    this.Y[i][d] = yold + e;\n                    var cg0 = this.costGrad(this.Y);\n                    this.Y[i][d] = yold - e;\n                    var cg1 = this.costGrad(this.Y);\n                    var analytic = grad[i][d];\n                    var numerical = (cg0.cost - cg1.cost) / (2 * e);\n                    this.Y[i][d] = yold;\n                }\n            }\n        },\n        // return cost and gradient, given an arrangement\n        costGrad: function (Y) {\n            var N = this.N;\n            var dim = this.dim; // dim of output space\n            var P = this.P;\n            var pmul = this.iter < 100 ? 4 : 1; // trick that helps with local optima\n            // compute current Q distribution, unnormalized first\n            var Qu = zeros(N * N);\n            var qsum = 0.0;\n            for (var i = 0; i < N; i++) {\n                for (var j = i + 1; j < N; j++) {\n                    var dsum = 0.0;\n                    for (var d = 0; d < dim; d++) {\n                        var dhere = Y[i][d] - Y[j][d];\n                        dsum += dhere * dhere;\n                    }\n                    var qu = 1.0 / (1.0 + dsum); // Student t-distribution\n                    Qu[i * N + j] = qu;\n                    Qu[j * N + i] = qu;\n                    qsum += 2 * qu;\n                }\n            }\n            // normalize Q distribution to sum to 1\n            var NN = N * N;\n            var Q = zeros(NN);\n            for (var q = 0; q < NN; q++) {\n                Q[q] = Math.max(Qu[q] / qsum, 1e-100);\n            }\n            var cost = 0.0;\n            var grad = [];\n            for (var i = 0; i < N; i++) {\n                var gsum = new Array(dim); // init grad for point i\n                for (var d = 0; d < dim; d++) {\n                    gsum[d] = 0.0;\n                }\n                for (var j = 0; j < N; j++) {\n                    cost += -P[i * N + j] * Math.log(Q[i * N + j]); // accumulate cost (the non-constant portion at least...)\n                    var premult = 4 * (pmul * P[i * N + j] - Q[i * N + j]) * Qu[i * N + j];\n                    for (var d = 0; d < dim; d++) {\n                        gsum[d] += premult * (Y[i][d] - Y[j][d]);\n                    }\n                }\n                grad.push(gsum);\n            }\n            return { cost: cost, grad: grad };\n        }\n    };\n    global.tSNE = tSNE; // export tSNE class\n})(tsnejs);\n/**\n * Worker thread that computes a stepwise projection\n */\nself.addEventListener('message', function (e) {\n    let context = self;\n    if (e.data.messageType == 'init') {\n        context.raw = e.data;\n        context.tsne = new tsnejs.tSNE({\n            epsilon: e.data.params.learningRate,\n            perplexity: e.data.params.perplexity,\n            dim: 2,\n            distanceFn: e.data.params.distanceMetric == 'euclidean' ? umap_1.euclidean : umap_1.jaccard\n        });\n        context.tsne.initDataSeeded(e.data.input, e.data.params.seeded ? e.data.seed : undefined);\n        context.tsne.step();\n        context.postMessage(context.tsne.getSolution());\n        console.log(context.tsne.getSolution());\n    }\n    else if (context.tsne != null) {\n        context.tsne.step();\n        context.postMessage(context.tsne.getSolution());\n    }\n}, false);\n"],"sourceRoot":""}