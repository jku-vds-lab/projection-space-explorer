{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/graphology/dist/graphology.umd.min.js","webpack:///./src/components/workers/embeddings/worker_forceatlas2.ts"],"names":["Object","defineProperty","exports","value","Graph","require","NODE_X","NODE_Y","NODE_DX","NODE_DY","NODE_OLD_DX","NODE_OLD_DY","NODE_MASS","NODE_CONVERGENCE","NODE_SIZE","NODE_FIXED","EDGE_SOURCE","EDGE_TARGET","EDGE_WEIGHT","REGION_NODE","REGION_CENTER_X","REGION_CENTER_Y","REGION_SIZE","REGION_NEXT_SIBLING","REGION_FIRST_CHILD","REGION_MASS","REGION_MASS_CENTER_X","REGION_MASS_CENTER_Y","SUBDIVISION_ATTEMPTS","PPN","PPE","PPR","MAX_FORCE","iterate","options","NodeMatrix","EdgeMatrix","l","r","n","n1","n2","rn","e","w","g","s","order","length","size","adjustSizes","thetaSquared","barnesHutTheta","outboundAttCompensation","coefficient","xDist","yDist","ewc","distance","factor","RegionMatrix","outboundAttractionDistribution","barnesHutOptimize","minX","Infinity","maxX","minY","maxY","q","q2","subdivisionAttempts","Math","min","max","dx","dy","scalingRatio","pow","sqrt","gravity","strongGravityMode","edgeWeightInfluence","linLogMode","log","force","swinging","traction","nodespeed","newX","newY","slowDown","validateSettings","settings","message","graphToByteArrays","graph","nodes","edges","index","i","j","Float32Array","getNodeAttribute","degree","source","target","getEdgeAttribute","assignLayoutChanges","setNodeAttribute","collectLayoutChanges","positions","create","x","y","assignH","other","objects","Array","prototype","slice","call","arguments","k","DEFAULT_SETTINGS","abstractSynchronousLayout","params","assign","iterations","validationError","Error","matrices","self","addEventListener","postMessage","data","forEach","node","addNode","meshIndex","edge","addEdge","destination","floor","res","type","progress"],"mappings":"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","file":"forceatlas2.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/components/workers/embeddings/worker_forceatlas2.ts\");\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).graphology=t()}(this,(function(){\"use strict\";function e(t){return(e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(t)}function t(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function n(e){return(n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function o(e,t,n){return(o=i()?Reflect.construct:function(e,t,n){var i=[null];i.push.apply(i,t);var o=new(Function.bind.apply(e,i));return n&&r(o,n.prototype),o}).apply(null,arguments)}function a(e){var t=\"function\"==typeof Map?new Map:void 0;return(a=function(e){if(null===e||(i=e,-1===Function.toString.call(i).indexOf(\"[native code]\")))return e;var i;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,a)}function a(){return o(e,arguments,n(this).constructor)}return a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),r(a,e)})(e)}function c(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function d(){for(var e=arguments[0]||{},t=1,n=arguments.length;t<n;t++)if(arguments[t])for(var r in arguments[t])e[r]=arguments[t][r];return e}function u(e,t,n,r){var i=e._nodes.get(t),o=null;return i?o=\"mixed\"===r?i.out&&i.out[n]||i.undirected&&i.undirected[n]:\"directed\"===r?i.out&&i.out[n]:i.undirected&&i.undirected[n]:o}function s(t){return null!==t&&\"object\"===e(t)&&\"function\"==typeof t.addUndirectedEdgeWithKey&&\"function\"==typeof t.dropNode}function h(t){return\"object\"===e(t)&&null!==t&&t.constructor===Object}function f(e){for(var t=\"\"+e,n=\"\",r=0,i=t.length;r<i;r++){n=t[i-r-1]+n,(r-2)%3||r===i-1||(n=\",\"+n)}return n}function p(e,t,n){Object.defineProperty(e,t,{enumerable:!1,configurable:!1,writable:!0,value:n})}function g(e,t,n){var r={enumerable:!0,configurable:!0};\"function\"==typeof n?r.get=n:(r.value=n,r.writable=!1),Object.defineProperty(e,t,r)}function l(){}function y(){y.init.call(this)}function v(e){return void 0===e._maxListeners?y.defaultMaxListeners:e._maxListeners}function w(e,t,n){if(t)e.call(n);else for(var r=e.length,i=S(e,r),o=0;o<r;++o)i[o].call(n)}function b(e,t,n,r){if(t)e.call(n,r);else for(var i=e.length,o=S(e,i),a=0;a<i;++a)o[a].call(n,r)}function m(e,t,n,r,i){if(t)e.call(n,r,i);else for(var o=e.length,a=S(e,o),c=0;c<o;++c)a[c].call(n,r,i)}function _(e,t,n,r,i,o){if(t)e.call(n,r,i,o);else for(var a=e.length,c=S(e,a),d=0;d<a;++d)c[d].call(n,r,i,o)}function G(e,t,n,r){if(t)e.apply(n,r);else for(var i=e.length,o=S(e,i),a=0;a<i;++a)o[a].apply(n,r)}function E(e,t,n,r){var i,o,a,c;if(\"function\"!=typeof n)throw new TypeError('\"listener\" argument must be a function');if((o=e._events)?(o.newListener&&(e.emit(\"newListener\",t,n.listener?n.listener:n),o=e._events),a=o[t]):(o=e._events=new l,e._eventsCount=0),a){if(\"function\"==typeof a?a=o[t]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),!a.warned&&(i=v(e))&&i>0&&a.length>i){a.warned=!0;var d=new Error(\"Possible EventEmitter memory leak detected. \"+a.length+\" \"+t+\" listeners added. Use emitter.setMaxListeners() to increase limit\");d.name=\"MaxListenersExceededWarning\",d.emitter=e,d.type=t,d.count=a.length,c=d,\"function\"==typeof console.warn?console.warn(c):console.log(c)}}else a=o[t]=n,++e._eventsCount;return e}function k(e,t,n){var r=!1;function i(){e.removeListener(t,i),r||(r=!0,n.apply(e,arguments))}return i.listener=n,i}function x(e){var t=this._events;if(t){var n=t[e];if(\"function\"==typeof n)return 1;if(n)return n.length}return 0}function S(e,t){for(var n=new Array(t);t--;)n[t]=e[t];return n}function A(e){Object.defineProperty(this,\"_next\",{writable:!1,enumerable:!1,value:e}),this.done=!1}l.prototype=Object.create(null),y.EventEmitter=y,y.usingDomains=!1,y.prototype.domain=void 0,y.prototype._events=void 0,y.prototype._maxListeners=void 0,y.defaultMaxListeners=10,y.init=function(){this.domain=null,y.usingDomains&&(void 0).active,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new l,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},y.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||e<0||isNaN(e))throw new TypeError('\"n\" argument must be a positive number');return this._maxListeners=e,this},y.prototype.getMaxListeners=function(){return v(this)},y.prototype.emit=function(e){var t,n,r,i,o,a,c,d=\"error\"===e;if(a=this._events)d=d&&null==a.error;else if(!d)return!1;if(c=this.domain,d){if(t=arguments[1],!c){if(t instanceof Error)throw t;var u=new Error('Uncaught, unspecified \"error\" event. ('+t+\")\");throw u.context=t,u}return t||(t=new Error('Uncaught, unspecified \"error\" event')),t.domainEmitter=this,t.domain=c,t.domainThrown=!1,c.emit(\"error\",t),!1}if(!(n=a[e]))return!1;var s=\"function\"==typeof n;switch(r=arguments.length){case 1:w(n,s,this);break;case 2:b(n,s,this,arguments[1]);break;case 3:m(n,s,this,arguments[1],arguments[2]);break;case 4:_(n,s,this,arguments[1],arguments[2],arguments[3]);break;default:for(i=new Array(r-1),o=1;o<r;o++)i[o-1]=arguments[o];G(n,s,this,i)}return!0},y.prototype.addListener=function(e,t){return E(this,e,t,!1)},y.prototype.on=y.prototype.addListener,y.prototype.prependListener=function(e,t){return E(this,e,t,!0)},y.prototype.once=function(e,t){if(\"function\"!=typeof t)throw new TypeError('\"listener\" argument must be a function');return this.on(e,k(this,e,t)),this},y.prototype.prependOnceListener=function(e,t){if(\"function\"!=typeof t)throw new TypeError('\"listener\" argument must be a function');return this.prependListener(e,k(this,e,t)),this},y.prototype.removeListener=function(e,t){var n,r,i,o,a;if(\"function\"!=typeof t)throw new TypeError('\"listener\" argument must be a function');if(!(r=this._events))return this;if(!(n=r[e]))return this;if(n===t||n.listener&&n.listener===t)0==--this._eventsCount?this._events=new l:(delete r[e],r.removeListener&&this.emit(\"removeListener\",e,n.listener||t));else if(\"function\"!=typeof n){for(i=-1,o=n.length;o-- >0;)if(n[o]===t||n[o].listener&&n[o].listener===t){a=n[o].listener,i=o;break}if(i<0)return this;if(1===n.length){if(n[0]=void 0,0==--this._eventsCount)return this._events=new l,this;delete r[e]}else!function(e,t){for(var n=t,r=n+1,i=e.length;r<i;n+=1,r+=1)e[n]=e[r];e.pop()}(n,i);r.removeListener&&this.emit(\"removeListener\",e,a||t)}return this},y.prototype.removeAllListeners=function(e){var t,n;if(!(n=this._events))return this;if(!n.removeListener)return 0===arguments.length?(this._events=new l,this._eventsCount=0):n[e]&&(0==--this._eventsCount?this._events=new l:delete n[e]),this;if(0===arguments.length){for(var r,i=Object.keys(n),o=0;o<i.length;++o)\"removeListener\"!==(r=i[o])&&this.removeAllListeners(r);return this.removeAllListeners(\"removeListener\"),this._events=new l,this._eventsCount=0,this}if(\"function\"==typeof(t=n[e]))this.removeListener(e,t);else if(t)do{this.removeListener(e,t[t.length-1])}while(t[0]);return this},y.prototype.listeners=function(e){var t,n=this._events;return n&&(t=n[e])?\"function\"==typeof t?[t.listener||t]:function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(t):[]},y.listenerCount=function(e,t){return\"function\"==typeof e.listenerCount?e.listenerCount(t):x.call(e,t)},y.prototype.listenerCount=x,y.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]},A.prototype.next=function(){if(this.done)return{done:!0};var e=this._next();return e.done&&(this.done=!0),e},\"undefined\"!=typeof Symbol&&(A.prototype[Symbol.iterator]=function(){return this}),A.of=function(){var e=arguments,t=e.length,n=0;return new A((function(){return n>=t?{done:!0}:{done:!1,value:e[n++]}}))},A.empty=function(){var e=new A(null);return e.done=!0,e},A.is=function(e){return e instanceof A||\"object\"==typeof e&&null!==e&&\"function\"==typeof e.next};var N=A,D=function(e,t){for(var n,r=arguments.length>1?t:1/0,i=r!==1/0?new Array(r):[],o=0;;){if(o===r)return i;if((n=e.next()).done)return o!==t?i.slice(0,o):i;i[o++]=n.value}},L=function(e){function n(t,n){var r;return(r=e.call(this)||this).name=\"GraphError\",r.message=t||\"\",r.data=n||{},r}return t(n,e),n}(a(Error)),j=function(e){function n(t,r){var i;return(i=e.call(this,t,r)||this).name=\"InvalidArgumentsGraphError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(i),n.prototype.constructor),i}return t(n,e),n}(L),U=function(e){function n(t,r){var i;return(i=e.call(this,t,r)||this).name=\"NotFoundGraphError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(i),n.prototype.constructor),i}return t(n,e),n}(L),z=function(e){function n(t,r){var i;return(i=e.call(this,t,r)||this).name=\"UsageGraphError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(i),n.prototype.constructor),i}return t(n,e),n}(L);function O(e,t){this.key=e,this.attributes=t,this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.directedSelfLoops=0,this.undirectedSelfLoops=0,this.in={},this.out={},this.undirected={}}function K(e,t){this.key=e,this.attributes=t||{},this.inDegree=0,this.outDegree=0,this.directedSelfLoops=0,this.in={},this.out={}}function M(e,t){this.key=e,this.attributes=t||{},this.undirectedDegree=0,this.undirectedSelfLoops=0,this.undirected={}}function C(e,t,n,r,i){this.key=e,this.attributes=i,this.source=n,this.target=r,this.generatedKey=t}function T(e,t,n,r,i){this.key=e,this.attributes=i,this.source=n,this.target=r,this.generatedKey=t}function P(e,t,n,r,i,o,a){var c=e.multi,d=t?\"undirected\":\"out\",u=t?\"undirected\":\"in\",s=o[d][i];void 0===s&&(s=c?new Set:n,o[d][i]=s),c&&s.add(n),r!==i&&void 0===a[u][r]&&(a[u][r]=s)}function W(e,t,n){var r=e.multi,i=n.source,o=n.target,a=i.key,c=o.key,d=i[t?\"undirected\":\"out\"],u=t?\"undirected\":\"in\";if(c in d)if(r){var s=d[c];1===s.size?(delete d[c],delete o[u][a]):s.delete(n)}else delete d[c];r||delete o[u][a]}K.prototype.upgradeToMixed=function(){this.undirectedDegree=0,this.undirectedSelfLoops=0,this.undirected={}},M.prototype.upgradeToMixed=function(){this.inDegree=0,this.outDegree=0,this.directedSelfLoops=0,this.in={},this.out={}};var R=[{name:function(e){return\"get\".concat(e,\"Attribute\")},attacher:function(e,t,n,r){e.prototype[t]=function(e,i){var o;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new z(\"Graph.\".concat(t,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new z(\"Graph.\".concat(t,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var a=\"\"+e,c=\"\"+i;if(i=arguments[2],!(o=u(this,a,c,n)))throw new U(\"Graph.\".concat(t,': could not find an edge for the given path (\"').concat(a,'\" - \"').concat(c,'\").'))}else if(e=\"\"+e,!(o=this._edges.get(e)))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" edge in the graph.'));if(\"mixed\"!==n&&!(o instanceof r))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" ').concat(n,\" edge in the graph.\"));return o.attributes[i]}}},{name:function(e){return\"get\".concat(e,\"Attributes\")},attacher:function(e,t,n,r){e.prototype[t]=function(e){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new z(\"Graph.\".concat(t,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>1){if(this.multi)throw new z(\"Graph.\".concat(t,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+e,a=\"\"+arguments[1];if(!(i=u(this,o,a,n)))throw new U(\"Graph.\".concat(t,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else if(e=\"\"+e,!(i=this._edges.get(e)))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" edge in the graph.'));if(\"mixed\"!==n&&!(i instanceof r))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" ').concat(n,\" edge in the graph.\"));return i.attributes}}},{name:function(e){return\"has\".concat(e,\"Attribute\")},attacher:function(e,t,n,r){e.prototype[t]=function(e,i){var o;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new z(\"Graph.\".concat(t,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new z(\"Graph.\".concat(t,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var a=\"\"+e,c=\"\"+i;if(i=arguments[2],!(o=u(this,a,c,n)))throw new U(\"Graph.\".concat(t,': could not find an edge for the given path (\"').concat(a,'\" - \"').concat(c,'\").'))}else if(e=\"\"+e,!(o=this._edges.get(e)))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" edge in the graph.'));if(\"mixed\"!==n&&!(o instanceof r))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" ').concat(n,\" edge in the graph.\"));return o.attributes.hasOwnProperty(i)}}},{name:function(e){return\"set\".concat(e,\"Attribute\")},attacher:function(e,t,n,r){e.prototype[t]=function(e,i,o){var a;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new z(\"Graph.\".concat(t,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>3){if(this.multi)throw new z(\"Graph.\".concat(t,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var c=\"\"+e,d=\"\"+i;if(i=arguments[2],o=arguments[3],!(a=u(this,c,d,n)))throw new U(\"Graph.\".concat(t,': could not find an edge for the given path (\"').concat(c,'\" - \"').concat(d,'\").'))}else if(e=\"\"+e,!(a=this._edges.get(e)))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" edge in the graph.'));if(\"mixed\"!==n&&!(a instanceof r))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" ').concat(n,\" edge in the graph.\"));return a.attributes[i]=o,this.emit(\"edgeAttributesUpdated\",{key:a.key,type:\"set\",meta:{name:i,value:o}}),this}}},{name:function(e){return\"update\".concat(e,\"Attribute\")},attacher:function(e,t,n,r){e.prototype[t]=function(e,i,o){var a;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new z(\"Graph.\".concat(t,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>3){if(this.multi)throw new z(\"Graph.\".concat(t,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var c=\"\"+e,d=\"\"+i;if(i=arguments[2],o=arguments[3],!(a=u(this,c,d,n)))throw new U(\"Graph.\".concat(t,': could not find an edge for the given path (\"').concat(c,'\" - \"').concat(d,'\").'))}else if(e=\"\"+e,!(a=this._edges.get(e)))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" edge in the graph.'));if(\"function\"!=typeof o)throw new j(\"Graph.\".concat(t,\": updater should be a function.\"));if(\"mixed\"!==n&&!(a instanceof r))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" ').concat(n,\" edge in the graph.\"));return a.attributes[i]=o(a.attributes[i]),this.emit(\"edgeAttributesUpdated\",{key:a.key,type:\"set\",meta:{name:i,value:a.attributes[i]}}),this}}},{name:function(e){return\"remove\".concat(e,\"Attribute\")},attacher:function(e,t,n,r){e.prototype[t]=function(e,i){var o;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new z(\"Graph.\".concat(t,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new z(\"Graph.\".concat(t,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var a=\"\"+e,c=\"\"+i;if(i=arguments[2],!(o=u(this,a,c,n)))throw new U(\"Graph.\".concat(t,': could not find an edge for the given path (\"').concat(a,'\" - \"').concat(c,'\").'))}else if(e=\"\"+e,!(o=this._edges.get(e)))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" edge in the graph.'));if(\"mixed\"!==n&&!(o instanceof r))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" ').concat(n,\" edge in the graph.\"));return delete o.attributes[i],this.emit(\"edgeAttributesUpdated\",{key:o.key,type:\"remove\",meta:{name:i}}),this}}},{name:function(e){return\"replace\".concat(e,\"Attributes\")},attacher:function(e,t,n,r){e.prototype[t]=function(e,i){var o;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new z(\"Graph.\".concat(t,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new z(\"Graph.\".concat(t,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var a=\"\"+e,c=\"\"+i;if(i=arguments[2],!(o=u(this,a,c,n)))throw new U(\"Graph.\".concat(t,': could not find an edge for the given path (\"').concat(a,'\" - \"').concat(c,'\").'))}else if(e=\"\"+e,!(o=this._edges.get(e)))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" edge in the graph.'));if(!h(i))throw new j(\"Graph.\".concat(t,\": provided attributes are not a plain object.\"));if(\"mixed\"!==n&&!(o instanceof r))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" ').concat(n,\" edge in the graph.\"));var d=o.attributes;return o.attributes=i,this.emit(\"edgeAttributesUpdated\",{key:o.key,type:\"replace\",meta:{before:d,after:i}}),this}}},{name:function(e){return\"merge\".concat(e,\"Attributes\")},attacher:function(e,t,n,r){e.prototype[t]=function(e,i){var o;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new z(\"Graph.\".concat(t,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new z(\"Graph.\".concat(t,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var a=\"\"+e,c=\"\"+i;if(i=arguments[2],!(o=u(this,a,c,n)))throw new U(\"Graph.\".concat(t,': could not find an edge for the given path (\"').concat(a,'\" - \"').concat(c,'\").'))}else if(e=\"\"+e,!(o=this._edges.get(e)))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" edge in the graph.'));if(!h(i))throw new j(\"Graph.\".concat(t,\": provided attributes are not a plain object.\"));if(\"mixed\"!==n&&!(o instanceof r))throw new U(\"Graph.\".concat(t,': could not find the \"').concat(e,'\" ').concat(n,\" edge in the graph.\"));return d(o.attributes,i),this.emit(\"edgeAttributesUpdated\",{key:o.key,type:\"merge\",meta:{data:i}}),this}}}];var I=function(){var e,t=arguments,n=-1;return new N((function r(){if(!e){if(++n>=t.length)return{done:!0};e=t[n]}var i=e.next();return i.done?(e=null,r()):i}))},F=[{name:\"edges\",type:\"mixed\"},{name:\"inEdges\",type:\"directed\",direction:\"in\"},{name:\"outEdges\",type:\"directed\",direction:\"out\"},{name:\"inboundEdges\",type:\"mixed\",direction:\"in\"},{name:\"outboundEdges\",type:\"mixed\",direction:\"out\"},{name:\"directedEdges\",type:\"directed\"},{name:\"undirectedEdges\",type:\"undirected\"}];function Y(e,t){for(var n in t)t[n]instanceof Set?t[n].forEach((function(t){return e.push(t.key)})):e.push(t[n].key)}function J(e,t){for(var n in e){var r=e[n];t(r.key,r.attributes,r.source.key,r.target.key,r.source.attributes,r.target.attributes)}}function q(e,t){for(var n in e)e[n].forEach((function(e){return t(e.key,e.attributes,e.source.key,e.target.key,e.source.attributes,e.target.attributes)}))}function B(e){var t=Object.keys(e),n=t.length,r=null,i=0;return new N((function o(){var a;if(r){var c=r.next();if(c.done)return r=null,i++,o();a=c.value}else{if(i>=n)return{done:!0};var d=t[i];if((a=e[d])instanceof Set)return r=a.values(),o();i++}return{done:!1,value:[a.key,a.attributes,a.source.key,a.target.key,a.source.attributes,a.target.attributes]}}))}function H(e,t,n){n in t&&(t[n]instanceof Set?t[n].forEach((function(t){return e.push(t.key)})):e.push(t[n].key))}function Q(e,t,n){if(t in e)if(e[t]instanceof Set)e[t].forEach((function(e){return n(e.key,e.attributes,e.source.key,e.target.key,e.source.attributes,e.target.attributes)}));else{var r=e[t];n(r.key,r.attributes,r.source.key,r.target.key,r.source.attributes,r.target.attributes)}}function V(e,t){var n=e[t];if(n instanceof Set){var r=n.values();return new N((function(){var e=r.next();if(e.done)return e;var t=e.value;return{done:!1,value:[t.key,t.attributes,t.source.key,t.target.key,t.source.attributes,t.target.attributes]}}))}return N.of([n.key,n.attributes,n.source.key,n.target.key,n.source.attributes,n.target.attributes])}function X(e,t){if(0===e.size)return[];if(\"mixed\"===t||t===e.type)return D(e._edges.keys(),e._edges.size);var n=\"undirected\"===t?e.undirectedSize:e.directedSize,r=new Array(n),i=\"undirected\"===t,o=0;return e._edges.forEach((function(e,t){e instanceof T===i&&(r[o++]=t)})),r}function Z(e,t,n){if(0!==e.size)if(\"mixed\"===t||t===e.type)e._edges.forEach((function(e,t){var r=e.attributes,i=e.source,o=e.target;n(t,r,i.key,o.key,i.attributes,o.attributes)}));else{var r=\"undirected\"===t;e._edges.forEach((function(e,t){if(e instanceof T===r){var i=e.attributes,o=e.source,a=e.target;n(t,i,o.key,a.key,o.attributes,a.attributes)}}))}}function $(e,t){return 0===e.size?N.empty():\"mixed\"===t?(n=e._edges.values(),new N((function(){var e=n.next();if(e.done)return e;var t=e.value;return{value:[t.key,t.attributes,t.source.key,t.target.key,t.source.attributes,t.target.attributes],done:!1}}))):(n=e._edges.values(),new N((function e(){var r=n.next();if(r.done)return r;var i=r.value;return i instanceof T==(\"undirected\"===t)?{value:[i.key,i.attributes,i.source.key,i.target.key,i.source.attributes,i.target.attributes],done:!1}:e()})));var n}function ee(e,t,n){var r=[];return\"undirected\"!==e&&(\"out\"!==t&&Y(r,n.in),\"in\"!==t&&Y(r,n.out)),\"directed\"!==e&&Y(r,n.undirected),r}function te(e,t,n,r,i){var o=e?q:J;\"undirected\"!==t&&(\"out\"!==n&&o(r.in,i),\"in\"!==n&&o(r.out,i)),\"directed\"!==t&&o(r.undirected,i)}function ne(e,t,n){var r=N.empty();return\"undirected\"!==e&&(\"out\"!==t&&void 0!==n.in&&(r=I(r,B(n.in))),\"in\"!==t&&void 0!==n.out&&(r=I(r,B(n.out)))),\"directed\"!==e&&void 0!==n.undirected&&(r=I(r,B(n.undirected))),r}function re(e,t,n,r){var i=[];return\"undirected\"!==e&&(void 0!==n.in&&\"out\"!==t&&H(i,n.in,r),void 0!==n.out&&\"in\"!==t&&H(i,n.out,r)),\"directed\"!==e&&void 0!==n.undirected&&H(i,n.undirected,r),i}function ie(e,t,n,r,i){\"undirected\"!==e&&(void 0!==n.in&&\"out\"!==t&&Q(n.in,r,i),void 0!==n.out&&\"in\"!==t&&Q(n.out,r,i)),\"directed\"!==e&&void 0!==n.undirected&&Q(n.undirected,r,i)}function oe(e,t,n,r){var i=N.empty();return\"undirected\"!==e&&(void 0!==n.in&&\"out\"!==t&&r in n.in&&(i=I(i,V(n.in,r))),void 0!==n.out&&\"in\"!==t&&r in n.out&&(i=I(i,V(n.out,r)))),\"directed\"!==e&&void 0!==n.undirected&&r in n.undirected&&(i=I(i,V(n.undirected,r))),i}var ae=[{name:\"neighbors\",type:\"mixed\"},{name:\"inNeighbors\",type:\"directed\",direction:\"in\"},{name:\"outNeighbors\",type:\"directed\",direction:\"out\"},{name:\"inboundNeighbors\",type:\"mixed\",direction:\"in\"},{name:\"outboundNeighbors\",type:\"mixed\",direction:\"out\"},{name:\"directedNeighbors\",type:\"directed\"},{name:\"undirectedNeighbors\",type:\"undirected\"}];function ce(e,t){if(void 0!==t)for(var n in t)e.add(n)}function de(e,t,n){if(\"mixed\"!==e){if(\"undirected\"===e)return Object.keys(n.undirected);if(\"string\"==typeof t)return Object.keys(n[t])}var r=new Set;return\"undirected\"!==e&&(\"out\"!==t&&ce(r,n.in),\"in\"!==t&&ce(r,n.out)),\"directed\"!==e&&ce(r,n.undirected),D(r.values(),r.size)}function ue(e,t,n){for(var r in t){var i=t[r];i instanceof Set&&(i=i.values().next().value);var o=i.source,a=i.target,c=o===e?a:o;n(c.key,c.attributes)}}function se(e,t,n,r){for(var i in n){var o=n[i];o instanceof Set&&(o=o.values().next().value);var a=o.source,c=o.target,d=a===t?c:a;e.has(d.key)||(e.add(d.key),r(d.key,d.attributes))}}function he(e,t){var n=Object.keys(t),r=n.length,i=0;return new N((function(){if(i>=r)return{done:!0};var o=t[n[i++]];o instanceof Set&&(o=o.values().next().value);var a=o.source,c=o.target,d=a===e?c:a;return{done:!1,value:[d.key,d.attributes]}}))}function fe(e,t,n){var r=Object.keys(n),i=r.length,o=0;return new N((function a(){if(o>=i)return{done:!0};var c=n[r[o++]];c instanceof Set&&(c=c.values().next().value);var d=c.source,u=c.target,s=d===t?u:d;return e.has(s.key)?a():(e.add(s.key),{done:!1,value:[s.key,s.attributes]})}))}function pe(e,t,n,r,i){var o=e._nodes.get(r);if(\"undirected\"!==t){if(\"out\"!==n&&void 0!==o.in)for(var a in o.in)if(a===i)return!0;if(\"in\"!==n&&void 0!==o.out)for(var c in o.out)if(c===i)return!0}if(\"directed\"!==t&&void 0!==o.undirected)for(var d in o.undirected)if(d===i)return!0;return!1}function ge(e,t){var n=t.name,r=t.type,i=t.direction,o=\"forEach\"+n[0].toUpperCase()+n.slice(1,-1);e.prototype[o]=function(e,t){if(\"mixed\"===r||\"mixed\"===this.type||r===this.type){e=\"\"+e;var n=this._nodes.get(e);if(void 0===n)throw new U(\"Graph.\".concat(o,': could not find the \"').concat(e,'\" node in the graph.'));!function(e,t,n,r){if(\"mixed\"!==e){if(\"undirected\"===e)return ue(n,n.undirected,r);if(\"string\"==typeof t)return ue(n,n[t],r)}var i=new Set;\"undirected\"!==e&&(\"out\"!==t&&se(i,n,n.in,r),\"in\"!==t&&se(i,n,n.out,r)),\"directed\"!==e&&se(i,n,n.undirected,r)}(\"mixed\"===r?this.type:r,i,n,t)}}}function le(e,t){var n=t.name,r=t.type,i=t.direction,o=n.slice(0,-1)+\"Entries\";e.prototype[o]=function(e){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return N.empty();e=\"\"+e;var t=this._nodes.get(e);if(void 0===t)throw new U(\"Graph.\".concat(o,': could not find the \"').concat(e,'\" node in the graph.'));return function(e,t,n){if(\"mixed\"!==e){if(\"undirected\"===e)return he(n,n.undirected);if(\"string\"==typeof t)return he(n,n[t])}var r=N.empty(),i=new Set;return\"undirected\"!==e&&(\"out\"!==t&&(r=I(r,fe(i,n,n.in))),\"in\"!==t&&(r=I(r,fe(i,n,n.out)))),\"directed\"!==e&&(r=I(r,fe(i,n,n.undirected))),r}(\"mixed\"===r?this.type:r,i,t)}}function ye(e,t){var n={key:e};return Object.keys(t.attributes).length&&(n.attributes=d({},t.attributes)),n}function ve(e,t){var n={source:t.source.key,target:t.target.key};return t.generatedKey||(n.key=e),Object.keys(t.attributes).length&&(n.attributes=d({},t.attributes)),t instanceof T&&(n.undirected=!0),n}function we(e){return h(e)?\"key\"in e?!(\"attributes\"in e)||h(e.attributes)&&null!==e.attributes?null:\"invalid-attributes\":\"no-key\":\"not-object\"}function be(e){return h(e)?\"source\"in e?\"target\"in e?!(\"attributes\"in e)||h(e.attributes)&&null!==e.attributes?\"undirected\"in e&&\"boolean\"!=typeof e.undirected?\"invalid-undirected\":null:\"invalid-attributes\":\"no-target\":\"no-source\":\"not-object\"}var me=new Set([\"directed\",\"undirected\",\"mixed\"]),_e=new Set([\"domain\",\"_events\",\"_eventsCount\",\"_maxListeners\"]),Ge={allowSelfLoops:!0,edgeKeyGenerator:null,multi:!1,type:\"mixed\"};function Ee(e,t,n,r,i,o,a,c){if(!r&&\"undirected\"===e.type)throw new z(\"Graph.\".concat(t,\": you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.\"));if(r&&\"directed\"===e.type)throw new z(\"Graph.\".concat(t,\": you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.\"));if(c&&!h(c))throw new j(\"Graph.\".concat(t,': invalid attributes. Expecting an object but got \"').concat(c,'\"'));if(o=\"\"+o,a=\"\"+a,c=c||{},!e.allowSelfLoops&&o===a)throw new z(\"Graph.\".concat(t,': source & target are the same (\"').concat(o,\"\\\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.\"));var d=e._nodes.get(o),u=e._nodes.get(a);if(!d)throw new U(\"Graph.\".concat(t,': source node \"').concat(o,'\" not found.'));if(!u)throw new U(\"Graph.\".concat(t,': target node \"').concat(a,'\" not found.'));var s={key:null,undirected:r,source:o,target:a,attributes:c};if(n&&(i=e._edgeKeyGenerator(s)),i=\"\"+i,e._edges.has(i))throw new z(\"Graph.\".concat(t,': the \"').concat(i,'\" edge already exists in the graph.'));if(!e.multi&&(r?void 0!==d.undirected[a]:void 0!==d.out[a]))throw new z(\"Graph.\".concat(t,': an edge linking \"').concat(o,'\" to \"').concat(a,\"\\\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.\"));var f=new(r?T:C)(i,n,d,u,c);return e._edges.set(i,f),o===a?r?d.undirectedSelfLoops++:d.directedSelfLoops++:r?(d.undirectedDegree++,u.undirectedDegree++):(d.outDegree++,u.inDegree++),P(e,r,f,o,a,d,u),r?e._undirectedSize++:e._directedSize++,s.key=i,e.emit(\"edgeAdded\",s),i}function ke(e,t,n,r,i,o,a,c){if(!r&&\"undirected\"===e.type)throw new z(\"Graph.\".concat(t,\": you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.\"));if(r&&\"directed\"===e.type)throw new z(\"Graph.\".concat(t,\": you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.\"));if(c&&!h(c))throw new j(\"Graph.\".concat(t,': invalid attributes. Expecting an object but got \"').concat(c,'\"'));if(o=\"\"+o,a=\"\"+a,c=c||{},!e.allowSelfLoops&&o===a)throw new z(\"Graph.\".concat(t,': source & target are the same (\"').concat(o,\"\\\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.\"));var s,f,p=e._nodes.get(o),g=e._nodes.get(a),l=null;if(!n&&(s=e._edges.get(i))){if(s.source!==o||s.target!==a||r&&(s.source!==a||s.target!==o))throw new z(\"Graph.\".concat(t,': inconsistency detected when attempting to merge the \"').concat(i,'\" edge with \"').concat(o,'\" source & \"').concat(a,'\" target vs. (').concat(s.source,\", \").concat(s.target,\").\"));l=i}if(l||e.multi||!p||(r?void 0===p.undirected[a]:void 0===p.out[a])||(f=u(e,o,a,r?\"undirected\":\"directed\")),f)return c?(d(f.attributes,c),l):l;var y={key:null,undirected:r,source:o,target:a,attributes:c};if(n&&(i=e._edgeKeyGenerator(y)),i=\"\"+i,e._edges.has(i))throw new z(\"Graph.\".concat(t,': the \"').concat(i,'\" edge already exists in the graph.'));return p||(e.addNode(o),p=e._nodes.get(o),o===a&&(g=p)),g||(e.addNode(a),g=e._nodes.get(a)),s=new(r?T:C)(i,n,p,g,c),e._edges.set(i,s),o===a?r?p.undirectedSelfLoops++:p.directedSelfLoops++:r?(p.undirectedDegree++,g.undirectedDegree++):(p.outDegree++,g.inDegree++),P(e,r,s,o,a,p,g),r?e._undirectedSize++:e._directedSize++,y.key=i,e.emit(\"edgeAdded\",y),i}var xe=function(e){function n(t){var n;if(n=e.call(this)||this,(t=d({},Ge,t)).edgeKeyGenerator&&\"function\"!=typeof t.edgeKeyGenerator)throw new j(\"Graph.constructor: invalid 'edgeKeyGenerator' option. Expecting a function but got \\\"\".concat(t.edgeKeyGenerator,'\".'));if(\"boolean\"!=typeof t.multi)throw new j(\"Graph.constructor: invalid 'multi' option. Expecting a boolean but got \\\"\".concat(t.multi,'\".'));if(!me.has(t.type))throw new j('Graph.constructor: invalid \\'type\\' option. Should be one of \"mixed\", \"directed\" or \"undirected\" but got \"'.concat(t.type,'\".'));if(\"boolean\"!=typeof t.allowSelfLoops)throw new j(\"Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \\\"\".concat(t.allowSelfLoops,'\".'));var r,i=\"mixed\"===t.type?O:\"directed\"===t.type?K:M;return p(c(n),\"NodeDataClass\",i),p(c(n),\"_attributes\",{}),p(c(n),\"_nodes\",new Map),p(c(n),\"_edges\",new Map),p(c(n),\"_directedSize\",0),p(c(n),\"_undirectedSize\",0),p(c(n),\"_edgeKeyGenerator\",t.edgeKeyGenerator||(r=0,function(){return\"_geid\".concat(r++,\"_\")})),p(c(n),\"_options\",t),_e.forEach((function(e){return p(c(n),e,n[e])})),g(c(n),\"order\",(function(){return n._nodes.size})),g(c(n),\"size\",(function(){return n._edges.size})),g(c(n),\"directedSize\",(function(){return n._directedSize})),g(c(n),\"undirectedSize\",(function(){return n._undirectedSize})),g(c(n),\"multi\",n._options.multi),g(c(n),\"type\",n._options.type),g(c(n),\"allowSelfLoops\",n._options.allowSelfLoops),n}t(n,e);var r=n.prototype;return r.hasNode=function(e){return this._nodes.has(\"\"+e)},r.hasDirectedEdge=function(e,t){if(\"undirected\"===this.type)return!1;if(1===arguments.length){var n=\"\"+e,r=this._edges.get(n);return!!r&&r instanceof C}if(2===arguments.length){e=\"\"+e,t=\"\"+t;var i=this._nodes.get(e);if(!i)return!1;var o=i.out[t];return!!o&&(!this.multi||!!o.size)}throw new j(\"Graph.hasDirectedEdge: invalid arity (\".concat(arguments.length,\", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.\"))},r.hasUndirectedEdge=function(e,t){if(\"directed\"===this.type)return!1;if(1===arguments.length){var n=\"\"+e,r=this._edges.get(n);return!!r&&r instanceof T}if(2===arguments.length){e=\"\"+e,t=\"\"+t;var i=this._nodes.get(e);if(!i)return!1;var o=i.undirected[t];return!!o&&(!this.multi||!!o.size)}throw new j(\"Graph.hasDirectedEdge: invalid arity (\".concat(arguments.length,\", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.\"))},r.hasEdge=function(e,t){if(1===arguments.length){var n=\"\"+e;return this._edges.has(n)}if(2===arguments.length){e=\"\"+e,t=\"\"+t;var r=this._nodes.get(e);if(!r)return!1;var i=void 0!==r.out&&r.out[t];return i||(i=void 0!==r.undirected&&r.undirected[t]),!!i&&(!this.multi||!!i.size)}throw new j(\"Graph.hasEdge: invalid arity (\".concat(arguments.length,\", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.\"))},r.directedEdge=function(e,t){if(\"undirected\"!==this.type){if(e=\"\"+e,t=\"\"+t,this.multi)throw new z(\"Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.\");var n=this._nodes.get(e);if(!n)throw new U('Graph.directedEdge: could not find the \"'.concat(e,'\" source node in the graph.'));if(!this._nodes.has(t))throw new U('Graph.directedEdge: could not find the \"'.concat(t,'\" target node in the graph.'));var r=n.out&&n.out[t]||void 0;return r?r.key:void 0}},r.undirectedEdge=function(e,t){if(\"directed\"!==this.type){if(e=\"\"+e,t=\"\"+t,this.multi)throw new z(\"Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.\");var n=this._nodes.get(e);if(!n)throw new U('Graph.undirectedEdge: could not find the \"'.concat(e,'\" source node in the graph.'));if(!this._nodes.has(t))throw new U('Graph.undirectedEdge: could not find the \"'.concat(t,'\" target node in the graph.'));var r=n.undirected&&n.undirected[t]||void 0;return r?r.key:void 0}},r.edge=function(e,t){if(this.multi)throw new z(\"Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.\");e=\"\"+e,t=\"\"+t;var n=this._nodes.get(e);if(!n)throw new U('Graph.edge: could not find the \"'.concat(e,'\" source node in the graph.'));if(!this._nodes.has(t))throw new U('Graph.edge: could not find the \"'.concat(t,'\" target node in the graph.'));var r=n.out&&n.out[t]||n.undirected&&n.undirected[t]||void 0;if(r)return r.key},r.inDegree=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(\"boolean\"!=typeof t)throw new j('Graph.inDegree: Expecting a boolean but got \"'.concat(t,'\" for the second parameter (allowing self-loops to be counted).'));e=\"\"+e;var n=this._nodes.get(e);if(!n)throw new U('Graph.inDegree: could not find the \"'.concat(e,'\" node in the graph.'));if(\"undirected\"===this.type)return 0;var r=t?n.directedSelfLoops:0;return n.inDegree+r},r.outDegree=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(\"boolean\"!=typeof t)throw new j('Graph.outDegree: Expecting a boolean but got \"'.concat(t,'\" for the second parameter (allowing self-loops to be counted).'));e=\"\"+e;var n=this._nodes.get(e);if(!n)throw new U('Graph.outDegree: could not find the \"'.concat(e,'\" node in the graph.'));if(\"undirected\"===this.type)return 0;var r=t?n.directedSelfLoops:0;return n.outDegree+r},r.directedDegree=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(\"boolean\"!=typeof t)throw new j('Graph.directedDegree: Expecting a boolean but got \"'.concat(t,'\" for the second parameter (allowing self-loops to be counted).'));if(e=\"\"+e,!this.hasNode(e))throw new U('Graph.directedDegree: could not find the \"'.concat(e,'\" node in the graph.'));return\"undirected\"===this.type?0:this.inDegree(e,t)+this.outDegree(e,t)},r.undirectedDegree=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(\"boolean\"!=typeof t)throw new j('Graph.undirectedDegree: Expecting a boolean but got \"'.concat(t,'\" for the second parameter (allowing self-loops to be counted).'));if(e=\"\"+e,!this.hasNode(e))throw new U('Graph.undirectedDegree: could not find the \"'.concat(e,'\" node in the graph.'));if(\"directed\"===this.type)return 0;var n=this._nodes.get(e),r=t?2*n.undirectedSelfLoops:0;return n.undirectedDegree+r},r.degree=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(\"boolean\"!=typeof t)throw new j('Graph.degree: Expecting a boolean but got \"'.concat(t,'\" for the second parameter (allowing self-loops to be counted).'));if(e=\"\"+e,!this.hasNode(e))throw new U('Graph.degree: could not find the \"'.concat(e,'\" node in the graph.'));var n=0;return\"undirected\"!==this.type&&(n+=this.directedDegree(e,t)),\"directed\"!==this.type&&(n+=this.undirectedDegree(e,t)),n},r.source=function(e){e=\"\"+e;var t=this._edges.get(e);if(!t)throw new U('Graph.source: could not find the \"'.concat(e,'\" edge in the graph.'));return t.source.key},r.target=function(e){e=\"\"+e;var t=this._edges.get(e);if(!t)throw new U('Graph.target: could not find the \"'.concat(e,'\" edge in the graph.'));return t.target.key},r.extremities=function(e){e=\"\"+e;var t=this._edges.get(e);if(!t)throw new U('Graph.extremities: could not find the \"'.concat(e,'\" edge in the graph.'));return[t.source.key,t.target.key]},r.opposite=function(e,t){if(e=\"\"+e,t=\"\"+t,!this._nodes.has(e))throw new U('Graph.opposite: could not find the \"'.concat(e,'\" node in the graph.'));var n=this._edges.get(t);if(!n)throw new U('Graph.opposite: could not find the \"'.concat(t,'\" edge in the graph.'));var r=n.source,i=n.target,o=r.key,a=i.key;if(e!==o&&e!==a)throw new U('Graph.opposite: the \"'.concat(e,'\" node is not attached to the \"').concat(t,'\" edge (').concat(o,\", \").concat(a,\").\"));return e===o?a:o},r.undirected=function(e){e=\"\"+e;var t=this._edges.get(e);if(!t)throw new U('Graph.undirected: could not find the \"'.concat(e,'\" edge in the graph.'));return t instanceof T},r.directed=function(e){e=\"\"+e;var t=this._edges.get(e);if(!t)throw new U('Graph.directed: could not find the \"'.concat(e,'\" edge in the graph.'));return t instanceof C},r.selfLoop=function(e){e=\"\"+e;var t=this._edges.get(e);if(!t)throw new U('Graph.selfLoop: could not find the \"'.concat(e,'\" edge in the graph.'));return t.source===t.target},r.addNode=function(e,t){if(t&&!h(t))throw new j('Graph.addNode: invalid attributes. Expecting an object but got \"'.concat(t,'\"'));if(e=\"\"+e,t=t||{},this._nodes.has(e))throw new z('Graph.addNode: the \"'.concat(e,'\" node already exist in the graph.'));var n=new this.NodeDataClass(e,t);return this._nodes.set(e,n),this.emit(\"nodeAdded\",{key:e,attributes:t}),e},r.mergeNode=function(e,t){if(t&&!h(t))throw new j('Graph.mergeNode: invalid attributes. Expecting an object but got \"'.concat(t,'\"'));e=\"\"+e,t=t||{};var n=this._nodes.get(e);return n?(t&&d(n.attributes,t),e):(n=new this.NodeDataClass(e,t),this._nodes.set(e,n),this.emit(\"nodeAdded\",{key:e,attributes:t}),e)},r.dropNode=function(e){if(e=\"\"+e,!this.hasNode(e))throw new U('Graph.dropNode: could not find the \"'.concat(e,'\" node in the graph.'));for(var t=this.edges(e),n=0,r=t.length;n<r;n++)this.dropEdge(t[n]);var i=this._nodes.get(e);this._nodes.delete(e),this.emit(\"nodeDropped\",{key:e,attributes:i.attributes})},r.dropEdge=function(e){var t;if(arguments.length>1){var n=\"\"+arguments[0],r=\"\"+arguments[1];if(!(t=u(this,n,r,this.type)))throw new U('Graph.dropEdge: could not find the \"'.concat(n,'\" -> \"').concat(r,'\" edge in the graph.'))}else if(e=\"\"+e,!(t=this._edges.get(e)))throw new U('Graph.dropEdge: could not find the \"'.concat(e,'\" edge in the graph.'));this._edges.delete(t.key);var i=t,o=i.source,a=i.target,c=i.attributes,d=t instanceof T;return o===a?o.selfLoops--:d?(o.undirectedDegree--,a.undirectedDegree--):(o.outDegree--,a.inDegree--),W(this,d,t),d?this._undirectedSize--:this._directedSize--,this.emit(\"edgeDropped\",{key:e,attributes:c,source:o.key,target:a.key,undirected:d}),this},r.clear=function(){this._edges.clear(),this._nodes.clear(),this.emit(\"cleared\")},r.clearEdges=function(){this._edges.clear(),this.clearIndex(),this.emit(\"edgesCleared\")},r.getAttribute=function(e){return this._attributes[e]},r.getAttributes=function(){return this._attributes},r.hasAttribute=function(e){return this._attributes.hasOwnProperty(e)},r.setAttribute=function(e,t){return this._attributes[e]=t,this.emit(\"attributesUpdated\",{type:\"set\",meta:{name:e,value:t}}),this},r.updateAttribute=function(e,t){if(\"function\"!=typeof t)throw new j(\"Graph.updateAttribute: updater should be a function.\");return this._attributes[e]=t(this._attributes[e]),this.emit(\"attributesUpdated\",{type:\"set\",meta:{name:e,value:this._attributes[e]}}),this},r.removeAttribute=function(e){return delete this._attributes[e],this.emit(\"attributesUpdated\",{type:\"remove\",meta:{name:e}}),this},r.replaceAttributes=function(e){if(!h(e))throw new j(\"Graph.replaceAttributes: provided attributes are not a plain object.\");var t=this._attributes;return this._attributes=e,this.emit(\"attributesUpdated\",{type:\"replace\",meta:{before:t,after:e}}),this},r.mergeAttributes=function(e){if(!h(e))throw new j(\"Graph.mergeAttributes: provided attributes are not a plain object.\");return this._attributes=d(this._attributes,e),this.emit(\"attributesUpdated\",{type:\"merge\",meta:{data:this._attributes}}),this},r.getNodeAttribute=function(e,t){e=\"\"+e;var n=this._nodes.get(e);if(!n)throw new U('Graph.getNodeAttribute: could not find the \"'.concat(e,'\" node in the graph.'));return n.attributes[t]},r.getNodeAttributes=function(e){e=\"\"+e;var t=this._nodes.get(e);if(!t)throw new U('Graph.getNodeAttributes: could not find the \"'.concat(e,'\" node in the graph.'));return t.attributes},r.hasNodeAttribute=function(e,t){e=\"\"+e;var n=this._nodes.get(e);if(!n)throw new U('Graph.hasNodeAttribute: could not find the \"'.concat(e,'\" node in the graph.'));return n.attributes.hasOwnProperty(t)},r.setNodeAttribute=function(e,t,n){e=\"\"+e;var r=this._nodes.get(e);if(!r)throw new U('Graph.setNodeAttribute: could not find the \"'.concat(e,'\" node in the graph.'));if(arguments.length<3)throw new j(\"Graph.setNodeAttribute: not enough arguments. Either you forgot to pass the attribute's name or value, or you meant to use #.replaceNodeAttributes / #.mergeNodeAttributes instead.\");return r.attributes[t]=n,this.emit(\"nodeAttributesUpdated\",{key:e,type:\"set\",meta:{name:t,value:n}}),this},r.updateNodeAttribute=function(e,t,n){e=\"\"+e;var r=this._nodes.get(e);if(!r)throw new U('Graph.updateNodeAttribute: could not find the \"'.concat(e,'\" node in the graph.'));if(arguments.length<3)throw new j(\"Graph.updateNodeAttribute: not enough arguments. Either you forgot to pass the attribute's name or updater, or you meant to use #.replaceNodeAttributes / #.mergeNodeAttributes instead.\");if(\"function\"!=typeof n)throw new j(\"Graph.updateAttribute: updater should be a function.\");var i=r.attributes;return i[t]=n(i[t]),this.emit(\"nodeAttributesUpdated\",{key:e,type:\"set\",meta:{name:t,value:i[t]}}),this},r.removeNodeAttribute=function(e,t){e=\"\"+e;var n=this._nodes.get(e);if(!n)throw new U('Graph.hasNodeAttribute: could not find the \"'.concat(e,'\" node in the graph.'));return delete n.attributes[t],this.emit(\"nodeAttributesUpdated\",{key:e,type:\"remove\",meta:{name:t}}),this},r.replaceNodeAttributes=function(e,t){e=\"\"+e;var n=this._nodes.get(e);if(!n)throw new U('Graph.replaceNodeAttributes: could not find the \"'.concat(e,'\" node in the graph.'));if(!h(t))throw new j(\"Graph.replaceNodeAttributes: provided attributes are not a plain object.\");var r=n.attributes;return n.attributes=t,this.emit(\"nodeAttributesUpdated\",{key:e,type:\"replace\",meta:{before:r,after:t}}),this},r.mergeNodeAttributes=function(e,t){e=\"\"+e;var n=this._nodes.get(e);if(!n)throw new U('Graph.mergeNodeAttributes: could not find the \"'.concat(e,'\" node in the graph.'));if(!h(t))throw new j(\"Graph.mergeNodeAttributes: provided attributes are not a plain object.\");return d(n.attributes,t),this.emit(\"nodeAttributesUpdated\",{key:e,type:\"merge\",meta:{data:t}}),this},r.forEach=function(e){if(\"function\"!=typeof e)throw new j(\"Graph.forEach: expecting a callback.\");this._edges.forEach((function(t,n){var r=t.source,i=t.target;e(r.key,i.key,r.attributes,i.attributes,n,t.attributes)}))},r.adjacency=function(){var e=this._edges.values();return new N((function(){var t=e.next();if(t.done)return t;var n=t.value,r=n.source,i=n.target;return{done:!1,value:[r.key,i.key,r.attributes,i.attributes,n.key,n.attributes]}}))},r.nodes=function(){return D(this._nodes.keys(),this._nodes.size)},r.forEachNode=function(e){if(\"function\"!=typeof e)throw new j(\"Graph.forEachNode: expecting a callback.\");this._nodes.forEach((function(t,n){e(n,t.attributes)}))},r.nodeEntries=function(){var e=this._nodes.values();return new N((function(){var t=e.next();if(t.done)return t;var n=t.value;return{value:[n.key,n.attributes],done:!1}}))},r.exportNode=function(e){e=\"\"+e;var t=this._nodes.get(e);if(!t)throw new U('Graph.exportNode: could not find the \"'.concat(e,'\" node in the graph.'));return ye(e,t)},r.exportEdge=function(e){e=\"\"+e;var t=this._edges.get(e);if(!t)throw new U('Graph.exportEdge: could not find the \"'.concat(e,'\" edge in the graph.'));return ve(e,t)},r.export=function(){var e=new Array(this._nodes.size),t=0;this._nodes.forEach((function(n,r){e[t++]=ye(r,n)}));var n=new Array(this._edges.size);return t=0,this._edges.forEach((function(e,r){n[t++]=ve(r,e)})),{attributes:this.getAttributes(),nodes:e,edges:n}},r.importNode=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=we(e);if(n){if(\"not-object\"===n)throw new j('Graph.importNode: invalid serialized node. A serialized node should be a plain object with at least a \"key\" property.');if(\"no-key\"===n)throw new j(\"Graph.importNode: no key provided.\");if(\"invalid-attributes\"===n)throw new j(\"Graph.importNode: invalid attributes. Attributes should be a plain object, null or omitted.\")}var r=e.key,i=e.attributes,o=void 0===i?{}:i;return t?this.mergeNode(r,o):this.addNode(r,o),this},r.importEdge=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=be(e);if(n){if(\"not-object\"===n)throw new j('Graph.importEdge: invalid serialized edge. A serialized edge should be a plain object with at least a \"source\" & \"target\" property.');if(\"no-source\"===n)throw new j(\"Graph.importEdge: missing souce.\");if(\"no-target\"===n)throw new j(\"Graph.importEdge: missing target.\");if(\"invalid-attributes\"===n)throw new j(\"Graph.importEdge: invalid attributes. Attributes should be a plain object, null or omitted.\");if(\"invalid-undirected\"===n)throw new j(\"Graph.importEdge: invalid undirected. Undirected should be boolean or omitted.\")}var r=e.source,i=e.target,o=e.attributes,a=void 0===o?{}:o,c=e.undirected,d=void 0!==c&&c;return\"key\"in e?(t?d?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:d?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey).call(this,e.key,r,i,a):(t?d?this.mergeUndirectedEdge:this.mergeDirectedEdge:d?this.addUndirectedEdge:this.addDirectedEdge).call(this,r,i,a),this},r.import=function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(s(e))return this.import(e.export(),n),this;if(!h(e))throw new j(\"Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.\");if(e.attributes){if(!h(e.attributes))throw new j(\"Graph.import: invalid attributes. Expecting a plain object.\");n?this.mergeAttributes(e.attributes):this.replaceAttributes(e.attributes)}return e.nodes&&e.nodes.forEach((function(e){return t.importNode(e,n)})),e.edges&&e.edges.forEach((function(e){return t.importEdge(e,n)})),this},r.nullCopy=function(e){return new n(d({},this._options,e))},r.emptyCopy=function(e){var t=new n(d({},this._options,e));return this._nodes.forEach((function(e,n){e=new t.NodeDataClass(n,d({},e.attributes)),t._nodes.set(n,e)})),t},r.copy=function(){var e=new n(this._options);return e.import(this),e},r.upgradeToMixed=function(){return\"mixed\"===this.type||(this._nodes.forEach((function(e){return e.upgradeToMixed()})),this._options.type=\"mixed\",g(this,\"type\",this._options.type),p(this,\"NodeDataClass\",O)),this},r.upgradeToMulti=function(){return this.multi||(this._options.multi=!0,g(this,\"multi\",!0),(e=this)._nodes.forEach((function(t,n){if(t.out)for(var r in t.out){var i=new Set;i.add(t.out[r]),t.out[r]=i,e._nodes.get(r).in[n]=i}if(t.undirected)for(var o in t.undirected)if(!(o>n)){var a=new Set;a.add(t.undirected[o]),t.undirected[o]=a,e._nodes.get(o).undirected[n]=a}}))),this;var e},r.clearIndex=function(){return this._nodes.forEach((function(e){void 0!==e.in&&(e.in={},e.out={}),void 0!==e.undirected&&(e.undirected={})})),this},r.toJSON=function(){return this.export()},r.toString=function(){var e=this.order>1||0===this.order,t=this.size>1||0===this.size;return\"Graph<\".concat(f(this.order),\" node\").concat(e?\"s\":\"\",\", \").concat(f(this.size),\" edge\").concat(t?\"s\":\"\",\">\")},r.inspect=function(){var e=this,t={};this._nodes.forEach((function(e,n){t[n]=e.attributes}));var n={},r={};this._edges.forEach((function(t,i){var o=t instanceof T?\"--\":\"->\",a=\"\",c=\"(\".concat(t.source.key,\")\").concat(o,\"(\").concat(t.target.key,\")\");t.generatedKey?e.multi&&(void 0===r[c]?r[c]=0:r[c]++,a+=\"\".concat(r[c],\". \")):a+=\"[\".concat(i,\"]: \"),n[a+=c]=t.attributes}));var i={};for(var o in this)this.hasOwnProperty(o)&&!_e.has(o)&&\"function\"!=typeof this[o]&&(i[o]=this[o]);return i.attributes=this._attributes,i.nodes=t,i.edges=n,p(i,\"constructor\",this.constructor),i},n}(y);\"undefined\"!=typeof Symbol&&(xe.prototype[Symbol.for(\"nodejs.util.inspect.custom\")]=xe.prototype.inspect),[{name:function(e){return\"\".concat(e,\"Edge\")},generateKey:!0},{name:function(e){return\"\".concat(e,\"DirectedEdge\")},generateKey:!0,type:\"directed\"},{name:function(e){return\"\".concat(e,\"UndirectedEdge\")},generateKey:!0,type:\"undirected\"},{name:function(e){return\"\".concat(e,\"EdgeWithKey\")}},{name:function(e){return\"\".concat(e,\"DirectedEdgeWithKey\")},type:\"directed\"},{name:function(e){return\"\".concat(e,\"UndirectedEdgeWithKey\")},type:\"undirected\"}].forEach((function(e){[\"add\",\"merge\"].forEach((function(t){var n=e.name(t),r=\"add\"===t?Ee:ke;e.generateKey?xe.prototype[n]=function(t,i,o){return r(this,n,!0,\"undirected\"===(e.type||this.type),null,t,i,o)}:xe.prototype[n]=function(t,i,o,a){return r(this,n,!1,\"undirected\"===(e.type||this.type),t,i,o,a)}}))})),\"undefined\"!=typeof Symbol&&(xe.prototype[Symbol.iterator]=xe.prototype.adjacency),function(e){R.forEach((function(t){var n=t.name,r=t.attacher;r(e,n(\"Edge\"),\"mixed\",C),r(e,n(\"DirectedEdge\"),\"directed\",C),r(e,n(\"UndirectedEdge\"),\"undirected\",T)}))}(xe),function(e){F.forEach((function(t){!function(e,t){var n=t.name,r=t.type,i=t.direction;e.prototype[n]=function(e,t){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return[];if(!arguments.length)return X(this,r);if(1===arguments.length){e=\"\"+e;var o=this._nodes.get(e);if(void 0===o)throw new U(\"Graph.\".concat(n,': could not find the \"').concat(e,'\" node in the graph.'));return ee(\"mixed\"===r?this.type:r,i,o)}if(2===arguments.length){e=\"\"+e,t=\"\"+t;var a=this._nodes.get(e);if(!a)throw new U(\"Graph.\".concat(n,':  could not find the \"').concat(e,'\" source node in the graph.'));if(!this._nodes.has(t))throw new U(\"Graph.\".concat(n,':  could not find the \"').concat(t,'\" target node in the graph.'));return re(r,i,a,t)}throw new j(\"Graph.\".concat(n,\": too many arguments (expecting 0, 1 or 2 and got \").concat(arguments.length,\").\"))}}(e,t),function(e,t){var n=t.name,r=t.type,i=t.direction,o=\"forEach\"+n[0].toUpperCase()+n.slice(1,-1);e.prototype[o]=function(e,t,n){if(\"mixed\"===r||\"mixed\"===this.type||r===this.type){if(1===arguments.length)return Z(this,r,n=e);if(2===arguments.length){e=\"\"+e,n=t;var a=this._nodes.get(e);if(void 0===a)throw new U(\"Graph.\".concat(o,': could not find the \"').concat(e,'\" node in the graph.'));return te(this.multi,\"mixed\"===r?this.type:r,i,a,n)}if(3===arguments.length){e=\"\"+e,t=\"\"+t;var c=this._nodes.get(e);if(!c)throw new U(\"Graph.\".concat(o,':  could not find the \"').concat(e,'\" source node in the graph.'));if(!this._nodes.has(t))throw new U(\"Graph.\".concat(o,':  could not find the \"').concat(t,'\" target node in the graph.'));return ie(r,i,c,t,n)}throw new j(\"Graph.\".concat(o,\": too many arguments (expecting 1, 2 or 3 and got \").concat(arguments.length,\").\"))}}}(e,t),function(e,t){var n=t.name,r=t.type,i=t.direction,o=n.slice(0,-1)+\"Entries\";e.prototype[o]=function(e,t){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return N.empty();if(!arguments.length)return $(this,r);if(1===arguments.length){e=\"\"+e;var n=this._nodes.get(e);if(!n)throw new U(\"Graph.\".concat(o,': could not find the \"').concat(e,'\" node in the graph.'));return ne(r,i,n)}if(2===arguments.length){e=\"\"+e,t=\"\"+t;var a=this._nodes.get(e);if(!a)throw new U(\"Graph.\".concat(o,':  could not find the \"').concat(e,'\" source node in the graph.'));if(!this._nodes.has(t))throw new U(\"Graph.\".concat(o,':  could not find the \"').concat(t,'\" target node in the graph.'));return oe(r,i,a,t)}throw new j(\"Graph.\".concat(o,\": too many arguments (expecting 0, 1 or 2 and got \").concat(arguments.length,\").\"))}}(e,t)}))}(xe),function(e){ae.forEach((function(t){!function(e,t){var n=t.name,r=t.type,i=t.direction;e.prototype[n]=function(e){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return[];if(2===arguments.length){var t=\"\"+arguments[0],o=\"\"+arguments[1];if(!this._nodes.has(t))throw new U(\"Graph.\".concat(n,': could not find the \"').concat(t,'\" node in the graph.'));if(!this._nodes.has(o))throw new U(\"Graph.\".concat(n,': could not find the \"').concat(o,'\" node in the graph.'));return pe(this,r,i,t,o)}if(1===arguments.length){e=\"\"+e;var a=this._nodes.get(e);if(void 0===a)throw new U(\"Graph.\".concat(n,': could not find the \"').concat(e,'\" node in the graph.'));var c=de(\"mixed\"===r?this.type:r,i,a);return c}throw new j(\"Graph.\".concat(n,\": invalid number of arguments (expecting 1 or 2 and got \").concat(arguments.length,\").\"))}}(e,t),ge(e,t),le(e,t)}))}(xe);var Se=function(e){function n(t){return e.call(this,d({type:\"directed\"},t))||this}return t(n,e),n}(xe),Ae=function(e){function n(t){return e.call(this,d({type:\"undirected\"},t))||this}return t(n,e),n}(xe),Ne=function(e){function n(t){return e.call(this,d({multi:!0},t))||this}return t(n,e),n}(xe),De=function(e){function n(t){return e.call(this,d({multi:!0,type:\"directed\"},t))||this}return t(n,e),n}(xe),Le=function(e){function n(t){return e.call(this,d({multi:!0,type:\"undirected\"},t))||this}return t(n,e),n}(xe);function je(e){e.from=function(t,n){var r=new e(n);return r.import(t),r}}return je(xe),je(Se),je(Ae),je(Ne),je(De),je(Le),xe.Graph=xe,xe.DirectedGraph=Se,xe.UndirectedGraph=Ae,xe.MultiGraph=Ne,xe.MultiDirectedGraph=De,xe.MultiUndirectedGraph=Le,xe.InvalidArgumentsGraphError=j,xe.NotFoundGraphError=U,xe.UsageGraphError=z,xe}));\n//# sourceMappingURL=graphology.umd.min.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Graph = require('graphology');\n/* eslint no-constant-condition: 0 */\n/**\n * Graphology ForceAtlas2 Iteration\n * =================================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0, NODE_Y = 1, NODE_DX = 2, NODE_DY = 3, NODE_OLD_DX = 4, NODE_OLD_DY = 5, NODE_MASS = 6, NODE_CONVERGENCE = 7, NODE_SIZE = 8, NODE_FIXED = 9;\nvar EDGE_SOURCE = 0, EDGE_TARGET = 1, EDGE_WEIGHT = 2;\nvar REGION_NODE = 0, REGION_CENTER_X = 1, REGION_CENTER_Y = 2, REGION_SIZE = 3, REGION_NEXT_SIBLING = 4, REGION_FIRST_CHILD = 5, REGION_MASS = 6, REGION_MASS_CENTER_X = 7, REGION_MASS_CENTER_Y = 8;\nvar SUBDIVISION_ATTEMPTS = 3;\n/**\n * Constants.\n */\nvar PPN = 10, PPE = 3, PPR = 9;\nvar MAX_FORCE = 10;\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @param  {Float32Array} EdgeMatrix - Edge data.\n * @return {object}                  - Some metadata.\n */\nfunction iterate(options, NodeMatrix, EdgeMatrix) {\n    // Initializing variables\n    var l, r, n, n1, n2, rn, e, w, g, s;\n    var order = NodeMatrix.length, size = EdgeMatrix.length;\n    var adjustSizes = options.adjustSizes;\n    var thetaSquared = options.barnesHutTheta * options.barnesHutTheta;\n    var outboundAttCompensation, coefficient, xDist, yDist, ewc, distance, factor;\n    var RegionMatrix = [];\n    // 1) Initializing layout data\n    //-----------------------------\n    // Resetting positions & computing max values\n    for (n = 0; n < order; n += PPN) {\n        NodeMatrix[n + NODE_OLD_DX] = NodeMatrix[n + NODE_DX];\n        NodeMatrix[n + NODE_OLD_DY] = NodeMatrix[n + NODE_DY];\n        NodeMatrix[n + NODE_DX] = 0;\n        NodeMatrix[n + NODE_DY] = 0;\n    }\n    // If outbound attraction distribution, compensate\n    if (options.outboundAttractionDistribution) {\n        outboundAttCompensation = 0;\n        for (n = 0; n < order; n += PPN) {\n            outboundAttCompensation += NodeMatrix[n + NODE_MASS];\n        }\n        outboundAttCompensation /= (order / PPN);\n    }\n    // 1.bis) Barnes-Hut computation\n    //------------------------------\n    if (options.barnesHutOptimize) {\n        // Setting up\n        var minX = Infinity, maxX = -Infinity, minY = Infinity, maxY = -Infinity, q, q2, subdivisionAttempts;\n        // Computing min and max values\n        for (n = 0; n < order; n += PPN) {\n            minX = Math.min(minX, NodeMatrix[n + NODE_X]);\n            maxX = Math.max(maxX, NodeMatrix[n + NODE_X]);\n            minY = Math.min(minY, NodeMatrix[n + NODE_Y]);\n            maxY = Math.max(maxY, NodeMatrix[n + NODE_Y]);\n        }\n        // squarify bounds, it's a quadtree\n        var dx = maxX - minX, dy = maxY - minY;\n        if (dx > dy) {\n            minY -= (dx - dy) / 2;\n            maxY = minY + dx;\n        }\n        else {\n            minX -= (dy - dx) / 2;\n            maxX = minX + dy;\n        }\n        // Build the Barnes Hut root region\n        RegionMatrix[0 + REGION_NODE] = -1;\n        RegionMatrix[0 + REGION_CENTER_X] = (minX + maxX) / 2;\n        RegionMatrix[0 + REGION_CENTER_Y] = (minY + maxY) / 2;\n        RegionMatrix[0 + REGION_SIZE] = Math.max(maxX - minX, maxY - minY);\n        RegionMatrix[0 + REGION_NEXT_SIBLING] = -1;\n        RegionMatrix[0 + REGION_FIRST_CHILD] = -1;\n        RegionMatrix[0 + REGION_MASS] = 0;\n        RegionMatrix[0 + REGION_MASS_CENTER_X] = 0;\n        RegionMatrix[0 + REGION_MASS_CENTER_Y] = 0;\n        // Add each node in the tree\n        l = 1;\n        for (n = 0; n < order; n += PPN) {\n            // Current region, starting with root\n            r = 0;\n            subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n            while (true) {\n                // Are there sub-regions?\n                // We look at first child index\n                if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n                    // There are sub-regions\n                    // We just iterate to find a \"leaf\" of the tree\n                    // that is an empty region or a region with a single node\n                    // (see next case)\n                    // Find the quadrant of n\n                    if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n                        if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                            // Top Left quarter\n                            q = RegionMatrix[r + REGION_FIRST_CHILD];\n                        }\n                        else {\n                            // Bottom Left quarter\n                            q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n                        }\n                    }\n                    else {\n                        if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                            // Top Right quarter\n                            q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n                        }\n                        else {\n                            // Bottom Right quarter\n                            q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n                        }\n                    }\n                    // Update center of mass and mass (we only do it for non-leave regions)\n                    RegionMatrix[r + REGION_MASS_CENTER_X] =\n                        (RegionMatrix[r + REGION_MASS_CENTER_X] * RegionMatrix[r + REGION_MASS] +\n                            NodeMatrix[n + NODE_X] * NodeMatrix[n + NODE_MASS]) /\n                            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n                    RegionMatrix[r + REGION_MASS_CENTER_Y] =\n                        (RegionMatrix[r + REGION_MASS_CENTER_Y] * RegionMatrix[r + REGION_MASS] +\n                            NodeMatrix[n + NODE_Y] * NodeMatrix[n + NODE_MASS]) /\n                            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n                    RegionMatrix[r + REGION_MASS] += NodeMatrix[n + NODE_MASS];\n                    // Iterate on the right quadrant\n                    r = q;\n                    continue;\n                }\n                else {\n                    // There are no sub-regions: we are in a \"leaf\"\n                    // Is there a node in this leave?\n                    if (RegionMatrix[r + REGION_NODE] < 0) {\n                        // There is no node in region:\n                        // we record node n and go on\n                        RegionMatrix[r + REGION_NODE] = n;\n                        break;\n                    }\n                    else {\n                        // There is a node in this region\n                        // We will need to create sub-regions, stick the two\n                        // nodes (the old one r[0] and the new one n) in two\n                        // subregions. If they fall in the same quadrant,\n                        // we will iterate.\n                        // Create sub-regions\n                        RegionMatrix[r + REGION_FIRST_CHILD] = l * PPR;\n                        w = RegionMatrix[r + REGION_SIZE] / 2; // new size (half)\n                        // NOTE: we use screen coordinates\n                        // from Top Left to Bottom Right\n                        // Top Left sub-region\n                        g = RegionMatrix[r + REGION_FIRST_CHILD];\n                        RegionMatrix[g + REGION_NODE] = -1;\n                        RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] - w;\n                        RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] - w;\n                        RegionMatrix[g + REGION_SIZE] = w;\n                        RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n                        RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n                        RegionMatrix[g + REGION_MASS] = 0;\n                        RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n                        RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n                        // Bottom Left sub-region\n                        g += PPR;\n                        RegionMatrix[g + REGION_NODE] = -1;\n                        RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] - w;\n                        RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] + w;\n                        RegionMatrix[g + REGION_SIZE] = w;\n                        RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n                        RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n                        RegionMatrix[g + REGION_MASS] = 0;\n                        RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n                        RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n                        // Top Right sub-region\n                        g += PPR;\n                        RegionMatrix[g + REGION_NODE] = -1;\n                        RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] + w;\n                        RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] - w;\n                        RegionMatrix[g + REGION_SIZE] = w;\n                        RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n                        RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n                        RegionMatrix[g + REGION_MASS] = 0;\n                        RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n                        RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n                        // Bottom Right sub-region\n                        g += PPR;\n                        RegionMatrix[g + REGION_NODE] = -1;\n                        RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] + w;\n                        RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] + w;\n                        RegionMatrix[g + REGION_SIZE] = w;\n                        RegionMatrix[g + REGION_NEXT_SIBLING] = RegionMatrix[r + REGION_NEXT_SIBLING];\n                        RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n                        RegionMatrix[g + REGION_MASS] = 0;\n                        RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n                        RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n                        l += 4;\n                        // Now the goal is to find two different sub-regions\n                        // for the two nodes: the one previously recorded (r[0])\n                        // and the one we want to add (n)\n                        // Find the quadrant of the old node\n                        if (NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n                            if (NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                                // Top Left quarter\n                                q = RegionMatrix[r + REGION_FIRST_CHILD];\n                            }\n                            else {\n                                // Bottom Left quarter\n                                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n                            }\n                        }\n                        else {\n                            if (NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                                // Top Right quarter\n                                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n                            }\n                            else {\n                                // Bottom Right quarter\n                                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n                            }\n                        }\n                        // We remove r[0] from the region r, add its mass to r and record it in q\n                        RegionMatrix[r + REGION_MASS] = NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_MASS];\n                        RegionMatrix[r + REGION_MASS_CENTER_X] = NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X];\n                        RegionMatrix[r + REGION_MASS_CENTER_Y] = NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y];\n                        RegionMatrix[q + REGION_NODE] = RegionMatrix[r + REGION_NODE];\n                        RegionMatrix[r + REGION_NODE] = -1;\n                        // Find the quadrant of n\n                        if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n                            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                                // Top Left quarter\n                                q2 = RegionMatrix[r + REGION_FIRST_CHILD];\n                            }\n                            else {\n                                // Bottom Left quarter\n                                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n                            }\n                        }\n                        else {\n                            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                                // Top Right quarter\n                                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n                            }\n                            else {\n                                // Bottom Right quarter\n                                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n                            }\n                        }\n                        if (q === q2) {\n                            // If both nodes are in the same quadrant,\n                            // we have to try it again on this quadrant\n                            if (subdivisionAttempts--) {\n                                r = q;\n                                continue; // while\n                            }\n                            else {\n                                // we are out of precision here, and we cannot subdivide anymore\n                                // but we have to break the loop anyway\n                                subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n                                break; // while\n                            }\n                        }\n                        // If both quadrants are different, we record n\n                        // in its quadrant\n                        RegionMatrix[q2 + REGION_NODE] = n;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    // 2) Repulsion\n    //--------------\n    // NOTES: adjustSizes = antiCollision & scalingRatio = coefficient\n    if (options.barnesHutOptimize) {\n        coefficient = options.scalingRatio;\n        // Applying repulsion through regions\n        for (n = 0; n < order; n += PPN) {\n            // Computing leaf quad nodes iteration\n            r = 0; // Starting with root region\n            while (true) {\n                if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n                    // The region has sub-regions\n                    // We run the Barnes Hut test to see if we are at the right distance\n                    distance = ((Math.pow(NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X], 2)) +\n                        (Math.pow(NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y], 2)));\n                    s = RegionMatrix[r + REGION_SIZE];\n                    if ((4 * s * s) / distance < thetaSquared) {\n                        // We treat the region as a single body, and we repulse\n                        xDist = NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X];\n                        yDist = NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y];\n                        if (adjustSizes === true) {\n                            //-- Linear Anti-collision Repulsion\n                            if (distance > 0) {\n                                factor = coefficient * NodeMatrix[n + NODE_MASS] *\n                                    RegionMatrix[r + REGION_MASS] / distance;\n                                NodeMatrix[n + NODE_DX] += xDist * factor;\n                                NodeMatrix[n + NODE_DY] += yDist * factor;\n                            }\n                            else if (distance < 0) {\n                                factor = -coefficient * NodeMatrix[n + NODE_MASS] *\n                                    RegionMatrix[r + REGION_MASS] / Math.sqrt(distance);\n                                NodeMatrix[n + NODE_DX] += xDist * factor;\n                                NodeMatrix[n + NODE_DY] += yDist * factor;\n                            }\n                        }\n                        else {\n                            //-- Linear Repulsion\n                            if (distance > 0) {\n                                factor = coefficient * NodeMatrix[n + NODE_MASS] *\n                                    RegionMatrix[r + REGION_MASS] / distance;\n                                NodeMatrix[n + NODE_DX] += xDist * factor;\n                                NodeMatrix[n + NODE_DY] += yDist * factor;\n                            }\n                        }\n                        // When this is done, we iterate. We have to look at the next sibling.\n                        r = RegionMatrix[r + REGION_NEXT_SIBLING];\n                        if (r < 0)\n                            break; // No next sibling: we have finished the tree\n                        continue;\n                    }\n                    else {\n                        // The region is too close and we have to look at sub-regions\n                        r = RegionMatrix[r + REGION_FIRST_CHILD];\n                        continue;\n                    }\n                }\n                else {\n                    // The region has no sub-region\n                    // If there is a node r[0] and it is not n, then repulse\n                    rn = RegionMatrix[r + REGION_NODE];\n                    if (rn >= 0 && rn !== n) {\n                        xDist = NodeMatrix[n + NODE_X] - NodeMatrix[rn + NODE_X];\n                        yDist = NodeMatrix[n + NODE_Y] - NodeMatrix[rn + NODE_Y];\n                        distance = xDist * xDist + yDist * yDist;\n                        if (adjustSizes === true) {\n                            //-- Linear Anti-collision Repulsion\n                            if (distance > 0) {\n                                factor = coefficient * NodeMatrix[n + NODE_MASS] *\n                                    NodeMatrix[rn + NODE_MASS] / distance;\n                                NodeMatrix[n + NODE_DX] += xDist * factor;\n                                NodeMatrix[n + NODE_DY] += yDist * factor;\n                            }\n                            else if (distance < 0) {\n                                factor = -coefficient * NodeMatrix[n + NODE_MASS] *\n                                    NodeMatrix[rn + NODE_MASS] / Math.sqrt(distance);\n                                NodeMatrix[n + NODE_DX] += xDist * factor;\n                                NodeMatrix[n + NODE_DY] += yDist * factor;\n                            }\n                        }\n                        else {\n                            //-- Linear Repulsion\n                            if (distance > 0) {\n                                factor = coefficient * NodeMatrix[n + NODE_MASS] *\n                                    NodeMatrix[rn + NODE_MASS] / distance;\n                                NodeMatrix[n + NODE_DX] += xDist * factor;\n                                NodeMatrix[n + NODE_DY] += yDist * factor;\n                            }\n                        }\n                    }\n                    // When this is done, we iterate. We have to look at the next sibling.\n                    r = RegionMatrix[r + REGION_NEXT_SIBLING];\n                    if (r < 0)\n                        break; // No next sibling: we have finished the tree\n                    continue;\n                }\n            }\n        }\n    }\n    else {\n        coefficient = options.scalingRatio;\n        // Square iteration\n        for (n1 = 0; n1 < order; n1 += PPN) {\n            for (n2 = 0; n2 < n1; n2 += PPN) {\n                // Common to both methods\n                xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n                yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n                if (adjustSizes === true) {\n                    //-- Anticollision Linear Repulsion\n                    distance = Math.sqrt(xDist * xDist + yDist * yDist) -\n                        NodeMatrix[n1 + NODE_SIZE] -\n                        NodeMatrix[n2 + NODE_SIZE];\n                    if (distance > 0) {\n                        factor = coefficient *\n                            NodeMatrix[n1 + NODE_MASS] *\n                            NodeMatrix[n2 + NODE_MASS] /\n                            distance / distance;\n                        // Updating nodes' dx and dy\n                        NodeMatrix[n1 + NODE_DX] += xDist * factor;\n                        NodeMatrix[n1 + NODE_DY] += yDist * factor;\n                        NodeMatrix[n2 + NODE_DX] += xDist * factor;\n                        NodeMatrix[n2 + NODE_DY] += yDist * factor;\n                    }\n                    else if (distance < 0) {\n                        factor = 100 * coefficient *\n                            NodeMatrix[n1 + NODE_MASS] *\n                            NodeMatrix[n2 + NODE_MASS];\n                        // Updating nodes' dx and dy\n                        NodeMatrix[n1 + NODE_DX] += xDist * factor;\n                        NodeMatrix[n1 + NODE_DY] += yDist * factor;\n                        NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n                        NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n                    }\n                }\n                else {\n                    //-- Linear Repulsion\n                    distance = Math.sqrt(xDist * xDist + yDist * yDist);\n                    if (distance > 0) {\n                        factor = coefficient *\n                            NodeMatrix[n1 + NODE_MASS] *\n                            NodeMatrix[n2 + NODE_MASS] /\n                            distance / distance;\n                        // Updating nodes' dx and dy\n                        NodeMatrix[n1 + NODE_DX] += xDist * factor;\n                        NodeMatrix[n1 + NODE_DY] += yDist * factor;\n                        NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n                        NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n                    }\n                }\n            }\n        }\n    }\n    // 3) Gravity\n    //------------\n    g = options.gravity / options.scalingRatio;\n    coefficient = options.scalingRatio;\n    for (n = 0; n < order; n += PPN) {\n        factor = 0;\n        // Common to both methods\n        xDist = NodeMatrix[n + NODE_X];\n        yDist = NodeMatrix[n + NODE_Y];\n        distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n        if (options.strongGravityMode) {\n            //-- Strong gravity\n            if (distance > 0)\n                factor = coefficient * NodeMatrix[n + NODE_MASS] * g;\n        }\n        else {\n            //-- Linear Anti-collision Repulsion n\n            if (distance > 0)\n                factor = coefficient * NodeMatrix[n + NODE_MASS] * g / distance;\n        }\n        // Updating node's dx and dy\n        NodeMatrix[n + NODE_DX] -= xDist * factor;\n        NodeMatrix[n + NODE_DY] -= yDist * factor;\n    }\n    // 4) Attraction\n    //---------------\n    coefficient = 1 *\n        (options.outboundAttractionDistribution ?\n            outboundAttCompensation :\n            1);\n    // TODO: simplify distance\n    // TODO: coefficient is always used as -c --> optimize?\n    for (e = 0; e < size; e += PPE) {\n        n1 = EdgeMatrix[e + EDGE_SOURCE];\n        n2 = EdgeMatrix[e + EDGE_TARGET];\n        w = EdgeMatrix[e + EDGE_WEIGHT];\n        // Edge weight influence\n        ewc = Math.pow(w, options.edgeWeightInfluence);\n        // Common measures\n        xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n        yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n        // Applying attraction to nodes\n        if (adjustSizes === true) {\n            distance = Math.sqrt((Math.pow(xDist, 2) + Math.pow(yDist, 2)) -\n                NodeMatrix[n1 + NODE_SIZE] -\n                NodeMatrix[n2 + NODE_SIZE]);\n            if (options.linLogMode) {\n                if (options.outboundAttractionDistribution) {\n                    //-- LinLog Degree Distributed Anti-collision Attraction\n                    if (distance > 0) {\n                        factor = -coefficient * ewc * Math.log(1 + distance) /\n                            distance /\n                            NodeMatrix[n1 + NODE_MASS];\n                    }\n                }\n                else {\n                    //-- LinLog Anti-collision Attraction\n                    if (distance > 0) {\n                        factor = -coefficient * ewc * Math.log(1 + distance) / distance;\n                    }\n                }\n            }\n            else {\n                if (options.outboundAttractionDistribution) {\n                    //-- Linear Degree Distributed Anti-collision Attraction\n                    if (distance > 0) {\n                        factor = -coefficient * ewc / NodeMatrix[n1 + NODE_MASS];\n                    }\n                }\n                else {\n                    //-- Linear Anti-collision Attraction\n                    if (distance > 0) {\n                        factor = -coefficient * ewc;\n                    }\n                }\n            }\n        }\n        else {\n            distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n            if (options.linLogMode) {\n                if (options.outboundAttractionDistribution) {\n                    //-- LinLog Degree Distributed Attraction\n                    if (distance > 0) {\n                        factor = -coefficient * ewc * Math.log(1 + distance) /\n                            distance /\n                            NodeMatrix[n1 + NODE_MASS];\n                    }\n                }\n                else {\n                    //-- LinLog Attraction\n                    if (distance > 0)\n                        factor = -coefficient * ewc * Math.log(1 + distance) / distance;\n                }\n            }\n            else {\n                if (options.outboundAttractionDistribution) {\n                    //-- Linear Attraction Mass Distributed\n                    // NOTE: Distance is set to 1 to override next condition\n                    distance = 1;\n                    factor = -coefficient * ewc / NodeMatrix[n1 + NODE_MASS];\n                }\n                else {\n                    //-- Linear Attraction\n                    // NOTE: Distance is set to 1 to override next condition\n                    distance = 1;\n                    factor = -coefficient * ewc;\n                }\n            }\n        }\n        // Updating nodes' dx and dy\n        // TODO: if condition or factor = 1?\n        if (distance > 0) {\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n        }\n    }\n    // 5) Apply Forces\n    //-----------------\n    var force, swinging, traction, nodespeed, newX, newY;\n    // MATH: sqrt and square distances\n    if (adjustSizes === true) {\n        for (n = 0; n < order; n += PPN) {\n            if (!NodeMatrix[n + NODE_FIXED]) {\n                force = Math.sqrt(Math.pow(NodeMatrix[n + NODE_DX], 2) +\n                    Math.pow(NodeMatrix[n + NODE_DY], 2));\n                if (force > MAX_FORCE) {\n                    NodeMatrix[n + NODE_DX] =\n                        NodeMatrix[n + NODE_DX] * MAX_FORCE / force;\n                    NodeMatrix[n + NODE_DY] =\n                        NodeMatrix[n + NODE_DY] * MAX_FORCE / force;\n                }\n                swinging = NodeMatrix[n + NODE_MASS] *\n                    Math.sqrt((NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n                        (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n                        (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                            (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]));\n                traction = Math.sqrt((NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n                    (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n                    (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                        (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])) / 2;\n                nodespeed =\n                    0.1 * Math.log(1 + traction) / (1 + Math.sqrt(swinging));\n                // Updating node's positon\n                newX = NodeMatrix[n + NODE_X] + NodeMatrix[n + NODE_DX] *\n                    (nodespeed / options.slowDown);\n                NodeMatrix[n + NODE_X] = newX;\n                newY = NodeMatrix[n + NODE_Y] + NodeMatrix[n + NODE_DY] *\n                    (nodespeed / options.slowDown);\n                NodeMatrix[n + NODE_Y] = newY;\n            }\n        }\n    }\n    else {\n        for (n = 0; n < order; n += PPN) {\n            if (!NodeMatrix[n + NODE_FIXED]) {\n                swinging = NodeMatrix[n + NODE_MASS] *\n                    Math.sqrt((NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n                        (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n                        (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                            (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]));\n                traction = Math.sqrt((NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n                    (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n                    (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                        (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])) / 2;\n                nodespeed = NodeMatrix[n + NODE_CONVERGENCE] *\n                    Math.log(1 + traction) / (1 + Math.sqrt(swinging));\n                // Updating node convergence\n                NodeMatrix[n + NODE_CONVERGENCE] =\n                    Math.min(1, Math.sqrt(nodespeed *\n                        (Math.pow(NodeMatrix[n + NODE_DX], 2) +\n                            Math.pow(NodeMatrix[n + NODE_DY], 2)) /\n                        (1 + Math.sqrt(swinging))));\n                // Updating node's positon\n                newX = NodeMatrix[n + NODE_X] + NodeMatrix[n + NODE_DX] *\n                    (nodespeed / options.slowDown);\n                NodeMatrix[n + NODE_X] = newX;\n                newY = NodeMatrix[n + NODE_Y] + NodeMatrix[n + NODE_DY] *\n                    (nodespeed / options.slowDown);\n                NodeMatrix[n + NODE_Y] = newY;\n            }\n        }\n    }\n    // We return the information about the layout (no need to return the matrices)\n    return {};\n}\n;\n/**\n * Graphology ForceAtlas2 Helpers\n * ===============================\n *\n * Miscellaneous helper functions.\n */\n/**\n * Function used to validate the given settings.\n *\n * @param  {object}      settings - Settings to validate.\n * @return {object|null}\n */\nfunction validateSettings(settings) {\n    if ('linLogMode' in settings &&\n        typeof settings.linLogMode !== 'boolean')\n        return { message: 'the `linLogMode` setting should be a boolean.' };\n    if ('outboundAttractionDistribution' in settings &&\n        typeof settings.outboundAttractionDistribution !== 'boolean')\n        return { message: 'the `outboundAttractionDistribution` setting should be a boolean.' };\n    if ('adjustSizes' in settings &&\n        typeof settings.adjustSizes !== 'boolean')\n        return { message: 'the `adjustSizes` setting should be a boolean.' };\n    if ('edgeWeightInfluence' in settings &&\n        typeof settings.edgeWeightInfluence !== 'number' &&\n        settings.edgeWeightInfluence < 0)\n        return { message: 'the `edgeWeightInfluence` setting should be a number >= 0.' };\n    if ('scalingRatio' in settings &&\n        typeof settings.scalingRatio !== 'number' &&\n        settings.scalingRatio < 0)\n        return { message: 'the `scalingRatio` setting should be a number >= 0.' };\n    if ('strongGravityMode' in settings &&\n        typeof settings.strongGravityMode !== 'boolean')\n        return { message: 'the `strongGravityMode` setting should be a boolean.' };\n    if ('gravity' in settings &&\n        typeof settings.gravity !== 'number' &&\n        settings.gravity < 0)\n        return { message: 'the `gravity` setting should be a number >= 0.' };\n    if ('slowDown' in settings &&\n        typeof settings.slowDown !== 'number' &&\n        settings.slowDown < 0)\n        return { message: 'the `slowDown` setting should be a number >= 0.' };\n    if ('barnesHutOptimize' in settings &&\n        typeof settings.barnesHutOptimize !== 'boolean')\n        return { message: 'the `barnesHutOptimize` setting should be a boolean.' };\n    if ('barnesHutTheta' in settings &&\n        typeof settings.barnesHutTheta !== 'number' &&\n        settings.barnesHutTheta < 0)\n        return { message: 'the `barnesHutTheta` setting should be a number >= 0.' };\n    return null;\n}\n;\n/**\n * Function generating a flat matrix for both nodes & edges of the given graph.\n *\n * @param  {Graph}  graph - Target graph.\n * @return {object}       - Both matrices.\n */\nfunction graphToByteArrays(graph) {\n    var nodes = graph.nodes(), edges = graph.edges(), order = nodes.length, size = edges.length, index = {}, i, j;\n    var NodeMatrix = new Float32Array(order * PPN), EdgeMatrix = new Float32Array(size * PPE);\n    // Iterate through nodes\n    for (i = j = 0; i < order; i++) {\n        // Node index\n        index[nodes[i]] = j;\n        // Populating byte array\n        NodeMatrix[j] = graph.getNodeAttribute(nodes[i], 'x');\n        NodeMatrix[j + 1] = graph.getNodeAttribute(nodes[i], 'y');\n        NodeMatrix[j + 2] = 0;\n        NodeMatrix[j + 3] = 0;\n        NodeMatrix[j + 4] = 0;\n        NodeMatrix[j + 5] = 0;\n        NodeMatrix[j + 6] = 1 + graph.degree(nodes[i]);\n        NodeMatrix[j + 7] = 1;\n        NodeMatrix[j + 8] = graph.getNodeAttribute(nodes[i], 'size') || 1;\n        NodeMatrix[j + 9] = 0;\n        j += PPN;\n    }\n    // Iterate through edges\n    for (i = j = 0; i < size; i++) {\n        // Populating byte array\n        EdgeMatrix[j] = index[graph.source(edges[i])];\n        EdgeMatrix[j + 1] = index[graph.target(edges[i])];\n        EdgeMatrix[j + 2] = graph.getEdgeAttribute(edges[i], 'weight') || 0;\n        j += PPE;\n    }\n    return {\n        nodes: NodeMatrix,\n        edges: EdgeMatrix\n    };\n}\n;\n/**\n * Function applying the layout back to the graph.\n *\n * @param {Graph}        graph      - Target graph.\n * @param {Float32Array} NodeMatrix - Node matrix.\n */\nfunction assignLayoutChanges(graph, NodeMatrix) {\n    var nodes = graph.nodes();\n    for (var i = 0, j = 0, l = NodeMatrix.length; i < l; i += PPN) {\n        graph.setNodeAttribute(nodes[j], 'x', NodeMatrix[i]);\n        graph.setNodeAttribute(nodes[j], 'y', NodeMatrix[i + 1]);\n        j++;\n    }\n}\n;\n/**\n * Function collecting the layout positions.\n *\n * @param  {Graph}        graph      - Target graph.\n * @param  {Float32Array} NodeMatrix - Node matrix.\n * @return {object}                  - Map to node positions.\n */\nfunction collectLayoutChanges(graph, NodeMatrix) {\n    var nodes = graph.nodes(), positions = Object.create(null);\n    for (var i = 0, j = 0, l = NodeMatrix.length; i < l; i += PPN) {\n        positions[nodes[j]] = {\n            x: NodeMatrix[i],\n            y: NodeMatrix[i + 1]\n        };\n        j++;\n    }\n    return positions;\n}\n;\nfunction assignH(target, ...other) {\n    target = target || {};\n    var objects = Array.prototype.slice.call(arguments).slice(1), i, k, l;\n    for (i = 0, l = objects.length; i < l; i++) {\n        if (!objects[i])\n            continue;\n        for (k in objects[i])\n            target[k] = objects[i][k];\n    }\n    return target;\n}\n;\nconst DEFAULT_SETTINGS = {\n    linLogMode: false,\n    outboundAttractionDistribution: false,\n    adjustSizes: false,\n    edgeWeightInfluence: 0,\n    scalingRatio: 1,\n    strongGravityMode: false,\n    gravity: 1,\n    slowDown: 1,\n    barnesHutOptimize: false,\n    barnesHutTheta: 0.5\n};\nfunction abstractSynchronousLayout(graph, params) {\n    let assign = null;\n    if (typeof params === 'number')\n        params = { iterations: params };\n    var iterations = params.iterations;\n    // Validating settings\n    var settings = assignH({}, DEFAULT_SETTINGS, params.settings), validationError = validateSettings(settings);\n    if (validationError)\n        throw new Error('graphology-layout-forceatlas2: ' + validationError.message);\n    // Building matrices\n    var matrices = graphToByteArrays(graph), i;\n    // Iterating\n    for (i = 0; i < iterations; i++)\n        iterate(settings, matrices.nodes, matrices.edges);\n    // Applying\n    if (assign) {\n        assignLayoutChanges(graph, matrices.nodes);\n        return;\n    }\n    return collectLayoutChanges(graph, matrices.nodes);\n}\nself.addEventListener('message', function (e) {\n    let postMessage = self.postMessage;\n    const nodes = e.data.nodes;\n    const edges = e.data.edges;\n    const params = e.data.params;\n    let graph = new Graph();\n    nodes.forEach(node => {\n        graph.addNode(node.meshIndex, {\n            x: node.x,\n            y: node.y\n        });\n    });\n    edges.forEach(edge => {\n        graph.addEdge(edge.source, edge.destination);\n    });\n    var iterations = params.iterations;\n    // Validating settings\n    var settings = assignH({}, DEFAULT_SETTINGS, params.settings), validationError = validateSettings(settings);\n    if (validationError)\n        throw new Error('graphology-layout-forceatlas2: ' + validationError.message);\n    // Building matrices\n    var matrices = graphToByteArrays(graph), i;\n    // Iterating\n    for (i = 0; i < iterations; i++) {\n        if (i % Math.floor(iterations / 100) == 0) {\n            let res = collectLayoutChanges(graph, matrices.nodes);\n            postMessage({\n                type: 'progress',\n                progress: (i / iterations) * 100,\n                positions: res\n            });\n        }\n        iterate(settings, matrices.nodes, matrices.edges);\n    }\n    let res = collectLayoutChanges(graph, matrices.nodes);\n    postMessage({\n        type: 'finish',\n        positions: res,\n        progress: 0\n    });\n});\n"],"sourceRoot":""}